{
    "openapi": "3.0.4",
    "info": {
        "title": "1.0",
        "description": "",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.shipbob.com/1.0"
        }
    ],
    "paths": {
        "/return": {
            "post": {
                "tags": [
                    "Returns"
                ],
                "summary": "Create Return Order\n",
                "operationId": "729d0c0abc4835ba638c9a2a66ebc2d4",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Post.Api.V1.Public.Create.Shipbob.Channel.Id.Integer"
                        }
                    },
                    {
                        "name": "creationSourceId",
                        "in": "header",
                        "description": "",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Post.Api.V1.Public.Create.CreationSourceId.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 3,
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillmentCenter": {
                                            "id": 0,
                                            "name": "string"
                                        },
                                        "inventory": [
                                            {
                                                "id": 0,
                                                "lotDate": "2019-08-24T14:15:22.0000000+00:00",
                                                "lotNumber": "string",
                                                "quantity": 0,
                                                "requestedAction": 0
                                            }
                                        ],
                                        "originalShipmentId": 0,
                                        "referenceId": "string",
                                        "trackingNumber": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillmentCenter": {
                                            "id": 0,
                                            "name": "string"
                                        },
                                        "inventory": [
                                            {
                                                "id": 0,
                                                "lotDate": "2019-08-24T14:15:22.0000000+00:00",
                                                "lotNumber": "string",
                                                "quantity": 0,
                                                "requestedAction": 0
                                            }
                                        ],
                                        "originalShipmentId": 0,
                                        "referenceId": "string",
                                        "trackingNumber": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillmentCenter": {
                                            "id": 0,
                                            "name": "string"
                                        },
                                        "inventory": [
                                            {
                                                "id": 0,
                                                "lotDate": "2019-08-24T14:15:22.0000000+00:00",
                                                "lotNumber": "string",
                                                "quantity": 0,
                                                "requestedAction": 0
                                            }
                                        ],
                                        "originalShipmentId": 0,
                                        "referenceId": "string",
                                        "trackingNumber": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    }
                }
            },
            "get": {
                "tags": [
                    "Returns"
                ],
                "summary": "Get Return Orders\n",
                "operationId": "09ca3f93325d9c169f4d54f2d37ee0b0",
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of return orders to get",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Page.Integer"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of return orders per page to request",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Limit.Integer"
                        }
                    },
                    {
                        "name": "SortOrder",
                        "in": "query",
                        "description": "Order to sort results by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.SortOrder"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "Newest",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Start date to filter orders inserted later than",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.StartDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "End date to filter orders inserted earlier than",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.EndDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IDs",
                        "in": "query",
                        "description": "Comma separated list of return orders ids to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.IDs.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "ReferenceIds",
                        "in": "query",
                        "description": "Comma separated list of reference ids to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.ReferenceIds.StringArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    "string"
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "description": "Comma separated list of statuses to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.ReturnStatusArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    "AwaitingArrival"
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "FulfillmentCenterIds",
                        "in": "query",
                        "description": "Comma separated list of destination fulfillment center IDs to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.FulfillmentCenterIds.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "TrackingNumbers",
                        "in": "query",
                        "description": "Comma separated list of tracking numbers to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.TrackingNumbers.StringArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    "string"
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "OriginalShipmentIds",
                        "in": "query",
                        "description": "Comma separated list of original shipment IDs to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.OriginalShipmentIds.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "InventoryIds",
                        "in": "query",
                        "description": "Comma separated list of inventory IDs contained in return to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.InventoryIds.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Page-Number": {
                                "description": "Number of the current page",
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Get.1.0.Return.OK.Page.Number.Int"
                                }
                            },
                            "Total-Pages": {
                                "description": "Total number of pages of results",
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Get.1.0.Return.OK.Total.Pages.Int"
                                }
                            },
                            "Total-Count": {
                                "description": "Total number of results",
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Get.1.0.Return.OK.Total.Count.Int"
                                }
                            },
                            "Page-Size": {
                                "description": "Number of results per page",
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Get.1.0.Return.OK.Page.Size.Int"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.ReturnOrderViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "channel": {
                                                    "id": 0,
                                                    "name": "ShipBobs-Shopify-Store"
                                                },
                                                "completed_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "customer_name": "string",
                                                "fulfillment_center": {
                                                    "id": 0,
                                                    "name": "Cicero (IL)"
                                                },
                                                "id": 0,
                                                "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "inventory": [
                                                    {
                                                        "action_requested": {
                                                            "action": "Default",
                                                            "action_type": "InventoryDefault",
                                                            "instructions": "string"
                                                        },
                                                        "action_taken": [
                                                            {
                                                                "action": "Default",
                                                                "action_reason": "string",
                                                                "lot_information": [
                                                                    {
                                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                        "lot_number": "string",
                                                                        "quantity_processed": 0
                                                                    }
                                                                ],
                                                                "quantity_processed": 1
                                                            }
                                                        ],
                                                        "id": 0,
                                                        "name": "string",
                                                        "quantity": 0
                                                    }
                                                ],
                                                "invoice_amount": 0.1,
                                                "original_shipment_id": 0,
                                                "reference_id": "string",
                                                "return_type": "Regular",
                                                "status": "AwaitingArrival",
                                                "store_order_id": "string",
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                "transactions": [
                                                    {
                                                        "amount": 2.5,
                                                        "transaction_type": "ReturnLabelInvoice"
                                                    }
                                                ]
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    }
                }
            }
        },
        "/return/{id}/statushistory": {
            "get": {
                "tags": [
                    "Returns"
                ],
                "summary": "Get One Return's status history\n",
                "operationId": "0f8c7c349e3059ee2704f50148d11abe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the return order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Id.Statushistory.Id.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Id.Statushistory.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.ReturnOrderStatusHistoryViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "status": "AwaitingArrival",
                                                "time_stamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Get.1.0.Return.Id.Statushistory.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/return/{id}": {
            "get": {
                "tags": [
                    "Returns"
                ],
                "summary": "Get Return Order\n",
                "operationId": "7c1ecda086f397c4c23722abb27926ce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the return order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Id.Id.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Get.1.0.Return.Id.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.ReturnOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "channel": {
                                                "id": 0,
                                                "name": "ShipBobs-Shopify-Store"
                                            },
                                            "completed_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "customer_name": "string",
                                            "fulfillment_center": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "id": 0,
                                            "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "inventory": [
                                                {
                                                    "action_requested": {
                                                        "action": "Default",
                                                        "action_type": "InventoryDefault",
                                                        "instructions": "string"
                                                    },
                                                    "action_taken": [
                                                        {
                                                            "action": "Default",
                                                            "action_reason": "string",
                                                            "lot_information": [
                                                                {
                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                    "lot_number": "string",
                                                                    "quantity_processed": 0
                                                                }
                                                            ],
                                                            "quantity_processed": 1
                                                        }
                                                    ],
                                                    "id": 0,
                                                    "name": "string",
                                                    "quantity": 0
                                                }
                                            ],
                                            "invoice_amount": 0.1,
                                            "original_shipment_id": 0,
                                            "reference_id": "string",
                                            "return_type": "Regular",
                                            "status": "AwaitingArrival",
                                            "store_order_id": "string",
                                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                            "transactions": [
                                                {
                                                    "amount": 2.5,
                                                    "transaction_type": "ReturnLabelInvoice"
                                                }
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Get.1.0.Return.Id.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Returns"
                ],
                "summary": "Modify Return Order\n",
                "operationId": "8fd3220063faa081315dc98002f9fac8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the return order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Put.1.0.Return.Id.Id.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Put.1.0.Return.Id.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Model defining the return",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnViewModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillment_center": {
                                            "id": 0,
                                            "name": "Cicero (IL)"
                                        },
                                        "inventory": [
                                            {
                                                "id": 111222,
                                                "quantity": 1,
                                                "requested_action": "Default"
                                            }
                                        ],
                                        "original_shipment_id": 123456,
                                        "reference_id": "ShipBob_Return_123",
                                        "tracking_number": "1Z9999999999999999"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnViewModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillment_center": {
                                            "id": 0,
                                            "name": "Cicero (IL)"
                                        },
                                        "inventory": [
                                            {
                                                "id": 111222,
                                                "quantity": 1,
                                                "requested_action": "Default"
                                            }
                                        ],
                                        "original_shipment_id": 123456,
                                        "reference_id": "ShipBob_Return_123",
                                        "tracking_number": "1Z9999999999999999"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnViewModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillment_center": {
                                            "id": 0,
                                            "name": "Cicero (IL)"
                                        },
                                        "inventory": [
                                            {
                                                "id": 111222,
                                                "quantity": 1,
                                                "requested_action": "Default"
                                            }
                                        ],
                                        "original_shipment_id": 123456,
                                        "reference_id": "ShipBob_Return_123",
                                        "tracking_number": "1Z9999999999999999"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Returns.CreateReturnViewModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "fulfillment_center": {
                                            "id": 0,
                                            "name": "Cicero (IL)"
                                        },
                                        "inventory": [
                                            {
                                                "id": 111222,
                                                "quantity": 1,
                                                "requested_action": "Default"
                                            }
                                        ],
                                        "original_shipment_id": 123456,
                                        "reference_id": "ShipBob_Return_123",
                                        "tracking_number": "1Z9999999999999999"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.ReturnOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "channel": {
                                                "id": 0,
                                                "name": "ShipBobs-Shopify-Store"
                                            },
                                            "completed_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "customer_name": "string",
                                            "fulfillment_center": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "id": 0,
                                            "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "inventory": [
                                                {
                                                    "action_requested": {
                                                        "action": "Default",
                                                        "action_type": "InventoryDefault",
                                                        "instructions": "string"
                                                    },
                                                    "action_taken": [
                                                        {
                                                            "action": "Default",
                                                            "action_reason": "string",
                                                            "lot_information": [
                                                                {
                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                    "lot_number": "string",
                                                                    "quantity_processed": 0
                                                                }
                                                            ],
                                                            "quantity_processed": 1
                                                        }
                                                    ],
                                                    "id": 0,
                                                    "name": "string",
                                                    "quantity": 0
                                                }
                                            ],
                                            "invoice_amount": 0.1,
                                            "original_shipment_id": 0,
                                            "reference_id": "string",
                                            "return_type": "Regular",
                                            "status": "AwaitingArrival",
                                            "store_order_id": "string",
                                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                            "transactions": [
                                                {
                                                    "amount": 2.5,
                                                    "transaction_type": "ReturnLabelInvoice"
                                                }
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Put.1.0.Return.Id.Bad.Request.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Put.1.0.Return.Id.Unprocessable.Entity.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/return/{id}/cancel": {
            "post": {
                "tags": [
                    "Returns"
                ],
                "summary": "Cancel Return Order\n",
                "operationId": "99af59d858e43820eece4d8106b726c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the return order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Post.1.0.Return.Id.Cancel.Id.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Returns.Post.1.0.Return.Id.Cancel.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.ReturnOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "channel": {
                                                "id": 0,
                                                "name": "ShipBobs-Shopify-Store"
                                            },
                                            "completed_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "customer_name": "string",
                                            "fulfillment_center": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "id": 0,
                                            "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "inventory": [
                                                {
                                                    "action_requested": {
                                                        "action": "Default",
                                                        "action_type": "InventoryDefault",
                                                        "instructions": "string"
                                                    },
                                                    "action_taken": [
                                                        {
                                                            "action": "Default",
                                                            "action_reason": "string",
                                                            "lot_information": [
                                                                {
                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                    "lot_number": "string",
                                                                    "quantity_processed": 0
                                                                }
                                                            ],
                                                            "quantity_processed": 1
                                                        }
                                                    ],
                                                    "id": 0,
                                                    "name": "string",
                                                    "quantity": 0
                                                }
                                            ],
                                            "invoice_amount": 0.1,
                                            "original_shipment_id": 0,
                                            "reference_id": "string",
                                            "return_type": "Regular",
                                            "status": "AwaitingArrival",
                                            "store_order_id": "string",
                                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                            "transactions": [
                                                {
                                                    "amount": 2.5,
                                                    "transaction_type": "ReturnLabelInvoice"
                                                }
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Post.1.0.Return.Id.Cancel.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Returns.Post.1.0.Return.Id.Cancel.Unprocessable.Entity.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "List inventory items\n",
                "operationId": "55ea81cc486b4660a8c518109ef38bec",
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of inventory items to get\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.Page.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 2147483647,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of inventory items per page to request\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.Limit.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IsActive",
                        "in": "query",
                        "description": "Whether the inventory should be active or not\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.IsActive.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IsDigital",
                        "in": "query",
                        "description": "Whether the inventory is digital or not\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.IsDigital.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IDs",
                        "in": "query",
                        "description": "Comma separated inventory ids to filter by\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.IDs.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "description": "Sort will default to ascending order for each field. \nTo sort in descending order please pass a \"-\" in front of the field name. \nFor example, Sort=-onHand,name will sort by onHand descending\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.Sort.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "string",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Search",
                        "in": "query",
                        "description": "Search is available for 2 fields, Inventory ID and Name -\n1. Expected behavior for search by Inventory ID is exact match\n2. Expected behavior for search by Inventory Name is partial match, i.e. does not have to be start of word, \nbut must be consecutive characters. This is not case sensitive.\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.Search.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "string",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "LocationType",
                        "in": "query",
                        "description": "LocationType is valid for hub, spoke, or lts.\nLocationType will default to all locations.\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.LocationType.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "string",
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.InventoryViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "dimensions": {
                                                    "depth": 0.1,
                                                    "length": 0.1,
                                                    "weight": 0.1,
                                                    "width": 0.1
                                                },
                                                "fulfillable_quantity_by_fulfillment_center": [
                                                    {
                                                        "awaiting_quantity": 0,
                                                        "committed_quantity": 0,
                                                        "fulfillable_quantity": 0,
                                                        "id": 0,
                                                        "internal_transfer_quantity": 0,
                                                        "name": "Cicero",
                                                        "onhand_quantity": 0
                                                    }
                                                ],
                                                "fulfillable_quantity_by_lot": [
                                                    {
                                                        "awaiting_quantity": 0,
                                                        "committed_quantity": 0,
                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "fulfillable_quantity": 0,
                                                        "fulfillable_quantity_by_fulfillment_center": [
                                                            {
                                                                "awaiting_quantity": 0,
                                                                "committed_quantity": 0,
                                                                "fulfillable_quantity": 0,
                                                                "id": 0,
                                                                "internal_transfer_quantity": 0,
                                                                "name": "Cicero",
                                                                "onhand_quantity": 0
                                                            }
                                                        ],
                                                        "internal_transfer_quantity": 0,
                                                        "lot_number": "1234",
                                                        "onhand_quantity": 0
                                                    }
                                                ],
                                                "id": 0,
                                                "is_active": true,
                                                "is_case_pick": true,
                                                "is_digital": true,
                                                "is_lot": true,
                                                "name": "Medium Blue T-Shirt",
                                                "packaging_attribute": "None",
                                                "total_awaiting_quantity": 0,
                                                "total_backordered_quantity": 0,
                                                "total_committed_quantity": 0,
                                                "total_exception_quantity": 0,
                                                "total_fulfillable_quantity": 0,
                                                "total_internal_transfer_quantity": 0,
                                                "total_onhand_quantity": 0,
                                                "total_sellable_quantity": 0
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product/{productId}/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get a list of inventory items by product id\n",
                "operationId": "7edeb14d70636173d38184a944a23735",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The product id to get inventory for\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Product.ProductId.Inventory.ProductId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation\n",
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Product.ProductId.Inventory.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.InventoryViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "dimensions": {
                                                    "depth": 0.1,
                                                    "length": 0.1,
                                                    "weight": 0.1,
                                                    "width": 0.1
                                                },
                                                "fulfillable_quantity_by_fulfillment_center": [
                                                    {
                                                        "awaiting_quantity": 0,
                                                        "committed_quantity": 0,
                                                        "fulfillable_quantity": 0,
                                                        "id": 0,
                                                        "internal_transfer_quantity": 0,
                                                        "name": "Cicero",
                                                        "onhand_quantity": 0
                                                    }
                                                ],
                                                "fulfillable_quantity_by_lot": [
                                                    {
                                                        "awaiting_quantity": 0,
                                                        "committed_quantity": 0,
                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "fulfillable_quantity": 0,
                                                        "fulfillable_quantity_by_fulfillment_center": [
                                                            {
                                                                "awaiting_quantity": 0,
                                                                "committed_quantity": 0,
                                                                "fulfillable_quantity": 0,
                                                                "id": 0,
                                                                "internal_transfer_quantity": 0,
                                                                "name": "Cicero",
                                                                "onhand_quantity": 0
                                                            }
                                                        ],
                                                        "internal_transfer_quantity": 0,
                                                        "lot_number": "1234",
                                                        "onhand_quantity": 0
                                                    }
                                                ],
                                                "id": 0,
                                                "is_active": true,
                                                "is_case_pick": true,
                                                "is_digital": true,
                                                "is_lot": true,
                                                "name": "Medium Blue T-Shirt",
                                                "packaging_attribute": "None",
                                                "total_awaiting_quantity": 0,
                                                "total_backordered_quantity": 0,
                                                "total_committed_quantity": 0,
                                                "total_exception_quantity": 0,
                                                "total_fulfillable_quantity": 0,
                                                "total_internal_transfer_quantity": 0,
                                                "total_onhand_quantity": 0,
                                                "total_sellable_quantity": 0
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.Get.Api.Product.ProductId.Inventory.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory/{inventoryId}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get an inventory item\n",
                "operationId": "588a8bb9e4086c9f6a2bf1bf3d4beb55",
                "parameters": [
                    {
                        "name": "inventoryId",
                        "in": "path",
                        "description": "The inventory id to get\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.InventoryId.InventoryId.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.InventoryViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "dimensions": {
                                                "depth": 0.1,
                                                "length": 0.1,
                                                "weight": 0.1,
                                                "width": 0.1
                                            },
                                            "fulfillable_quantity_by_fulfillment_center": [
                                                {
                                                    "awaiting_quantity": 0,
                                                    "committed_quantity": 0,
                                                    "fulfillable_quantity": 0,
                                                    "id": 0,
                                                    "internal_transfer_quantity": 0,
                                                    "name": "Cicero",
                                                    "onhand_quantity": 0
                                                }
                                            ],
                                            "fulfillable_quantity_by_lot": [
                                                {
                                                    "awaiting_quantity": 0,
                                                    "committed_quantity": 0,
                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "fulfillable_quantity": 0,
                                                    "fulfillable_quantity_by_fulfillment_center": [
                                                        {
                                                            "awaiting_quantity": 0,
                                                            "committed_quantity": 0,
                                                            "fulfillable_quantity": 0,
                                                            "id": 0,
                                                            "internal_transfer_quantity": 0,
                                                            "name": "Cicero",
                                                            "onhand_quantity": 0
                                                        }
                                                    ],
                                                    "internal_transfer_quantity": 0,
                                                    "lot_number": "1234",
                                                    "onhand_quantity": 0
                                                }
                                            ],
                                            "id": 0,
                                            "is_active": true,
                                            "is_case_pick": true,
                                            "is_digital": true,
                                            "is_lot": true,
                                            "name": "Medium Blue T-Shirt",
                                            "packaging_attribute": "None",
                                            "total_awaiting_quantity": 0,
                                            "total_backordered_quantity": 0,
                                            "total_committed_quantity": 0,
                                            "total_exception_quantity": 0,
                                            "total_fulfillable_quantity": 0,
                                            "total_internal_transfer_quantity": 0,
                                            "total_onhand_quantity": 0,
                                            "total_sellable_quantity": 0
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.Get.Api.Inventory.InventoryId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receiving/{id}/cancel": {
            "post": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Cancel Warehouse Receiving Order (DEPRECATED)\n",
                "description": "This endpoint is deprecated. Please use /2.0/receiving/{id}/cancel\n",
                "operationId": "05726f2da83f42b30ae3370382ab615a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the receiving order to cancel",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Receiving.Post.1.0.Receiving.Id.Cancel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Post.1.0.Receiving.Id.Cancel.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Post.1.0.Receiving.Id.Cancel.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receiving/{id}/labels": {
            "get": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Get Warehouse Receiving Order Box Labels (DEPRECATED)\n",
                "description": "This endpoint is deprecated. Please use /2.0/receiving/{id}/labels\n",
                "operationId": "cbec9819f5c4be876e3dcaa0da85cdb2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the receiving order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.OK.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.OK.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.Bad.Request.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.Bad.Request.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Labels.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receiving/{id}": {
            "get": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Get Warehouse Receiving Order (DEPRECATED)\n",
                "description": "This endpoint is deprecated. Please use /2.0/receiving/{id}\n",
                "operationId": "072a989bfe11161281fbfbbfb2aedf97",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the receiving order",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.ReceivingOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                                            "box_packaging_type": "EverythingInOneBox",
                                            "boxes": [
                                                {
                                                    "arrived_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "box_id": 0,
                                                    "box_items": [
                                                        {
                                                            "inventory_id": 0,
                                                            "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "lot_number": "string",
                                                            "quantity": 0,
                                                            "received_quantity": 0
                                                        }
                                                    ],
                                                    "box_number": 0,
                                                    "box_status": "Awaiting",
                                                    "counting_started_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "received_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                }
                                            ],
                                            "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "fulfillment_center": {
                                                "address1": "5900 W Ogden Ave",
                                                "address2": "Suite 100",
                                                "city": "Cicero",
                                                "country": "USA",
                                                "email": "example@example.com",
                                                "id": 0,
                                                "name": "Cicero (IL)",
                                                "phone_number": "555-555-5555",
                                                "state": "IL",
                                                "timezone": "Central Standard Time",
                                                "zip_code": "60804"
                                            },
                                            "id": 0,
                                            "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_updated_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "package_type": "Package",
                                            "purchase_order_number": "string",
                                            "status": "Awaiting"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Id.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receiving": {
            "get": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Get a Warehouse Receiving Order by Purchase Order Number (DEPRECATED)\n",
                "description": "This endpoint is deprecated. Please use /2.0/receiving?purchaseorderNumber={value}\n",
                "operationId": "10c13128d7c5683408869c462ab45747",
                "parameters": [
                    {
                        "name": "purchaseOrderNumber",
                        "in": "query",
                        "description": "Purchase order number of the receiving order",
                        "schema": {
                            "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.PurchaseOrderNumber.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "string",
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.ReceivingOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                                            "box_packaging_type": "EverythingInOneBox",
                                            "boxes": [
                                                {
                                                    "arrived_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "box_id": 0,
                                                    "box_items": [
                                                        {
                                                            "inventory_id": 0,
                                                            "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "lot_number": "string",
                                                            "quantity": 0,
                                                            "received_quantity": 0
                                                        }
                                                    ],
                                                    "box_number": 0,
                                                    "box_status": "Awaiting",
                                                    "counting_started_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "received_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                }
                                            ],
                                            "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "fulfillment_center": {
                                                "address1": "5900 W Ogden Ave",
                                                "address2": "Suite 100",
                                                "city": "Cicero",
                                                "country": "USA",
                                                "email": "example@example.com",
                                                "id": 0,
                                                "name": "Cicero (IL)",
                                                "phone_number": "555-555-5555",
                                                "state": "IL",
                                                "timezone": "Central Standard Time",
                                                "zip_code": "60804"
                                            },
                                            "id": 0,
                                            "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_updated_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "package_type": "Package",
                                            "purchase_order_number": "string",
                                            "status": "Awaiting"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Get.1.0.Receiving.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Create Warehouse Receiving Order (DEPRECATED)\n",
                "description": "This endpoint is deprecated. Please use /2.0/receiving\n",
                "operationId": "85ab9844ebc2ac76db634108b022ff32",
                "requestBody": {
                    "description": "The receiving order to create",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Receiving.CreateReceivingOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "box_packaging_type": "EverythingInOneBox",
                                        "boxes": [
                                            {
                                                "box_items": [
                                                    {
                                                        "inventory_id": 0,
                                                        "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "lot_number": "2222",
                                                        "quantity": 1
                                                    }
                                                ],
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        ],
                                        "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "fulfillment_center": {
                                            "id": 0
                                        },
                                        "package_type": "Package",
                                        "purchase_order_number": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Receiving.CreateReceivingOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "box_packaging_type": "EverythingInOneBox",
                                        "boxes": [
                                            {
                                                "box_items": [
                                                    {
                                                        "inventory_id": 0,
                                                        "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "lot_number": "2222",
                                                        "quantity": 1
                                                    }
                                                ],
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        ],
                                        "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "fulfillment_center": {
                                            "id": 0
                                        },
                                        "package_type": "Package",
                                        "purchase_order_number": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Receiving.CreateReceivingOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "box_packaging_type": "EverythingInOneBox",
                                        "boxes": [
                                            {
                                                "box_items": [
                                                    {
                                                        "inventory_id": 0,
                                                        "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "lot_number": "2222",
                                                        "quantity": 1
                                                    }
                                                ],
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        ],
                                        "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "fulfillment_center": {
                                            "id": 0
                                        },
                                        "package_type": "Package",
                                        "purchase_order_number": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Receiving.CreateReceivingOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "box_packaging_type": "EverythingInOneBox",
                                        "boxes": [
                                            {
                                                "box_items": [
                                                    {
                                                        "inventory_id": 0,
                                                        "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "lot_number": "2222",
                                                        "quantity": 1
                                                    }
                                                ],
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        ],
                                        "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "fulfillment_center": {
                                            "id": 0
                                        },
                                        "package_type": "Package",
                                        "purchase_order_number": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.ReceivingOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                                            "box_packaging_type": "EverythingInOneBox",
                                            "boxes": [
                                                {
                                                    "arrived_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "box_id": 0,
                                                    "box_items": [
                                                        {
                                                            "inventory_id": 0,
                                                            "lot_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "lot_number": "string",
                                                            "quantity": 0,
                                                            "received_quantity": 0
                                                        }
                                                    ],
                                                    "box_number": 0,
                                                    "box_status": "Awaiting",
                                                    "counting_started_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "received_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                }
                                            ],
                                            "expected_arrival_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "fulfillment_center": {
                                                "address1": "5900 W Ogden Ave",
                                                "address2": "Suite 100",
                                                "city": "Cicero",
                                                "country": "USA",
                                                "email": "example@example.com",
                                                "id": 0,
                                                "name": "Cicero (IL)",
                                                "phone_number": "555-555-5555",
                                                "state": "IL",
                                                "timezone": "Central Standard Time",
                                                "zip_code": "60804"
                                            },
                                            "id": 0,
                                            "insert_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_updated_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "package_type": "Package",
                                            "purchase_order_number": "string",
                                            "status": "Awaiting"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Post.1.0.Receiving.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.Post.1.0.Receiving.Not.Found.OneOf.ValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "instance": "string",
                                            "property1": {},
                                            "property2": {},
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fulfillmentCenter": {
            "get": {
                "tags": [
                    "Receiving"
                ],
                "summary": "Get Fulfillment Centers\n",
                "operationId": "aadcbeecc2f3136dd343752fff4f31bb",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Receiving.FulfillmentCenterViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "address1": "5900 W Ogden Ave",
                                                "address2": "Suite 100",
                                                "city": "Cicero",
                                                "country": "USA",
                                                "email": "example@example.com",
                                                "id": 0,
                                                "name": "Cicero (IL)",
                                                "phone_number": "555-555-5555",
                                                "state": "IL",
                                                "timezone": "Central Standard Time",
                                                "zip_code": "60804"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    }
                }
            }
        },
        "/linnworks/triggerSync": {
            "post": {
                "tags": [
                    "Hidden",
                    "Linnworks",
                    "TriggerSync"
                ],
                "summary": "Linnworks Trigger Sync\n",
                "description": "This initiates async processing and returns valid sync Id.\n",
                "operationId": "fc96d9047255c6e424ec39f9e3b3a94f",
                "requestBody": {
                    "description": "The request body for the integration",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TriggerSync.integrationRequest_linnworksConfig"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "config": {
                                            "allowedHeadersForLogging": "string",
                                            "confirmFulfillmentForProcessedOrders": true,
                                            "enableLinnworksTagCreation": true,
                                            "fcToWHMap": [
                                                {
                                                    "linnworks_locations": "string",
                                                    "shipbob_fullfilment_center": "string"
                                                }
                                            ],
                                            "inventorySync": true,
                                            "linnworksApiUrl": "string",
                                            "linnworksAvailableLocationsSelected": [
                                                "string"
                                            ],
                                            "logErrorRequestAndResponseData": true,
                                            "logRequestResponseHeader": true,
                                            "lookBackDays": 0,
                                            "markOrdersAsProcessed": true,
                                            "maxConcurrentRequests": 0,
                                            "orderSync": true,
                                            "productSync": true,
                                            "reconciliationSync": true,
                                            "shipBobApiUrl": "string",
                                            "startShippingDate": "string",
                                            "syncByDelegation": true,
                                            "syncPostalService": true,
                                            "trackingSync": true,
                                            "trackingSyncBatchSize": 0
                                        },
                                        "secrets": {
                                            "integrationToken": "string",
                                            "shipBobToken": "string"
                                        },
                                        "tenantName": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Existing Sync is running",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSync.integrationSuccessResponse"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "actionTaken": 0,
                                            "masterSyncId": 0,
                                            "requestId": "d385ab22-0f51-4b97-9ecd-b8ff3fd4fcb6"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSync.integrationSuccessResponse"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "actionTaken": 0,
                                            "masterSyncId": 0,
                                            "requestId": "d385ab22-0f51-4b97-9ecd-b8ff3fd4fcb6"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSync.Post.Api.Linnworks.TriggerSync.Bad.Request.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSync.Post.Api.Linnworks.TriggerSync.Unauthorized.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerSync.Post.Api.Linnworks.TriggerSync.Forbidden.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get locations\n",
                "operationId": "e2b9a3ad50680b3e2ab41cb8636790e4",
                "parameters": [
                    {
                        "name": "IncludeInactive",
                        "in": "query",
                        "description": "Whether the inactive locations should be included or not\n",
                        "schema": {
                            "$ref": "#/components/schemas/Locations.Get.1.0.Location.IncludeInactive.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "ReceivingEnabled",
                        "in": "query",
                        "description": "Return all the receiving enabled locations\n",
                        "schema": {
                            "$ref": "#/components/schemas/Locations.Get.1.0.Location.ReceivingEnabled.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "AccessGranted",
                        "in": "query",
                        "description": "Return all the access granted locations\n",
                        "schema": {
                            "$ref": "#/components/schemas/Locations.Get.1.0.Location.AccessGranted.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Locations.Get.1.0.Location.OK.OneOfArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "abbreviation": "string",
                                                "access_granted": true,
                                                "attributes": [
                                                    "string"
                                                ],
                                                "id": 0,
                                                "is_active": true,
                                                "is_receiving_enabled": true,
                                                "is_shipping_enabled": true,
                                                "name": "string",
                                                "region": {
                                                    "id": 0,
                                                    "name": "string"
                                                },
                                                "services": [
                                                    {
                                                        "address": {
                                                            "address1": "string",
                                                            "address2": "string",
                                                            "city": "string",
                                                            "country": "string",
                                                            "email": "string",
                                                            "name": "string",
                                                            "phone_number": "string",
                                                            "state": "string",
                                                            "zip_code": "string"
                                                        },
                                                        "enabled": true,
                                                        "service_type": "Receiving"
                                                    }
                                                ],
                                                "timezone": "string"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization missing or invalid"
                    },
                    "403": {
                        "description": "The provided credentials are not authorized to access this resource"
                    }
                }
            }
        },
        "/order/{orderId}/shipment/{shipmentId}/logs": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get logs for one Shipment by Order Id and Shipment Id",
                "operationId": "6930420ba86513c3cfa5f0af2ad98526",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order id to get the shipment for",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.OrderId.Integer"
                        }
                    },
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "log_type_id": 0,
                                                "log_type_name": "string",
                                                "log_type_text": "string",
                                                "metadata": {
                                                    "property1": "string",
                                                    "property2": "string"
                                                },
                                                "timestamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/shipment/verifyAndSaveAddress": {
            "post": {
                "tags": [
                    "Hidden",
                    "Orders"
                ],
                "summary": "Verify Address",
                "operationId": "893a7838441e69de28ea6b6cd98b3a5f",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.OrderVerifyAndSaveAddressRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "CountryCode": "string",
                                        "IsDomestic": true,
                                        "IsPoBox": true,
                                        "IsValid": true,
                                        "OrderId": 0,
                                        "OverrideVerification": true,
                                        "PhoneNumber": "string",
                                        "StreetAddress1": "string",
                                        "StreetAddress2": "string",
                                        "ZipCode": "string",
                                        "city": "string",
                                        "email": "string",
                                        "name": "string",
                                        "state": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.OrderVerifyAndSaveAddressRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "CountryCode": "string",
                                        "IsDomestic": true,
                                        "IsPoBox": true,
                                        "IsValid": true,
                                        "OrderId": 0,
                                        "OverrideVerification": true,
                                        "PhoneNumber": "string",
                                        "StreetAddress1": "string",
                                        "StreetAddress2": "string",
                                        "ZipCode": "string",
                                        "city": "string",
                                        "email": "string",
                                        "name": "string",
                                        "state": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.OrderVerifyAndSaveAddressRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "CountryCode": "string",
                                        "IsDomestic": true,
                                        "IsPoBox": true,
                                        "IsValid": true,
                                        "OrderId": 0,
                                        "OverrideVerification": true,
                                        "PhoneNumber": "string",
                                        "StreetAddress1": "string",
                                        "StreetAddress2": "string",
                                        "ZipCode": "string",
                                        "city": "string",
                                        "email": "string",
                                        "name": "string",
                                        "state": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.OrderVerifyAndSaveAddressRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "CountryCode": "string",
                                        "IsDomestic": true,
                                        "IsPoBox": true,
                                        "IsValid": true,
                                        "OrderId": 0,
                                        "OverrideVerification": true,
                                        "PhoneNumber": "string",
                                        "StreetAddress1": "string",
                                        "StreetAddress2": "string",
                                        "ZipCode": "string",
                                        "city": "string",
                                        "email": "string",
                                        "name": "string",
                                        "state": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error"
                    }
                }
            }
        },
        "/shipment/{shipmentId}": {
            "put": {
                "tags": [
                    "Hidden",
                    "Orders"
                ],
                "summary": "Update a Shipment",
                "operationId": "1426d06c67a3195a00a3b3251a178559",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The Shipment id to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Put.Api.Shipment.ShipmentId.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Put.Api.Shipment.ShipmentId.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Shipment Information to be updated",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.UpdateShipmentModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "is_tracking_uploaded": true
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.UpdateShipmentModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "is_tracking_uploaded": true
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.UpdateShipmentModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "is_tracking_uploaded": true
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.UpdateShipmentModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "is_tracking_uploaded": true
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Put.Api.Shipment.ShipmentId.OK.OneOfArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                                "gift_message": "string",
                                                "id": 0,
                                                "insurance_value": 0,
                                                "invoice_amount": 0,
                                                "invoice_currency_code": "string",
                                                "is_tracking_uploaded": true,
                                                "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                "location": {
                                                    "id": 0,
                                                    "name": "Cicero (IL)"
                                                },
                                                "measurements": {
                                                    "depth_in": 0,
                                                    "length_in": 0,
                                                    "total_weight_oz": 0,
                                                    "width_in": 0
                                                },
                                                "order_id": 0,
                                                "package_material_type": "Unknown",
                                                "parent_cartons": [
                                                    {
                                                        "barcode": "string",
                                                        "cartons": [
                                                            {
                                                                "barcode": "string",
                                                                "carton_details": [
                                                                    {
                                                                        "products": [
                                                                            {
                                                                                "id": 0,
                                                                                "inventory_items": [
                                                                                    {
                                                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                        "id": 0,
                                                                                        "is_dangerous_goods": true,
                                                                                        "lot": "22222",
                                                                                        "name": "Medium Blue T-Shirt",
                                                                                        "quantity": 0,
                                                                                        "quantity_committed": 0,
                                                                                        "serial_numbers": [
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "name": "Medium Blue T-Shirt",
                                                                                "reference_id": "TShirtBlueM",
                                                                                "sku": "TShirtBlueM"
                                                                            }
                                                                        ]
                                                                    }
                                                                ],
                                                                "id": 0,
                                                                "measurements": {
                                                                    "depth_in": 0.1,
                                                                    "length_in": 0.1,
                                                                    "total_weight_oz": 0.1,
                                                                    "width_in": 0.1
                                                                },
                                                                "type": "Box or pallet"
                                                            }
                                                        ],
                                                        "measurements": {
                                                            "depth_in": 0.1,
                                                            "length_in": 0.1,
                                                            "total_weight_oz": 0.1,
                                                            "width_in": 0.1
                                                        },
                                                        "type": "Box or pallet"
                                                    }
                                                ],
                                                "products": [
                                                    {
                                                        "id": 0,
                                                        "inventory_items": [
                                                            {
                                                                "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                "id": 0,
                                                                "is_dangerous_goods": true,
                                                                "lot": "22222",
                                                                "name": "Medium Blue T-Shirt",
                                                                "quantity": 0,
                                                                "quantity_committed": 0,
                                                                "serial_numbers": [
                                                                    "string"
                                                                ]
                                                            }
                                                        ],
                                                        "name": "Medium Blue T-Shirt",
                                                        "reference_id": "TShirtBlueM",
                                                        "sku": "TShirtBlueM"
                                                    }
                                                ],
                                                "recipient": {
                                                    "address": {
                                                        "address1": "100 Nowhere Blvd",
                                                        "address2": "Suite 100",
                                                        "city": "Gotham City",
                                                        "company_name": "Wayne Enterprises",
                                                        "country": "US",
                                                        "state": "NJ",
                                                        "zip_code": "07093"
                                                    },
                                                    "email": "john@example.com",
                                                    "full_name": "John Doe",
                                                    "name": "John Doe",
                                                    "phone_number": "555-555-5555"
                                                },
                                                "reference_id": "string",
                                                "require_signature": true,
                                                "ship_option": "Standard",
                                                "status": "None",
                                                "status_details": [
                                                    {
                                                        "description": "string",
                                                        "exception_fulfillment_center_id": 0,
                                                        "extra_information": {
                                                            "validation_messages": [
                                                                "string"
                                                            ]
                                                        },
                                                        "id": 0,
                                                        "inventory_id": 0,
                                                        "name": "string"
                                                    }
                                                ],
                                                "tracking": {
                                                    "bol": "string",
                                                    "carrier": "USPS",
                                                    "carrier_service": "Priority",
                                                    "pro_number": "string",
                                                    "scac": "string",
                                                    "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                    "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                }
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Put.Api.Shipment.ShipmentId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get one Shipment by Shipment Id",
                "operationId": "8c8639205c363bf5fcc5b147c40ccfe5",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                            "gift_message": "string",
                                            "id": 0,
                                            "insurance_value": 0,
                                            "invoice_amount": 0,
                                            "invoice_currency_code": "string",
                                            "is_tracking_uploaded": true,
                                            "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "location": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "measurements": {
                                                "depth_in": 0,
                                                "length_in": 0,
                                                "total_weight_oz": 0,
                                                "width_in": 0
                                            },
                                            "order_id": 0,
                                            "package_material_type": "Unknown",
                                            "parent_cartons": [
                                                {
                                                    "barcode": "string",
                                                    "cartons": [
                                                        {
                                                            "barcode": "string",
                                                            "carton_details": [
                                                                {
                                                                    "products": [
                                                                        {
                                                                            "id": 0,
                                                                            "inventory_items": [
                                                                                {
                                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                    "id": 0,
                                                                                    "is_dangerous_goods": true,
                                                                                    "lot": "22222",
                                                                                    "name": "Medium Blue T-Shirt",
                                                                                    "quantity": 0,
                                                                                    "quantity_committed": 0,
                                                                                    "serial_numbers": [
                                                                                        "string"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "name": "Medium Blue T-Shirt",
                                                                            "reference_id": "TShirtBlueM",
                                                                            "sku": "TShirtBlueM"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "id": 0,
                                                            "measurements": {
                                                                "depth_in": 0.1,
                                                                "length_in": 0.1,
                                                                "total_weight_oz": 0.1,
                                                                "width_in": 0.1
                                                            },
                                                            "type": "Box or pallet"
                                                        }
                                                    ],
                                                    "measurements": {
                                                        "depth_in": 0.1,
                                                        "length_in": 0.1,
                                                        "total_weight_oz": 0.1,
                                                        "width_in": 0.1
                                                    },
                                                    "type": "Box or pallet"
                                                }
                                            ],
                                            "products": [
                                                {
                                                    "id": 0,
                                                    "inventory_items": [
                                                        {
                                                            "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "id": 0,
                                                            "is_dangerous_goods": true,
                                                            "lot": "22222",
                                                            "name": "Medium Blue T-Shirt",
                                                            "quantity": 0,
                                                            "quantity_committed": 0,
                                                            "serial_numbers": [
                                                                "string"
                                                            ]
                                                        }
                                                    ],
                                                    "name": "Medium Blue T-Shirt",
                                                    "reference_id": "TShirtBlueM",
                                                    "sku": "TShirtBlueM"
                                                }
                                            ],
                                            "recipient": {
                                                "address": {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "zip_code": "07093"
                                                },
                                                "email": "john@example.com",
                                                "full_name": "John Doe",
                                                "name": "John Doe",
                                                "phone_number": "555-555-5555"
                                            },
                                            "reference_id": "string",
                                            "require_signature": true,
                                            "ship_option": "Standard",
                                            "status": "None",
                                            "status_details": [
                                                {
                                                    "description": "string",
                                                    "exception_fulfillment_center_id": 0,
                                                    "extra_information": {
                                                        "validation_messages": [
                                                            "string"
                                                        ]
                                                    },
                                                    "id": 0,
                                                    "inventory_id": 0,
                                                    "name": "string"
                                                }
                                            ],
                                            "tracking": {
                                                "bol": "string",
                                                "carrier": "USPS",
                                                "carrier_service": "Priority",
                                                "pro_number": "string",
                                                "scac": "string",
                                                "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/shipment/{shipmentId}/cancel": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel one Shipment by Shipment Id",
                "operationId": "45f79207b988587991d84f65bd5f823f",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                            "gift_message": "string",
                                            "id": 0,
                                            "insurance_value": 0,
                                            "invoice_amount": 0,
                                            "invoice_currency_code": "string",
                                            "is_tracking_uploaded": true,
                                            "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "location": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "measurements": {
                                                "depth_in": 0,
                                                "length_in": 0,
                                                "total_weight_oz": 0,
                                                "width_in": 0
                                            },
                                            "order_id": 0,
                                            "package_material_type": "Unknown",
                                            "parent_cartons": [
                                                {
                                                    "barcode": "string",
                                                    "cartons": [
                                                        {
                                                            "barcode": "string",
                                                            "carton_details": [
                                                                {
                                                                    "products": [
                                                                        {
                                                                            "id": 0,
                                                                            "inventory_items": [
                                                                                {
                                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                    "id": 0,
                                                                                    "is_dangerous_goods": true,
                                                                                    "lot": "22222",
                                                                                    "name": "Medium Blue T-Shirt",
                                                                                    "quantity": 0,
                                                                                    "quantity_committed": 0,
                                                                                    "serial_numbers": [
                                                                                        "string"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "name": "Medium Blue T-Shirt",
                                                                            "reference_id": "TShirtBlueM",
                                                                            "sku": "TShirtBlueM"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "id": 0,
                                                            "measurements": {
                                                                "depth_in": 0.1,
                                                                "length_in": 0.1,
                                                                "total_weight_oz": 0.1,
                                                                "width_in": 0.1
                                                            },
                                                            "type": "Box or pallet"
                                                        }
                                                    ],
                                                    "measurements": {
                                                        "depth_in": 0.1,
                                                        "length_in": 0.1,
                                                        "total_weight_oz": 0.1,
                                                        "width_in": 0.1
                                                    },
                                                    "type": "Box or pallet"
                                                }
                                            ],
                                            "products": [
                                                {
                                                    "id": 0,
                                                    "inventory_items": [
                                                        {
                                                            "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "id": 0,
                                                            "is_dangerous_goods": true,
                                                            "lot": "22222",
                                                            "name": "Medium Blue T-Shirt",
                                                            "quantity": 0,
                                                            "quantity_committed": 0,
                                                            "serial_numbers": [
                                                                "string"
                                                            ]
                                                        }
                                                    ],
                                                    "name": "Medium Blue T-Shirt",
                                                    "reference_id": "TShirtBlueM",
                                                    "sku": "TShirtBlueM"
                                                }
                                            ],
                                            "recipient": {
                                                "address": {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "zip_code": "07093"
                                                },
                                                "email": "john@example.com",
                                                "full_name": "John Doe",
                                                "name": "John Doe",
                                                "phone_number": "555-555-5555"
                                            },
                                            "reference_id": "string",
                                            "require_signature": true,
                                            "ship_option": "Standard",
                                            "status": "None",
                                            "status_details": [
                                                {
                                                    "description": "string",
                                                    "exception_fulfillment_center_id": 0,
                                                    "extra_information": {
                                                        "validation_messages": [
                                                            "string"
                                                        ]
                                                    },
                                                    "id": 0,
                                                    "inventory_id": 0,
                                                    "name": "string"
                                                }
                                            ],
                                            "tracking": {
                                                "bol": "string",
                                                "carrier": "USPS",
                                                "carrier_service": "Priority",
                                                "pro_number": "string",
                                                "scac": "string",
                                                "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/{orderId}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get Order",
                "operationId": "ec2804df94cd56f5f33114c7b1475772",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.OrderId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.OrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "channel": {
                                                "id": 0,
                                                "name": "ShipBobs-Shopify-Store"
                                            },
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "financials": {
                                                "total_price": 0.1
                                            },
                                            "gift_message": "string",
                                            "id": 0,
                                            "order_number": "string",
                                            "products": [
                                                {
                                                    "external_line_id": 0,
                                                    "gtin": "string",
                                                    "id": 0,
                                                    "quantity": 0,
                                                    "quantity_unit_of_measure_code": "string",
                                                    "reference_id": "TShirtBlueM",
                                                    "sku": "TShirtBlueM",
                                                    "unit_price": 0.1,
                                                    "upc": "string"
                                                }
                                            ],
                                            "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "recipient": {
                                                "address": {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "zip_code": "07093"
                                                },
                                                "email": "john@example.com",
                                                "name": "John Doe",
                                                "phone_number": "555-555-5555"
                                            },
                                            "reference_id": "string",
                                            "retailer_program_data": {
                                                "addresses": [
                                                    {
                                                        "address1": "100 Nowhere Blvd",
                                                        "address2": "Suite 100",
                                                        "city": "Gotham City",
                                                        "company_name": "Wayne Enterprises",
                                                        "country": "US",
                                                        "state": "NJ",
                                                        "type": "MarkFor",
                                                        "zip_code": "07093"
                                                    }
                                                ],
                                                "customer_ticket_number": "string",
                                                "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "department": "string",
                                                "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                                "mark_for_store": "string",
                                                "purchase_order_number": "string",
                                                "retailer_program_type": "string",
                                                "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                            },
                                            "shipments": [
                                                {
                                                    "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                                    "gift_message": "string",
                                                    "id": 0,
                                                    "insurance_value": 0,
                                                    "invoice_amount": 0,
                                                    "invoice_currency_code": "string",
                                                    "is_tracking_uploaded": true,
                                                    "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                    "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                    "location": {
                                                        "id": 0,
                                                        "name": "Cicero (IL)"
                                                    },
                                                    "measurements": {
                                                        "depth_in": 0,
                                                        "length_in": 0,
                                                        "total_weight_oz": 0,
                                                        "width_in": 0
                                                    },
                                                    "order_id": 0,
                                                    "package_material_type": "Unknown",
                                                    "parent_cartons": [
                                                        {
                                                            "barcode": "string",
                                                            "cartons": [
                                                                {
                                                                    "barcode": "string",
                                                                    "carton_details": [
                                                                        {
                                                                            "products": [
                                                                                {
                                                                                    "id": 0,
                                                                                    "inventory_items": [
                                                                                        {
                                                                                            "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                            "id": 0,
                                                                                            "is_dangerous_goods": true,
                                                                                            "lot": "22222",
                                                                                            "name": "Medium Blue T-Shirt",
                                                                                            "quantity": 0,
                                                                                            "quantity_committed": 0,
                                                                                            "serial_numbers": [
                                                                                                "string"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "name": "Medium Blue T-Shirt",
                                                                                    "reference_id": "TShirtBlueM",
                                                                                    "sku": "TShirtBlueM"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "id": 0,
                                                                    "measurements": {
                                                                        "depth_in": 0.1,
                                                                        "length_in": 0.1,
                                                                        "total_weight_oz": 0.1,
                                                                        "width_in": 0.1
                                                                    },
                                                                    "type": "Box or pallet"
                                                                }
                                                            ],
                                                            "measurements": {
                                                                "depth_in": 0.1,
                                                                "length_in": 0.1,
                                                                "total_weight_oz": 0.1,
                                                                "width_in": 0.1
                                                            },
                                                            "type": "Box or pallet"
                                                        }
                                                    ],
                                                    "products": [
                                                        {
                                                            "id": 0,
                                                            "inventory_items": [
                                                                {
                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                    "id": 0,
                                                                    "is_dangerous_goods": true,
                                                                    "lot": "22222",
                                                                    "name": "Medium Blue T-Shirt",
                                                                    "quantity": 0,
                                                                    "quantity_committed": 0,
                                                                    "serial_numbers": [
                                                                        "string"
                                                                    ]
                                                                }
                                                            ],
                                                            "name": "Medium Blue T-Shirt",
                                                            "reference_id": "TShirtBlueM",
                                                            "sku": "TShirtBlueM"
                                                        }
                                                    ],
                                                    "recipient": {
                                                        "address": {
                                                            "address1": "100 Nowhere Blvd",
                                                            "address2": "Suite 100",
                                                            "city": "Gotham City",
                                                            "company_name": "Wayne Enterprises",
                                                            "country": "US",
                                                            "state": "NJ",
                                                            "zip_code": "07093"
                                                        },
                                                        "email": "john@example.com",
                                                        "full_name": "John Doe",
                                                        "name": "John Doe",
                                                        "phone_number": "555-555-5555"
                                                    },
                                                    "reference_id": "string",
                                                    "require_signature": true,
                                                    "ship_option": "Standard",
                                                    "status": "None",
                                                    "status_details": [
                                                        {
                                                            "description": "string",
                                                            "exception_fulfillment_center_id": 0,
                                                            "extra_information": {
                                                                "validation_messages": [
                                                                    "string"
                                                                ]
                                                            },
                                                            "id": 0,
                                                            "inventory_id": 0,
                                                            "name": "string"
                                                        }
                                                    ],
                                                    "tracking": {
                                                        "bol": "string",
                                                        "carrier": "USPS",
                                                        "carrier_service": "Priority",
                                                        "pro_number": "string",
                                                        "scac": "string",
                                                        "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                        "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                    }
                                                }
                                            ],
                                            "shipping_method": "Free 2-day Shipping",
                                            "shipping_terms": {
                                                "carrier_type": "Parcel",
                                                "payment_term": "Collect"
                                            },
                                            "status": "Processing",
                                            "tags": [
                                                {
                                                    "name": "Handling instructions",
                                                    "value": "Fragile"
                                                }
                                            ],
                                            "type": "DTC"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/order/{orderId}/cancel": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel single Order by Order ID",
                "operationId": "3a6639775d28e552e545761a24e90fab",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order ID to cancel",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.OrderId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel ID for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.CanceledOrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "canceled_shipment_results": [
                                                {
                                                    "action": "Cancel",
                                                    "is_success": true,
                                                    "reason": "string",
                                                    "shipment_id": 0
                                                }
                                            ],
                                            "order": {
                                                "channel": {
                                                    "id": 0,
                                                    "name": "ShipBobs-Shopify-Store"
                                                },
                                                "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "financials": {
                                                    "total_price": 0.1
                                                },
                                                "gift_message": "string",
                                                "id": 0,
                                                "order_number": "string",
                                                "products": [
                                                    {
                                                        "external_line_id": 0,
                                                        "gtin": "string",
                                                        "id": 0,
                                                        "quantity": 0,
                                                        "quantity_unit_of_measure_code": "string",
                                                        "reference_id": "TShirtBlueM",
                                                        "sku": "TShirtBlueM",
                                                        "unit_price": 0.1,
                                                        "upc": "string"
                                                    }
                                                ],
                                                "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "recipient": {
                                                    "address": {
                                                        "address1": "100 Nowhere Blvd",
                                                        "address2": "Suite 100",
                                                        "city": "Gotham City",
                                                        "company_name": "Wayne Enterprises",
                                                        "country": "US",
                                                        "state": "NJ",
                                                        "zip_code": "07093"
                                                    },
                                                    "email": "john@example.com",
                                                    "name": "John Doe",
                                                    "phone_number": "555-555-5555"
                                                },
                                                "reference_id": "string",
                                                "retailer_program_data": {
                                                    "addresses": [
                                                        {
                                                            "address1": "100 Nowhere Blvd",
                                                            "address2": "Suite 100",
                                                            "city": "Gotham City",
                                                            "company_name": "Wayne Enterprises",
                                                            "country": "US",
                                                            "state": "NJ",
                                                            "type": "MarkFor",
                                                            "zip_code": "07093"
                                                        }
                                                    ],
                                                    "customer_ticket_number": "string",
                                                    "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "department": "string",
                                                    "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                                    "mark_for_store": "string",
                                                    "purchase_order_number": "string",
                                                    "retailer_program_type": "string",
                                                    "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                                },
                                                "shipments": [
                                                    {
                                                        "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                                        "gift_message": "string",
                                                        "id": 0,
                                                        "insurance_value": 0,
                                                        "invoice_amount": 0,
                                                        "invoice_currency_code": "string",
                                                        "is_tracking_uploaded": true,
                                                        "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                        "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                        "location": {
                                                            "id": 0,
                                                            "name": "Cicero (IL)"
                                                        },
                                                        "measurements": {
                                                            "depth_in": 0,
                                                            "length_in": 0,
                                                            "total_weight_oz": 0,
                                                            "width_in": 0
                                                        },
                                                        "order_id": 0,
                                                        "package_material_type": "Unknown",
                                                        "parent_cartons": [
                                                            {
                                                                "barcode": "string",
                                                                "cartons": [
                                                                    {
                                                                        "barcode": "string",
                                                                        "carton_details": [
                                                                            {
                                                                                "products": [
                                                                                    {
                                                                                        "id": 0,
                                                                                        "inventory_items": [
                                                                                            {
                                                                                                "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                                "id": 0,
                                                                                                "is_dangerous_goods": true,
                                                                                                "lot": "22222",
                                                                                                "name": "Medium Blue T-Shirt",
                                                                                                "quantity": 0,
                                                                                                "quantity_committed": 0,
                                                                                                "serial_numbers": [
                                                                                                    null
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "name": "Medium Blue T-Shirt",
                                                                                        "reference_id": "TShirtBlueM",
                                                                                        "sku": "TShirtBlueM"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "id": 0,
                                                                        "measurements": {
                                                                            "depth_in": 0.1,
                                                                            "length_in": 0.1,
                                                                            "total_weight_oz": 0.1,
                                                                            "width_in": 0.1
                                                                        },
                                                                        "type": "Box or pallet"
                                                                    }
                                                                ],
                                                                "measurements": {
                                                                    "depth_in": 0.1,
                                                                    "length_in": 0.1,
                                                                    "total_weight_oz": 0.1,
                                                                    "width_in": 0.1
                                                                },
                                                                "type": "Box or pallet"
                                                            }
                                                        ],
                                                        "products": [
                                                            {
                                                                "id": 0,
                                                                "inventory_items": [
                                                                    {
                                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                        "id": 0,
                                                                        "is_dangerous_goods": true,
                                                                        "lot": "22222",
                                                                        "name": "Medium Blue T-Shirt",
                                                                        "quantity": 0,
                                                                        "quantity_committed": 0,
                                                                        "serial_numbers": [
                                                                            "string"
                                                                        ]
                                                                    }
                                                                ],
                                                                "name": "Medium Blue T-Shirt",
                                                                "reference_id": "TShirtBlueM",
                                                                "sku": "TShirtBlueM"
                                                            }
                                                        ],
                                                        "recipient": {
                                                            "address": {
                                                                "address1": "100 Nowhere Blvd",
                                                                "address2": "Suite 100",
                                                                "city": "Gotham City",
                                                                "company_name": "Wayne Enterprises",
                                                                "country": "US",
                                                                "state": "NJ",
                                                                "zip_code": "07093"
                                                            },
                                                            "email": "john@example.com",
                                                            "full_name": "John Doe",
                                                            "name": "John Doe",
                                                            "phone_number": "555-555-5555"
                                                        },
                                                        "reference_id": "string",
                                                        "require_signature": true,
                                                        "ship_option": "Standard",
                                                        "status": "None",
                                                        "status_details": [
                                                            {
                                                                "description": "string",
                                                                "exception_fulfillment_center_id": 0,
                                                                "extra_information": {
                                                                    "validation_messages": [
                                                                        "string"
                                                                    ]
                                                                },
                                                                "id": 0,
                                                                "inventory_id": 0,
                                                                "name": "string"
                                                            }
                                                        ],
                                                        "tracking": {
                                                            "bol": "string",
                                                            "carrier": "USPS",
                                                            "carrier_service": "Priority",
                                                            "pro_number": "string",
                                                            "scac": "string",
                                                            "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                            "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                        }
                                                    }
                                                ],
                                                "shipping_method": "Free 2-day Shipping",
                                                "shipping_terms": {
                                                    "carrier_type": "Parcel",
                                                    "payment_term": "Collect"
                                                },
                                                "status": "Processing",
                                                "tags": [
                                                    {
                                                        "name": "Handling instructions",
                                                        "value": "Fragile"
                                                    }
                                                ],
                                                "type": "DTC"
                                            },
                                            "order_id": 0,
                                            "status": "Success"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Internal.Server.Error.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/{shipmentId}/timeline": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get one Shipment's status timeline by Shipment Id",
                "operationId": "92be75123ea13c356384d555d0863147",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Timeline.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Timeline.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "log_type_id": 0,
                                                "log_type_name": "string",
                                                "log_type_text": "string",
                                                "metadata": {
                                                    "property1": "string",
                                                    "property2": "string"
                                                },
                                                "timestamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Timeline.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/order/{orderId}/storeOrderJson": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get Order Store Json",
                "operationId": "d39eda6d39c15939516450078b07ef5f",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order ID to Get the JSON Stored",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.OrderId.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.OK.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Save the Store Order Json",
                "operationId": "09827e2d903cb474f73ccd9ce3498cb7",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order ID to Store",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.OrderId.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The JSON that represent the order on the Third Party Source",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.AddStoreOrderJsonModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "order_json": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.AddStoreOrderJsonModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "order_json": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.AddStoreOrderJsonModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "order_json": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.AddStoreOrderJsonModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "order_json": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.Created.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/{orderId}/shipment/{shipmentId}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get one Shipment by Order Id and Shipment Id",
                "operationId": "4a91e4ebbcfdf842cefb9a16c69cd278",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order id to get the shipment for",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OrderId.Integer"
                        }
                    },
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                            "gift_message": "string",
                                            "id": 0,
                                            "insurance_value": 0,
                                            "invoice_amount": 0,
                                            "invoice_currency_code": "string",
                                            "is_tracking_uploaded": true,
                                            "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "location": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "measurements": {
                                                "depth_in": 0,
                                                "length_in": 0,
                                                "total_weight_oz": 0,
                                                "width_in": 0
                                            },
                                            "order_id": 0,
                                            "package_material_type": "Unknown",
                                            "parent_cartons": [
                                                {
                                                    "barcode": "string",
                                                    "cartons": [
                                                        {
                                                            "barcode": "string",
                                                            "carton_details": [
                                                                {
                                                                    "products": [
                                                                        {
                                                                            "id": 0,
                                                                            "inventory_items": [
                                                                                {
                                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                    "id": 0,
                                                                                    "is_dangerous_goods": true,
                                                                                    "lot": "22222",
                                                                                    "name": "Medium Blue T-Shirt",
                                                                                    "quantity": 0,
                                                                                    "quantity_committed": 0,
                                                                                    "serial_numbers": [
                                                                                        "string"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "name": "Medium Blue T-Shirt",
                                                                            "reference_id": "TShirtBlueM",
                                                                            "sku": "TShirtBlueM"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "id": 0,
                                                            "measurements": {
                                                                "depth_in": 0.1,
                                                                "length_in": 0.1,
                                                                "total_weight_oz": 0.1,
                                                                "width_in": 0.1
                                                            },
                                                            "type": "Box or pallet"
                                                        }
                                                    ],
                                                    "measurements": {
                                                        "depth_in": 0.1,
                                                        "length_in": 0.1,
                                                        "total_weight_oz": 0.1,
                                                        "width_in": 0.1
                                                    },
                                                    "type": "Box or pallet"
                                                }
                                            ],
                                            "products": [
                                                {
                                                    "id": 0,
                                                    "inventory_items": [
                                                        {
                                                            "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "id": 0,
                                                            "is_dangerous_goods": true,
                                                            "lot": "22222",
                                                            "name": "Medium Blue T-Shirt",
                                                            "quantity": 0,
                                                            "quantity_committed": 0,
                                                            "serial_numbers": [
                                                                "string"
                                                            ]
                                                        }
                                                    ],
                                                    "name": "Medium Blue T-Shirt",
                                                    "reference_id": "TShirtBlueM",
                                                    "sku": "TShirtBlueM"
                                                }
                                            ],
                                            "recipient": {
                                                "address": {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "zip_code": "07093"
                                                },
                                                "email": "john@example.com",
                                                "full_name": "John Doe",
                                                "name": "John Doe",
                                                "phone_number": "555-555-5555"
                                            },
                                            "reference_id": "string",
                                            "require_signature": true,
                                            "ship_option": "Standard",
                                            "status": "None",
                                            "status_details": [
                                                {
                                                    "description": "string",
                                                    "exception_fulfillment_center_id": 0,
                                                    "extra_information": {
                                                        "validation_messages": [
                                                            "string"
                                                        ]
                                                    },
                                                    "id": 0,
                                                    "inventory_id": 0,
                                                    "name": "string"
                                                }
                                            ],
                                            "tracking": {
                                                "bol": "string",
                                                "carrier": "USPS",
                                                "carrier_service": "Priority",
                                                "pro_number": "string",
                                                "scac": "string",
                                                "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/shippingmethod": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get shipping methods",
                "description": "Get all merchants shipping methods",
                "operationId": "2024486cc9eff567290873743fa16fc9",
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of orders to get",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shippingmethod.Page.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 2147483647,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of records per page to request",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shippingmethod.Limit.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.ShipMethodDetailViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "active": true,
                                                "default": true,
                                                "id": 0,
                                                "name": "string",
                                                "service_level": {
                                                    "id": 0,
                                                    "name": "string"
                                                }
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Shippingmethod.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Shippingmethod.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/{orderId}/shipment": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all Shipments for Order",
                "operationId": "1e0815dcfb1c817c448dfd569dbe8c21",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order id to get shipments for",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.OrderId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.OK.OneOfArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                                "gift_message": "string",
                                                "id": 0,
                                                "insurance_value": 0,
                                                "invoice_amount": 0,
                                                "invoice_currency_code": "string",
                                                "is_tracking_uploaded": true,
                                                "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                "location": {
                                                    "id": 0,
                                                    "name": "Cicero (IL)"
                                                },
                                                "measurements": {
                                                    "depth_in": 0,
                                                    "length_in": 0,
                                                    "total_weight_oz": 0,
                                                    "width_in": 0
                                                },
                                                "order_id": 0,
                                                "package_material_type": "Unknown",
                                                "parent_cartons": [
                                                    {
                                                        "barcode": "string",
                                                        "cartons": [
                                                            {
                                                                "barcode": "string",
                                                                "carton_details": [
                                                                    {
                                                                        "products": [
                                                                            {
                                                                                "id": 0,
                                                                                "inventory_items": [
                                                                                    {
                                                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                        "id": 0,
                                                                                        "is_dangerous_goods": true,
                                                                                        "lot": "22222",
                                                                                        "name": "Medium Blue T-Shirt",
                                                                                        "quantity": 0,
                                                                                        "quantity_committed": 0,
                                                                                        "serial_numbers": [
                                                                                            "string"
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "name": "Medium Blue T-Shirt",
                                                                                "reference_id": "TShirtBlueM",
                                                                                "sku": "TShirtBlueM"
                                                                            }
                                                                        ]
                                                                    }
                                                                ],
                                                                "id": 0,
                                                                "measurements": {
                                                                    "depth_in": 0.1,
                                                                    "length_in": 0.1,
                                                                    "total_weight_oz": 0.1,
                                                                    "width_in": 0.1
                                                                },
                                                                "type": "Box or pallet"
                                                            }
                                                        ],
                                                        "measurements": {
                                                            "depth_in": 0.1,
                                                            "length_in": 0.1,
                                                            "total_weight_oz": 0.1,
                                                            "width_in": 0.1
                                                        },
                                                        "type": "Box or pallet"
                                                    }
                                                ],
                                                "products": [
                                                    {
                                                        "id": 0,
                                                        "inventory_items": [
                                                            {
                                                                "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                "id": 0,
                                                                "is_dangerous_goods": true,
                                                                "lot": "22222",
                                                                "name": "Medium Blue T-Shirt",
                                                                "quantity": 0,
                                                                "quantity_committed": 0,
                                                                "serial_numbers": [
                                                                    "string"
                                                                ]
                                                            }
                                                        ],
                                                        "name": "Medium Blue T-Shirt",
                                                        "reference_id": "TShirtBlueM",
                                                        "sku": "TShirtBlueM"
                                                    }
                                                ],
                                                "recipient": {
                                                    "address": {
                                                        "address1": "100 Nowhere Blvd",
                                                        "address2": "Suite 100",
                                                        "city": "Gotham City",
                                                        "company_name": "Wayne Enterprises",
                                                        "country": "US",
                                                        "state": "NJ",
                                                        "zip_code": "07093"
                                                    },
                                                    "email": "john@example.com",
                                                    "full_name": "John Doe",
                                                    "name": "John Doe",
                                                    "phone_number": "555-555-5555"
                                                },
                                                "reference_id": "string",
                                                "require_signature": true,
                                                "ship_option": "Standard",
                                                "status": "None",
                                                "status_details": [
                                                    {
                                                        "description": "string",
                                                        "exception_fulfillment_center_id": 0,
                                                        "extra_information": {
                                                            "validation_messages": [
                                                                "string"
                                                            ]
                                                        },
                                                        "id": 0,
                                                        "inventory_id": 0,
                                                        "name": "string"
                                                    }
                                                ],
                                                "tracking": {
                                                    "bol": "string",
                                                    "carrier": "USPS",
                                                    "carrier_service": "Priority",
                                                    "pro_number": "string",
                                                    "scac": "string",
                                                    "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                    "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                }
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/order/{orderId}/shipment/{shipmentId}/cancel": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel one Shipment by Order Id and Shipment Id",
                "operationId": "3bc94b60cb23d76de794549b5af84198",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OrderId.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "string",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                            "gift_message": "string",
                                            "id": 0,
                                            "insurance_value": 0,
                                            "invoice_amount": 0,
                                            "invoice_currency_code": "string",
                                            "is_tracking_uploaded": true,
                                            "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "location": {
                                                "id": 0,
                                                "name": "Cicero (IL)"
                                            },
                                            "measurements": {
                                                "depth_in": 0,
                                                "length_in": 0,
                                                "total_weight_oz": 0,
                                                "width_in": 0
                                            },
                                            "order_id": 0,
                                            "package_material_type": "Unknown",
                                            "parent_cartons": [
                                                {
                                                    "barcode": "string",
                                                    "cartons": [
                                                        {
                                                            "barcode": "string",
                                                            "carton_details": [
                                                                {
                                                                    "products": [
                                                                        {
                                                                            "id": 0,
                                                                            "inventory_items": [
                                                                                {
                                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                    "id": 0,
                                                                                    "is_dangerous_goods": true,
                                                                                    "lot": "22222",
                                                                                    "name": "Medium Blue T-Shirt",
                                                                                    "quantity": 0,
                                                                                    "quantity_committed": 0,
                                                                                    "serial_numbers": [
                                                                                        "string"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "name": "Medium Blue T-Shirt",
                                                                            "reference_id": "TShirtBlueM",
                                                                            "sku": "TShirtBlueM"
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "id": 0,
                                                            "measurements": {
                                                                "depth_in": 0.1,
                                                                "length_in": 0.1,
                                                                "total_weight_oz": 0.1,
                                                                "width_in": 0.1
                                                            },
                                                            "type": "Box or pallet"
                                                        }
                                                    ],
                                                    "measurements": {
                                                        "depth_in": 0.1,
                                                        "length_in": 0.1,
                                                        "total_weight_oz": 0.1,
                                                        "width_in": 0.1
                                                    },
                                                    "type": "Box or pallet"
                                                }
                                            ],
                                            "products": [
                                                {
                                                    "id": 0,
                                                    "inventory_items": [
                                                        {
                                                            "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "id": 0,
                                                            "is_dangerous_goods": true,
                                                            "lot": "22222",
                                                            "name": "Medium Blue T-Shirt",
                                                            "quantity": 0,
                                                            "quantity_committed": 0,
                                                            "serial_numbers": [
                                                                "string"
                                                            ]
                                                        }
                                                    ],
                                                    "name": "Medium Blue T-Shirt",
                                                    "reference_id": "TShirtBlueM",
                                                    "sku": "TShirtBlueM"
                                                }
                                            ],
                                            "recipient": {
                                                "address": {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "zip_code": "07093"
                                                },
                                                "email": "john@example.com",
                                                "full_name": "John Doe",
                                                "name": "John Doe",
                                                "phone_number": "555-555-5555"
                                            },
                                            "reference_id": "string",
                                            "require_signature": true,
                                            "ship_option": "Standard",
                                            "status": "None",
                                            "status_details": [
                                                {
                                                    "description": "string",
                                                    "exception_fulfillment_center_id": 0,
                                                    "extra_information": {
                                                        "validation_messages": [
                                                            "string"
                                                        ]
                                                    },
                                                    "id": 0,
                                                    "inventory_id": 0,
                                                    "name": "string"
                                                }
                                            ],
                                            "tracking": {
                                                "bol": "string",
                                                "carrier": "USPS",
                                                "carrier_service": "Priority",
                                                "pro_number": "string",
                                                "scac": "string",
                                                "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                            }
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/estimate": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Estimate Fulfillment Cost For Order",
                "description": "This endpoint will provide, where possible, an estimate of pricing and fulfillment center assignment of a potential standard (direct to consumer) order. Keep in mind that there are ways for the merchant to change FC assignment or product configuration after order creation that could invalidate this estimate. Estimates cannot be returned for items that are unknown, out of stock, or too large for fulfillment using standard box sizes. Additional services such as high-pick fees, shipping insurance, auto-splitting or auto-adding items to orders, and signature required are not included in this estimate.",
                "operationId": "77a8ea8828da55afca0929f5d8f0ba32",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.Estimate.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.EstimateFulfillmentRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "address": {
                                            "address1": "100 Nowhere Blvd",
                                            "address2": "Suite 100",
                                            "city": "Gotham City",
                                            "company_name": "Wayne Enterprises",
                                            "country": "US",
                                            "state": "NJ",
                                            "zip_code": "07093"
                                        },
                                        "products": [
                                            {
                                                "id": 0,
                                                "quantity": 1,
                                                "reference_id": "TShirtBlueM"
                                            }
                                        ],
                                        "shipping_methods": [
                                            "string"
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.EstimateFulfillmentRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "address": {
                                            "address1": "100 Nowhere Blvd",
                                            "address2": "Suite 100",
                                            "city": "Gotham City",
                                            "company_name": "Wayne Enterprises",
                                            "country": "US",
                                            "state": "NJ",
                                            "zip_code": "07093"
                                        },
                                        "products": [
                                            {
                                                "id": 0,
                                                "quantity": 1,
                                                "reference_id": "TShirtBlueM"
                                            }
                                        ],
                                        "shipping_methods": [
                                            "string"
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.EstimateFulfillmentRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "address": {
                                            "address1": "100 Nowhere Blvd",
                                            "address2": "Suite 100",
                                            "city": "Gotham City",
                                            "company_name": "Wayne Enterprises",
                                            "country": "US",
                                            "state": "NJ",
                                            "zip_code": "07093"
                                        },
                                        "products": [
                                            {
                                                "id": 0,
                                                "quantity": 1,
                                                "reference_id": "TShirtBlueM"
                                            }
                                        ],
                                        "shipping_methods": [
                                            "string"
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.EstimateFulfillmentRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "address": {
                                            "address1": "100 Nowhere Blvd",
                                            "address2": "Suite 100",
                                            "city": "Gotham City",
                                            "company_name": "Wayne Enterprises",
                                            "country": "US",
                                            "state": "NJ",
                                            "zip_code": "07093"
                                        },
                                        "products": [
                                            {
                                                "id": 0,
                                                "quantity": 1,
                                                "reference_id": "TShirtBlueM"
                                            }
                                        ],
                                        "shipping_methods": [
                                            "string"
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.EstimateViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "estimates": [
                                                {
                                                    "estimated_currency_code": "string",
                                                    "estimated_price": 0.1,
                                                    "fulfillment_center": {
                                                        "id": 0,
                                                        "name": "Cicero (IL)"
                                                    },
                                                    "shipping_method": "string",
                                                    "total_weight_oz": 0.1
                                                }
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.Estimate.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.Estimate.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create Order",
                "operationId": "014d459354b1309064ac8ab6993c7394",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Order.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CreateOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "financials": {
                                            "total_price": 0.1
                                        },
                                        "gift_message": "string",
                                        "location_id": 0,
                                        "order_number": "string",
                                        "products": [
                                            {
                                                "external_line_id": 0,
                                                "id": 0,
                                                "quantity": 1,
                                                "quantity_unit_of_measure_code": "string"
                                            }
                                        ],
                                        "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "recipient": {
                                            "address": {
                                                "address1": "100 Nowhere Blvd",
                                                "address2": "Suite 100",
                                                "city": "Gotham City",
                                                "company_name": "Wayne Enterprises",
                                                "country": "US",
                                                "state": "NJ",
                                                "zip_code": "07093"
                                            },
                                            "email": "john@example.com",
                                            "name": "John Doe",
                                            "phone_number": "555-555-5555"
                                        },
                                        "reference_id": "string",
                                        "retailer_program_data": {
                                            "addresses": [
                                                {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "type": "MarkFor",
                                                    "zip_code": "07093"
                                                }
                                            ],
                                            "customer_ticket_number": "string",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "department": "string",
                                            "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                            "mark_for_store": "string",
                                            "purchase_order_number": "string",
                                            "retailer_program_type": "string",
                                            "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                        },
                                        "shipping_method": "Free 2-day Shipping",
                                        "shipping_terms": {
                                            "carrier_type": "Parcel",
                                            "payment_term": "Collect"
                                        },
                                        "tags": [
                                            {
                                                "name": "Handling instructions",
                                                "value": "Fragile"
                                            }
                                        ],
                                        "type": "DTC"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CreateOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "financials": {
                                            "total_price": 0.1
                                        },
                                        "gift_message": "string",
                                        "location_id": 0,
                                        "order_number": "string",
                                        "products": [
                                            {
                                                "external_line_id": 0,
                                                "id": 0,
                                                "quantity": 1,
                                                "quantity_unit_of_measure_code": "string"
                                            }
                                        ],
                                        "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "recipient": {
                                            "address": {
                                                "address1": "100 Nowhere Blvd",
                                                "address2": "Suite 100",
                                                "city": "Gotham City",
                                                "company_name": "Wayne Enterprises",
                                                "country": "US",
                                                "state": "NJ",
                                                "zip_code": "07093"
                                            },
                                            "email": "john@example.com",
                                            "name": "John Doe",
                                            "phone_number": "555-555-5555"
                                        },
                                        "reference_id": "string",
                                        "retailer_program_data": {
                                            "addresses": [
                                                {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "type": "MarkFor",
                                                    "zip_code": "07093"
                                                }
                                            ],
                                            "customer_ticket_number": "string",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "department": "string",
                                            "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                            "mark_for_store": "string",
                                            "purchase_order_number": "string",
                                            "retailer_program_type": "string",
                                            "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                        },
                                        "shipping_method": "Free 2-day Shipping",
                                        "shipping_terms": {
                                            "carrier_type": "Parcel",
                                            "payment_term": "Collect"
                                        },
                                        "tags": [
                                            {
                                                "name": "Handling instructions",
                                                "value": "Fragile"
                                            }
                                        ],
                                        "type": "DTC"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CreateOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "financials": {
                                            "total_price": 0.1
                                        },
                                        "gift_message": "string",
                                        "location_id": 0,
                                        "order_number": "string",
                                        "products": [
                                            {
                                                "external_line_id": 0,
                                                "id": 0,
                                                "quantity": 1,
                                                "quantity_unit_of_measure_code": "string"
                                            }
                                        ],
                                        "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "recipient": {
                                            "address": {
                                                "address1": "100 Nowhere Blvd",
                                                "address2": "Suite 100",
                                                "city": "Gotham City",
                                                "company_name": "Wayne Enterprises",
                                                "country": "US",
                                                "state": "NJ",
                                                "zip_code": "07093"
                                            },
                                            "email": "john@example.com",
                                            "name": "John Doe",
                                            "phone_number": "555-555-5555"
                                        },
                                        "reference_id": "string",
                                        "retailer_program_data": {
                                            "addresses": [
                                                {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "type": "MarkFor",
                                                    "zip_code": "07093"
                                                }
                                            ],
                                            "customer_ticket_number": "string",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "department": "string",
                                            "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                            "mark_for_store": "string",
                                            "purchase_order_number": "string",
                                            "retailer_program_type": "string",
                                            "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                        },
                                        "shipping_method": "Free 2-day Shipping",
                                        "shipping_terms": {
                                            "carrier_type": "Parcel",
                                            "payment_term": "Collect"
                                        },
                                        "tags": [
                                            {
                                                "name": "Handling instructions",
                                                "value": "Fragile"
                                            }
                                        ],
                                        "type": "DTC"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CreateOrderModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "financials": {
                                            "total_price": 0.1
                                        },
                                        "gift_message": "string",
                                        "location_id": 0,
                                        "order_number": "string",
                                        "products": [
                                            {
                                                "external_line_id": 0,
                                                "id": 0,
                                                "quantity": 1,
                                                "quantity_unit_of_measure_code": "string"
                                            }
                                        ],
                                        "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                        "recipient": {
                                            "address": {
                                                "address1": "100 Nowhere Blvd",
                                                "address2": "Suite 100",
                                                "city": "Gotham City",
                                                "company_name": "Wayne Enterprises",
                                                "country": "US",
                                                "state": "NJ",
                                                "zip_code": "07093"
                                            },
                                            "email": "john@example.com",
                                            "name": "John Doe",
                                            "phone_number": "555-555-5555"
                                        },
                                        "reference_id": "string",
                                        "retailer_program_data": {
                                            "addresses": [
                                                {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "type": "MarkFor",
                                                    "zip_code": "07093"
                                                }
                                            ],
                                            "customer_ticket_number": "string",
                                            "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "department": "string",
                                            "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                            "mark_for_store": "string",
                                            "purchase_order_number": "string",
                                            "retailer_program_type": "string",
                                            "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                        },
                                        "shipping_method": "Free 2-day Shipping",
                                        "shipping_terms": {
                                            "carrier_type": "Parcel",
                                            "payment_term": "Collect"
                                        },
                                        "tags": [
                                            {
                                                "name": "Handling instructions",
                                                "value": "Fragile"
                                            }
                                        ],
                                        "type": "DTC"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.OrderViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "channel": {
                                                "id": 0,
                                                "name": "ShipBobs-Shopify-Store"
                                            },
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "financials": {
                                                "total_price": 0.1
                                            },
                                            "gift_message": "string",
                                            "id": 0,
                                            "order_number": "string",
                                            "products": [
                                                {
                                                    "external_line_id": 0,
                                                    "gtin": "string",
                                                    "id": 0,
                                                    "quantity": 0,
                                                    "quantity_unit_of_measure_code": "string",
                                                    "reference_id": "TShirtBlueM",
                                                    "sku": "TShirtBlueM",
                                                    "unit_price": 0.1,
                                                    "upc": "string"
                                                }
                                            ],
                                            "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "recipient": {
                                                "address": {
                                                    "address1": "100 Nowhere Blvd",
                                                    "address2": "Suite 100",
                                                    "city": "Gotham City",
                                                    "company_name": "Wayne Enterprises",
                                                    "country": "US",
                                                    "state": "NJ",
                                                    "zip_code": "07093"
                                                },
                                                "email": "john@example.com",
                                                "name": "John Doe",
                                                "phone_number": "555-555-5555"
                                            },
                                            "reference_id": "string",
                                            "retailer_program_data": {
                                                "addresses": [
                                                    {
                                                        "address1": "100 Nowhere Blvd",
                                                        "address2": "Suite 100",
                                                        "city": "Gotham City",
                                                        "company_name": "Wayne Enterprises",
                                                        "country": "US",
                                                        "state": "NJ",
                                                        "type": "MarkFor",
                                                        "zip_code": "07093"
                                                    }
                                                ],
                                                "customer_ticket_number": "string",
                                                "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "department": "string",
                                                "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                                "mark_for_store": "string",
                                                "purchase_order_number": "string",
                                                "retailer_program_type": "string",
                                                "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                            },
                                            "shipments": [
                                                {
                                                    "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                                    "gift_message": "string",
                                                    "id": 0,
                                                    "insurance_value": 0,
                                                    "invoice_amount": 0,
                                                    "invoice_currency_code": "string",
                                                    "is_tracking_uploaded": true,
                                                    "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                    "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                    "location": {
                                                        "id": 0,
                                                        "name": "Cicero (IL)"
                                                    },
                                                    "measurements": {
                                                        "depth_in": 0,
                                                        "length_in": 0,
                                                        "total_weight_oz": 0,
                                                        "width_in": 0
                                                    },
                                                    "order_id": 0,
                                                    "package_material_type": "Unknown",
                                                    "parent_cartons": [
                                                        {
                                                            "barcode": "string",
                                                            "cartons": [
                                                                {
                                                                    "barcode": "string",
                                                                    "carton_details": [
                                                                        {
                                                                            "products": [
                                                                                {
                                                                                    "id": 0,
                                                                                    "inventory_items": [
                                                                                        {
                                                                                            "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                            "id": 0,
                                                                                            "is_dangerous_goods": true,
                                                                                            "lot": "22222",
                                                                                            "name": "Medium Blue T-Shirt",
                                                                                            "quantity": 0,
                                                                                            "quantity_committed": 0,
                                                                                            "serial_numbers": [
                                                                                                "string"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "name": "Medium Blue T-Shirt",
                                                                                    "reference_id": "TShirtBlueM",
                                                                                    "sku": "TShirtBlueM"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "id": 0,
                                                                    "measurements": {
                                                                        "depth_in": 0.1,
                                                                        "length_in": 0.1,
                                                                        "total_weight_oz": 0.1,
                                                                        "width_in": 0.1
                                                                    },
                                                                    "type": "Box or pallet"
                                                                }
                                                            ],
                                                            "measurements": {
                                                                "depth_in": 0.1,
                                                                "length_in": 0.1,
                                                                "total_weight_oz": 0.1,
                                                                "width_in": 0.1
                                                            },
                                                            "type": "Box or pallet"
                                                        }
                                                    ],
                                                    "products": [
                                                        {
                                                            "id": 0,
                                                            "inventory_items": [
                                                                {
                                                                    "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                    "id": 0,
                                                                    "is_dangerous_goods": true,
                                                                    "lot": "22222",
                                                                    "name": "Medium Blue T-Shirt",
                                                                    "quantity": 0,
                                                                    "quantity_committed": 0,
                                                                    "serial_numbers": [
                                                                        "string"
                                                                    ]
                                                                }
                                                            ],
                                                            "name": "Medium Blue T-Shirt",
                                                            "reference_id": "TShirtBlueM",
                                                            "sku": "TShirtBlueM"
                                                        }
                                                    ],
                                                    "recipient": {
                                                        "address": {
                                                            "address1": "100 Nowhere Blvd",
                                                            "address2": "Suite 100",
                                                            "city": "Gotham City",
                                                            "company_name": "Wayne Enterprises",
                                                            "country": "US",
                                                            "state": "NJ",
                                                            "zip_code": "07093"
                                                        },
                                                        "email": "john@example.com",
                                                        "full_name": "John Doe",
                                                        "name": "John Doe",
                                                        "phone_number": "555-555-5555"
                                                    },
                                                    "reference_id": "string",
                                                    "require_signature": true,
                                                    "ship_option": "Standard",
                                                    "status": "None",
                                                    "status_details": [
                                                        {
                                                            "description": "string",
                                                            "exception_fulfillment_center_id": 0,
                                                            "extra_information": {
                                                                "validation_messages": [
                                                                    "string"
                                                                ]
                                                            },
                                                            "id": 0,
                                                            "inventory_id": 0,
                                                            "name": "string"
                                                        }
                                                    ],
                                                    "tracking": {
                                                        "bol": "string",
                                                        "carrier": "USPS",
                                                        "carrier_service": "Priority",
                                                        "pro_number": "string",
                                                        "scac": "string",
                                                        "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                        "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                    }
                                                }
                                            ],
                                            "shipping_method": "Free 2-day Shipping",
                                            "shipping_terms": {
                                                "carrier_type": "Parcel",
                                                "payment_term": "Collect"
                                            },
                                            "status": "Processing",
                                            "tags": [
                                                {
                                                    "name": "Handling instructions",
                                                    "value": "Fragile"
                                                }
                                            ],
                                            "type": "DTC"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Order.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get Orders",
                "description": "All parameters are AND filters",
                "operationId": "b104a65e90eefe2b42929142ce7c1b99",
                "parameters": [
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of orders to get",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.Page.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of orders per page to request",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.Limit.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IDs",
                        "in": "query",
                        "description": "order ids to filter by, comma separated <br /><strong>Example:</strong> ?IDs=1,2",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.IDs.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "ReferenceIds",
                        "in": "query",
                        "description": "Reference ids to filter by, comma separated <br /><strong>Example:</strong> ?ReferenceIds=Ref1,Ref2",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.ReferenceIds.StringArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    "string"
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "description": "Start date to filter orders inserted later than",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.StartDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "description": "End date to filter orders inserted earlier than",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.EndDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "SortOrder",
                        "in": "query",
                        "description": "Order to sort results in",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.SortOrder"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "Newest",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "HasTracking",
                        "in": "query",
                        "description": "Has any portion of this order been assigned a tracking number",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.HasTracking.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "LastUpdateStartDate",
                        "in": "query",
                        "description": "Start date to filter orders updated later than",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.LastUpdateStartDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "LastUpdateEndDate",
                        "in": "query",
                        "description": "End date to filter orders updated later than",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.LastUpdateEndDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IsTrackingUploaded",
                        "in": "query",
                        "description": "Filter orders that their tracking information was fully uploaded",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.IsTrackingUploaded.Boolean"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "True",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "LastTrackingUpdateStartDate",
                        "in": "query",
                        "description": "Start date to filter orders with tracking updates later than the supplied date. Will only return orders that have tracking information",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.LastTrackingUpdateStartDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "LastTrackingUpdateEndDate",
                        "in": "query",
                        "description": "End date to filter orders updated later than the supplied date. Will only return orders that have tracking information",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.LastTrackingUpdateEndDate.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "2019-08-24T14:15:22+00:00",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.OrderViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "channel": {
                                                    "id": 0,
                                                    "name": "ShipBobs-Shopify-Store"
                                                },
                                                "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "financials": {
                                                    "total_price": 0.1
                                                },
                                                "gift_message": "string",
                                                "id": 0,
                                                "order_number": "string",
                                                "products": [
                                                    {
                                                        "external_line_id": 0,
                                                        "gtin": "string",
                                                        "id": 0,
                                                        "quantity": 0,
                                                        "quantity_unit_of_measure_code": "string",
                                                        "reference_id": "TShirtBlueM",
                                                        "sku": "TShirtBlueM",
                                                        "unit_price": 0.1,
                                                        "upc": "string"
                                                    }
                                                ],
                                                "purchase_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "recipient": {
                                                    "address": {
                                                        "address1": "100 Nowhere Blvd",
                                                        "address2": "Suite 100",
                                                        "city": "Gotham City",
                                                        "company_name": "Wayne Enterprises",
                                                        "country": "US",
                                                        "state": "NJ",
                                                        "zip_code": "07093"
                                                    },
                                                    "email": "john@example.com",
                                                    "name": "John Doe",
                                                    "phone_number": "555-555-5555"
                                                },
                                                "reference_id": "string",
                                                "retailer_program_data": {
                                                    "addresses": [
                                                        {
                                                            "address1": "100 Nowhere Blvd",
                                                            "address2": "Suite 100",
                                                            "city": "Gotham City",
                                                            "company_name": "Wayne Enterprises",
                                                            "country": "US",
                                                            "state": "NJ",
                                                            "type": "MarkFor",
                                                            "zip_code": "07093"
                                                        }
                                                    ],
                                                    "customer_ticket_number": "string",
                                                    "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                    "department": "string",
                                                    "doNotShipBeforeDate": "2019-08-24T14:15:22.0000000+00:00",
                                                    "mark_for_store": "string",
                                                    "purchase_order_number": "string",
                                                    "retailer_program_type": "string",
                                                    "shipByDate": "2019-08-24T14:15:22.0000000+00:00"
                                                },
                                                "shipments": [
                                                    {
                                                        "actual_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "delivery_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "estimated_fulfillment_date": "2019-08-24T14:15:22.0000000+00:00",
                                                        "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                                                        "gift_message": "string",
                                                        "id": 0,
                                                        "insurance_value": 0,
                                                        "invoice_amount": 0,
                                                        "invoice_currency_code": "string",
                                                        "is_tracking_uploaded": true,
                                                        "last_tracking_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                        "last_update_at": "2019-08-24T14:15:22.0000000+00:00",
                                                        "location": {
                                                            "id": 0,
                                                            "name": "Cicero (IL)"
                                                        },
                                                        "measurements": {
                                                            "depth_in": 0,
                                                            "length_in": 0,
                                                            "total_weight_oz": 0,
                                                            "width_in": 0
                                                        },
                                                        "order_id": 0,
                                                        "package_material_type": "Unknown",
                                                        "parent_cartons": [
                                                            {
                                                                "barcode": "string",
                                                                "cartons": [
                                                                    {
                                                                        "barcode": "string",
                                                                        "carton_details": [
                                                                            {
                                                                                "products": [
                                                                                    {
                                                                                        "id": 0,
                                                                                        "inventory_items": [
                                                                                            {
                                                                                                "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                                                "id": 0,
                                                                                                "is_dangerous_goods": true,
                                                                                                "lot": "22222",
                                                                                                "name": "Medium Blue T-Shirt",
                                                                                                "quantity": 0,
                                                                                                "quantity_committed": 0,
                                                                                                "serial_numbers": [
                                                                                                    null
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "name": "Medium Blue T-Shirt",
                                                                                        "reference_id": "TShirtBlueM",
                                                                                        "sku": "TShirtBlueM"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "id": 0,
                                                                        "measurements": {
                                                                            "depth_in": 0.1,
                                                                            "length_in": 0.1,
                                                                            "total_weight_oz": 0.1,
                                                                            "width_in": 0.1
                                                                        },
                                                                        "type": "Box or pallet"
                                                                    }
                                                                ],
                                                                "measurements": {
                                                                    "depth_in": 0.1,
                                                                    "length_in": 0.1,
                                                                    "total_weight_oz": 0.1,
                                                                    "width_in": 0.1
                                                                },
                                                                "type": "Box or pallet"
                                                            }
                                                        ],
                                                        "products": [
                                                            {
                                                                "id": 0,
                                                                "inventory_items": [
                                                                    {
                                                                        "expiration_date": "2019-08-24T14:15:22.0000000+00:00",
                                                                        "id": 0,
                                                                        "is_dangerous_goods": true,
                                                                        "lot": "22222",
                                                                        "name": "Medium Blue T-Shirt",
                                                                        "quantity": 0,
                                                                        "quantity_committed": 0,
                                                                        "serial_numbers": [
                                                                            "string"
                                                                        ]
                                                                    }
                                                                ],
                                                                "name": "Medium Blue T-Shirt",
                                                                "reference_id": "TShirtBlueM",
                                                                "sku": "TShirtBlueM"
                                                            }
                                                        ],
                                                        "recipient": {
                                                            "address": {
                                                                "address1": "100 Nowhere Blvd",
                                                                "address2": "Suite 100",
                                                                "city": "Gotham City",
                                                                "company_name": "Wayne Enterprises",
                                                                "country": "US",
                                                                "state": "NJ",
                                                                "zip_code": "07093"
                                                            },
                                                            "email": "john@example.com",
                                                            "full_name": "John Doe",
                                                            "name": "John Doe",
                                                            "phone_number": "555-555-5555"
                                                        },
                                                        "reference_id": "string",
                                                        "require_signature": true,
                                                        "ship_option": "Standard",
                                                        "status": "None",
                                                        "status_details": [
                                                            {
                                                                "description": "string",
                                                                "exception_fulfillment_center_id": 0,
                                                                "extra_information": {
                                                                    "validation_messages": [
                                                                        "string"
                                                                    ]
                                                                },
                                                                "id": 0,
                                                                "inventory_id": 0,
                                                                "name": "string"
                                                            }
                                                        ],
                                                        "tracking": {
                                                            "bol": "string",
                                                            "carrier": "USPS",
                                                            "carrier_service": "Priority",
                                                            "pro_number": "string",
                                                            "scac": "string",
                                                            "shipping_date": "2019-08-24T14:15:22.0000000+00:00",
                                                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                                                            "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                                                        }
                                                    }
                                                ],
                                                "shipping_method": "Free 2-day Shipping",
                                                "shipping_terms": {
                                                    "carrier_type": "Parcel",
                                                    "payment_term": "Collect"
                                                },
                                                "status": "Processing",
                                                "tags": [
                                                    {
                                                        "name": "Handling instructions",
                                                        "value": "Fragile"
                                                    }
                                                ],
                                                "type": "DTC"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    }
                }
            }
        },
        "/shipment/{shipmentId}/logs": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get logs for one Shipment by Shipment Id",
                "operationId": "aefaa6a540d93e2dea0584a6fb69fad5",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Logs.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Logs.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "log_type_id": 0,
                                                "log_type_name": "string",
                                                "log_type_text": "string",
                                                "metadata": {
                                                    "property1": "string",
                                                    "property2": "string"
                                                },
                                                "timestamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Logs.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/shipment/cancelbulk": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel multiple Shipments by Shipment Id",
                "operationId": "d4ff930aa01d3593cec89c7a8959fe67",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel ID for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Post.Api.Shipment.Cancelbulk.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The shipment IDs to cancel",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CancelShipmentsModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "shipment_ids": [
                                            0
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CancelShipmentsModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "shipment_ids": [
                                            0
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CancelShipmentsModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "shipment_ids": [
                                            0
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Orders.CancelShipmentsModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "shipment_ids": [
                                            0
                                        ]
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.CanceledShipmentsViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "results": [
                                                {
                                                    "action": "Cancel",
                                                    "is_success": true,
                                                    "reason": "string",
                                                    "shipment_id": 0
                                                }
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Shipment.Cancelbulk.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Post.Api.Shipment.Cancelbulk.Internal.Server.Error.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order/{orderId}/shipment/{shipmentId}/timeline": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get one Shipment's status timeline by Order Id and Shipment Id",
                "operationId": "46a877cb09f66372f7381c7086049150",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The order id to get the shipment for",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.OrderId.Integer"
                        }
                    },
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment id to get",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.ShipmentId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "log_type_id": 0,
                                                "log_type_name": "string",
                                                "log_type_text": "string",
                                                "metadata": {
                                                    "property1": "string",
                                                    "property2": "string"
                                                },
                                                "timestamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/product/{productId}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Modify a single product\n",
                "operationId": "62a9ec3b05c0c73f302dfe8c2ab1c287",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Unique identifier of the product to modify",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Products.Put.Api.Product.ProductId.ProductId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Products.Put.Api.Product.ProductId.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated fields to the product",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.UpdateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.UpdateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.UpdateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.UpdateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProductViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "barcode": "123456789012",
                                            "bundle_root_information": {
                                                "id": 0,
                                                "name": "string"
                                            },
                                            "channel": {
                                                "id": 0,
                                                "name": "House of Slippers"
                                            },
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "fulfillable_inventory_items": [
                                                {
                                                    "id": 0,
                                                    "name": "Medium Blue T-Shirt",
                                                    "quantity": 0
                                                }
                                            ],
                                            "fulfillable_quantity_by_fulfillment_center": [
                                                {
                                                    "committed_quantity": 0,
                                                    "fulfillable_quantity": 0,
                                                    "id": 0,
                                                    "name": "Cicero",
                                                    "onhand_quantity": 0
                                                }
                                            ],
                                            "gtin": "012345678905",
                                            "id": 0,
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "total_committed_quantity": 0,
                                            "total_fulfillable_quantity": 0,
                                            "total_onhand_quantity": 0,
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Put.Api.Product.ProductId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Put.Api.Product.ProductId.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a single product\n",
                "operationId": "9d82d40f4758612d28c98612ce997deb",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Unique identifier of the product",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.ProductId.ProductId.Integer"
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.ProductId.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProductViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "barcode": "123456789012",
                                            "bundle_root_information": {
                                                "id": 0,
                                                "name": "string"
                                            },
                                            "channel": {
                                                "id": 0,
                                                "name": "House of Slippers"
                                            },
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "fulfillable_inventory_items": [
                                                {
                                                    "id": 0,
                                                    "name": "Medium Blue T-Shirt",
                                                    "quantity": 0
                                                }
                                            ],
                                            "fulfillable_quantity_by_fulfillment_center": [
                                                {
                                                    "committed_quantity": 0,
                                                    "fulfillable_quantity": 0,
                                                    "id": 0,
                                                    "name": "Cicero",
                                                    "onhand_quantity": 0
                                                }
                                            ],
                                            "gtin": "012345678905",
                                            "id": 0,
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "total_committed_quantity": 0,
                                            "total_fulfillable_quantity": 0,
                                            "total_onhand_quantity": 0,
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.ProductId.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get multiple products\n",
                "operationId": "5e4fe606de2077dfa918ff128f5bbfff",
                "parameters": [
                    {
                        "name": "ReferenceIds",
                        "in": "query",
                        "description": "Comma separated list of reference ids to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.ReferenceIds.StringArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    "string"
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of products to get - Valid Range is 0 to integer max with a default of 1",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.Page.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 2147483647,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of products per page to request - Valid Range is 1 to 250 with a default of 50",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.Limit.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "IDs",
                        "in": "query",
                        "description": "Comma separated list of product ids to filter by",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.IDs.IntegerArray"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": [
                                    0
                                ],
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Search",
                        "in": "query",
                        "description": "Search is available for 2 fields of the inventory record related to the product: Inventory ID and Name -\n1. Expected behavior for search by Inventory ID is exact match\n2. Expected behavior for search by Inventory Name is partial match, i.e. does not have to be start of word, \nbut must be consecutive characters. This is not case sensitive.\n",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.Search.String"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "string",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "ActiveStatus",
                        "in": "query",
                        "description": "Status filter for products:\n- Any: Include both active and inactive\n- Active: Filter products that are Active\n- Inactive: Filter products that are Inactive\",\n",
                        "schema": {
                            "$ref": "#/components/schemas/Products.ProductActiveStatus"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "Any",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "BundleStatus",
                        "in": "query",
                        "description": "Bundle filter for products:\n- Any: Don't filter and consider products that are bundles or not bundles\n- Bundle: Filter by products that are bundles\n- NotBundle: Filter by products that are not bundles\"\n",
                        "schema": {
                            "$ref": "#/components/schemas/Products.ProductBundleStatus"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "Any",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "schema": {
                            "$ref": "#/components/schemas/Products.Get.Api.Product.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Page-Number": {
                                "description": "Number of the current page",
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.OK.Page.Number.Int"
                                }
                            },
                            "Total-Pages": {
                                "description": "Total number of pages of results",
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.OK.Total.Pages.Int"
                                }
                            },
                            "Total-Count": {
                                "description": "Total number of results",
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.OK.Total.Count.Int"
                                }
                            },
                            "Page-Size": {
                                "description": "Number of results per page",
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.OK.Page.Size.Int"
                                }
                            },
                            "Next-Page": {
                                "description": "The href of the next page of results, if there is a next page",
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.OK.Next.Page.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProductViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "barcode": "123456789012",
                                                "bundle_root_information": {
                                                    "id": 0,
                                                    "name": "string"
                                                },
                                                "channel": {
                                                    "id": 0,
                                                    "name": "House of Slippers"
                                                },
                                                "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "fulfillable_inventory_items": [
                                                    {
                                                        "id": 0,
                                                        "name": "Medium Blue T-Shirt",
                                                        "quantity": 0
                                                    }
                                                ],
                                                "fulfillable_quantity_by_fulfillment_center": [
                                                    {
                                                        "committed_quantity": 0,
                                                        "fulfillable_quantity": 0,
                                                        "id": 0,
                                                        "name": "Cicero",
                                                        "onhand_quantity": 0
                                                    }
                                                ],
                                                "gtin": "012345678905",
                                                "id": 0,
                                                "name": "Medium Blue T-Shirt",
                                                "reference_id": "TShirtBlueM",
                                                "sku": "TShirtBlueM",
                                                "total_committed_quantity": 0,
                                                "total_fulfillable_quantity": 0,
                                                "total_onhand_quantity": 0,
                                                "unit_price": 20.32,
                                                "upc": "012345678912"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Get.Api.Product.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a single product to the store\n",
                "operationId": "0c4a773215d74006c7062e138ae1b94e",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Products.Post.Api.Product.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The product to add",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "reference_id": "TShirtBlueM",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "reference_id": "TShirtBlueM",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "reference_id": "TShirtBlueM",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "barcode": "123456789012",
                                        "gtin": "012345678905",
                                        "name": "Medium Blue T-Shirt",
                                        "reference_id": "TShirtBlueM",
                                        "sku": "TShirtBlueM",
                                        "unit_price": 20.32,
                                        "upc": "012345678912"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProductViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "barcode": "123456789012",
                                            "bundle_root_information": {
                                                "id": 0,
                                                "name": "string"
                                            },
                                            "channel": {
                                                "id": 0,
                                                "name": "House of Slippers"
                                            },
                                            "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                            "fulfillable_inventory_items": [
                                                {
                                                    "id": 0,
                                                    "name": "Medium Blue T-Shirt",
                                                    "quantity": 0
                                                }
                                            ],
                                            "fulfillable_quantity_by_fulfillment_center": [
                                                {
                                                    "committed_quantity": 0,
                                                    "fulfillable_quantity": 0,
                                                    "id": 0,
                                                    "name": "Cicero",
                                                    "onhand_quantity": 0
                                                }
                                            ],
                                            "gtin": "012345678905",
                                            "id": 0,
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "total_committed_quantity": 0,
                                            "total_fulfillable_quantity": 0,
                                            "total_onhand_quantity": 0,
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Post.Api.Product.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Post.Api.Product.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product/batch": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add multiple products to the store\n",
                "operationId": "f6471542c62b872d532579b96360f807",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "Channel Id for Operation",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Products.Post.Api.Product.Batch.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of up to 50 products to add",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModelArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "barcode": "123456789012",
                                            "gtin": "012345678905",
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModelArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "barcode": "123456789012",
                                            "gtin": "012345678905",
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModelArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "barcode": "123456789012",
                                            "gtin": "012345678905",
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products.CreateProductModelArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "barcode": "123456789012",
                                            "gtin": "012345678905",
                                            "name": "Medium Blue T-Shirt",
                                            "reference_id": "TShirtBlueM",
                                            "sku": "TShirtBlueM",
                                            "unit_price": 20.32,
                                            "upc": "012345678912"
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.ProductViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "barcode": "123456789012",
                                                "bundle_root_information": {
                                                    "id": 0,
                                                    "name": "string"
                                                },
                                                "channel": {
                                                    "id": 0,
                                                    "name": "House of Slippers"
                                                },
                                                "created_date": "2019-08-24T14:15:22.0000000+00:00",
                                                "fulfillable_inventory_items": [
                                                    {
                                                        "id": 0,
                                                        "name": "Medium Blue T-Shirt",
                                                        "quantity": 0
                                                    }
                                                ],
                                                "fulfillable_quantity_by_fulfillment_center": [
                                                    {
                                                        "committed_quantity": 0,
                                                        "fulfillable_quantity": 0,
                                                        "id": 0,
                                                        "name": "Cicero",
                                                        "onhand_quantity": 0
                                                    }
                                                ],
                                                "gtin": "012345678905",
                                                "id": 0,
                                                "name": "Medium Blue T-Shirt",
                                                "reference_id": "TShirtBlueM",
                                                "sku": "TShirtBlueM",
                                                "total_committed_quantity": 0,
                                                "total_fulfillable_quantity": 0,
                                                "total_onhand_quantity": 0,
                                                "unit_price": 20.32,
                                                "upc": "012345678912"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Post.Api.Product.Batch.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products.Post.Api.Product.Batch.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/integration-metrics:batchLog/sync-metrics": {
            "post": {
                "tags": [
                    "Hidden",
                    "IntegrationMetrics",
                    "Metrics"
                ],
                "summary": "Integration Metrics Batch Log Sync Metrics\n",
                "operationId": "b0584f4097933b07e4c4b1d44f5e8e50",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.SyncMetricsLogRequestArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                            "error_type_id": 0,
                                            "is_success_metric": true,
                                            "order_id": 0,
                                            "order_status": "string",
                                            "order_sub_status": "string",
                                            "platform_source": 0,
                                            "store_integration_id": 0,
                                            "store_name": "string",
                                            "store_reference_id": "string",
                                            "sync_count": 0,
                                            "sync_start_date_time": "2019-08-24T14:15:22.0000000+00:00",
                                            "sync_type": 0,
                                            "user_id": 0
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.SyncMetricsLogRequestArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                            "error_type_id": 0,
                                            "is_success_metric": true,
                                            "order_id": 0,
                                            "order_status": "string",
                                            "order_sub_status": "string",
                                            "platform_source": 0,
                                            "store_integration_id": 0,
                                            "store_name": "string",
                                            "store_reference_id": "string",
                                            "sync_count": 0,
                                            "sync_start_date_time": "2019-08-24T14:15:22.0000000+00:00",
                                            "sync_type": 0,
                                            "user_id": 0
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.SyncMetricsLogRequestArray"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": [
                                        {
                                            "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                            "error_type_id": 0,
                                            "is_success_metric": true,
                                            "order_id": 0,
                                            "order_status": "string",
                                            "order_sub_status": "string",
                                            "platform_source": 0,
                                            "store_integration_id": 0,
                                            "store_name": "string",
                                            "store_reference_id": "string",
                                            "sync_count": 0,
                                            "sync_start_date_time": "2019-08-24T14:15:22.0000000+00:00",
                                            "sync_type": 0,
                                            "user_id": 0
                                        }
                                    ],
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/integration-metrics:log/tracking-error": {
            "post": {
                "tags": [
                    "Hidden",
                    "IntegrationMetrics",
                    "Metrics"
                ],
                "summary": "Integration Metrics Log Tracking Error\n",
                "operationId": "2f519f27784477045fce71d254966584",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.TrackingUploadErrorLogRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                        "error_type_id": 0,
                                        "is_tracking_uploaded": true,
                                        "lineItemErrors": [
                                            {
                                                "errorTypeId": 0,
                                                "isTrackingUploaded": true,
                                                "lineItemId": "string",
                                                "sku": "string",
                                                "timeStamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "order_id": 0,
                                        "platform_source": 0,
                                        "store_integration_id": 0,
                                        "store_name": "string",
                                        "user_id": 0
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.TrackingUploadErrorLogRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                        "error_type_id": 0,
                                        "is_tracking_uploaded": true,
                                        "lineItemErrors": [
                                            {
                                                "errorTypeId": 0,
                                                "isTrackingUploaded": true,
                                                "lineItemId": "string",
                                                "sku": "string",
                                                "timeStamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "order_id": 0,
                                        "platform_source": 0,
                                        "store_integration_id": 0,
                                        "store_name": "string",
                                        "user_id": 0
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.TrackingUploadErrorLogRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                        "error_type_id": 0,
                                        "is_tracking_uploaded": true,
                                        "lineItemErrors": [
                                            {
                                                "errorTypeId": 0,
                                                "isTrackingUploaded": true,
                                                "lineItemId": "string",
                                                "sku": "string",
                                                "timeStamp": "2019-08-24T14:15:22.0000000+00:00"
                                            }
                                        ],
                                        "order_id": 0,
                                        "platform_source": 0,
                                        "store_integration_id": 0,
                                        "store_name": "string",
                                        "user_id": 0
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/integration-metrics:log/order-error": {
            "post": {
                "tags": [
                    "Hidden",
                    "IntegrationMetrics",
                    "Metrics"
                ],
                "summary": "Integration Metrics Log Order Error\n",
                "operationId": "1f5811183e996355f0ee160df00c71b2",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.OrderIngestionErrorLogRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                        "error_type_id": 0,
                                        "is_order_ingested": true,
                                        "order_pull_type_id": 0,
                                        "platform_source": 0,
                                        "retry_count": 0,
                                        "store_integration_id": 0,
                                        "store_name": "string",
                                        "store_order_id": "string",
                                        "store_reference_id": "string",
                                        "user_id": 0
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.OrderIngestionErrorLogRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                        "error_type_id": 0,
                                        "is_order_ingested": true,
                                        "order_pull_type_id": 0,
                                        "platform_source": 0,
                                        "retry_count": 0,
                                        "store_integration_id": 0,
                                        "store_name": "string",
                                        "store_order_id": "string",
                                        "store_reference_id": "string",
                                        "user_id": 0
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Metrics.OrderIngestionErrorLogRequest"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "error_time_stamp": "2019-08-24T14:15:22.0000000+00:00",
                                        "error_type_id": 0,
                                        "is_order_ingested": true,
                                        "order_pull_type_id": 0,
                                        "platform_source": 0,
                                        "retry_count": 0,
                                        "store_integration_id": 0,
                                        "store_name": "string",
                                        "store_order_id": "string",
                                        "store_reference_id": "string",
                                        "user_id": 0
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metrics.ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "detail": "string",
                                            "instance": "string",
                                            "property1": null,
                                            "property2": null,
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/channel": {
            "post": {
                "tags": [
                    "Channels",
                    "Hidden"
                ],
                "summary": "Create channel",
                "description": "Creates channel with provided name if none exists\r\nOtherwise, returns the existing channel",
                "operationId": "92111627502044489c5f9a8f8e0a8228",
                "parameters": [
                    {
                        "name": "InheritScopes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channels.CreateChannelRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "name": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channels.CreateChannelRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "name": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channels.CreateChannelRequestModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "name": "string"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channels.ChannelViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "application_name": "Api",
                                            "id": 0,
                                            "name": "string",
                                            "scopes": [
                                                "channels_read",
                                                "orders_read",
                                                "orders_write"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channels.ChannelViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "application_name": "Api",
                                            "id": 0,
                                            "name": "string",
                                            "scopes": [
                                                "channels_read",
                                                "orders_read",
                                                "orders_write"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channels.ErrorResponse"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "get": {
                "tags": [
                    "Channels"
                ],
                "summary": "Get channels",
                "operationId": "c94a92715c0351cba55c1eff9c4649f2",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channels.ChannelArrayViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "application_name": "Api",
                                                "id": 0,
                                                "name": "string",
                                                "scopes": [
                                                    "channels_read",
                                                    "orders_read",
                                                    "orders_write"
                                                ]
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channels.ErrorResponse"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/webhook/{id}": {
            "delete": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Delete an existing webhook subscription",
                "operationId": "db62c75d5623351365b17c3d309b2745",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Delete.1.0.Webhook.Id.Id.Integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Delete.1.0.Webhook.Id.Not.Found.OneOf.HttpValidationProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "$type": "string",
                                            "detail": "string",
                                            "errors": {
                                                "property1": [
                                                    "string"
                                                ],
                                                "property2": [
                                                    "string"
                                                ]
                                            },
                                            "extensions": {
                                                "property1": {},
                                                "property2": {}
                                            },
                                            "instance": "string",
                                            "status": 0,
                                            "title": "string",
                                            "type": "string"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/webhook": {
            "get": {
                "tags": [
                    "Hidden",
                    "Webhooks"
                ],
                "summary": "Get All Webhooks by User Id and Topic",
                "description": "All parameters are AND filters",
                "operationId": "1eb7514d00f6689b32bdcb27a5f443b7",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "User Id of the webhooks requested",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Get.1.0.Internal.Webhook.UserId.Integer"
                        }
                    },
                    {
                        "name": "Topic",
                        "in": "query",
                        "description": "Topic of the webhooks requested",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Topics"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "order_shipped",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "ChannelId",
                        "in": "query",
                        "description": "Optional channel id of the webhooks requested",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Get.1.0.Internal.Webhook.ChannelId.Integer"
                        }
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of Webhooks to get",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Get.1.0.Internal.Webhook.Page.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 2147483647,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of Webhooks per page to request",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Get.1.0.Internal.Webhook.Limit.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    }
                }
            }
        },
        "/webhook": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Get Webhooks",
                "description": "All parameters are AND filters",
                "operationId": "e9181e4f0862d1d40e984035d6261bc9",
                "parameters": [
                    {
                        "name": "Topic",
                        "in": "query",
                        "description": "Topic of the webhooks requested",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Topics"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": "order_shipped",
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Page",
                        "in": "query",
                        "description": "Page of Webhooks to get",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.Page.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 2147483647,
                                "externalValue": ""
                            }
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "description": "Amount of Webhooks per page to request",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.Limit.Integer"
                        },
                        "examples": {
                            "default": {
                                "summary": "",
                                "description": "",
                                "value": 1,
                                "externalValue": ""
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Page-Number": {
                                "description": "Number of the current page",
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.OK.Page.Number.Int"
                                }
                            },
                            "Total-Pages": {
                                "description": "Total number of pages of results",
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.OK.Total.Pages.Int"
                                }
                            },
                            "Total-Count": {
                                "description": "Total number of results",
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.OK.Total.Count.Int"
                                }
                            },
                            "Page-Size": {
                                "description": "Number of results per page",
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.OK.Page.Size.Int"
                                }
                            },
                            "Next-Page": {
                                "description": "The href of the next page of results, if there is a next page",
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.OK.Next.Page.String"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": "string",
                                        "externalValue": ""
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.WebhookViewModelArray"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": [
                                            {
                                                "created_at": "2019-08-24T14:15:22.0000000+00:00",
                                                "id": 12345,
                                                "subscription_url": "http://example.com",
                                                "topic": "order_shipped"
                                            }
                                        ],
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    }
                }
            },
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Create a new webhook subscription",
                "operationId": "72e0c2d956e31774c876c58c53e8dce0",
                "parameters": [
                    {
                        "name": "shipbob_channel_id",
                        "in": "header",
                        "description": "",
                        "schema": {
                            "$ref": "#/components/schemas/Webhooks.Post.1.0.Webhook.Shipbob.Channel.Id.Integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhooks.CreateWebhookSubscriptionModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "subscription_url": "https://mywebsite.com/shipbob/handler",
                                        "topic": "order_shipped"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhooks.CreateWebhookSubscriptionModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "subscription_url": "https://mywebsite.com/shipbob/handler",
                                        "topic": "order_shipped"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhooks.CreateWebhookSubscriptionModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "subscription_url": "https://mywebsite.com/shipbob/handler",
                                        "topic": "order_shipped"
                                    },
                                    "externalValue": ""
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhooks.CreateWebhookSubscriptionModel"
                            },
                            "examples": {
                                "default": {
                                    "summary": "",
                                    "description": "",
                                    "value": {
                                        "subscription_url": "https://mywebsite.com/shipbob/handler",
                                        "topic": "order_shipped"
                                    },
                                    "externalValue": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.WebhookViewModel"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "created_at": "2019-08-24T14:15:22.0000000+00:00",
                                            "id": 12345,
                                            "subscription_url": "http://example.com",
                                            "topic": "order_shipped"
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Post.1.0.Webhook.Bad.Request.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No access right at this time"
                    },
                    "403": {
                        "description": "No access"
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhooks.Post.1.0.Webhook.Unprocessable.Entity.Object"
                                },
                                "examples": {
                                    "default": {
                                        "summary": "",
                                        "description": "",
                                        "value": {
                                            "property1": [
                                                "string"
                                            ],
                                            "property2": [
                                                "string"
                                            ]
                                        },
                                        "externalValue": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Channels.ChannelArrayViewModel": {
                "type": "array",
                "items": {},
                "additionalProperties": false
            },
            "Channels.ChannelViewModel": {
                "type": "object",
                "properties": {
                    "application_name": {
                        "type": "string",
                        "description": "Name of the application that owns the channel",
                        "example": "Api"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the channel",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the channel"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of permissions granted for the channel",
                        "example": [
                            "channels_read",
                            "orders_read",
                            "orders_write"
                        ]
                    }
                },
                "additionalProperties": false
            },
            "Channels.CreateChannelRequestModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of the channel"
                    }
                },
                "additionalProperties": false,
                "description": "Model for create channel request"
            },
            "Channels.ErrorResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Inventory.DimensionViewModel": {
                "type": "object",
                "properties": {
                    "depth": {
                        "type": "number",
                        "description": "Depth in inches of this inventory item",
                        "format": "double"
                    },
                    "length": {
                        "type": "number",
                        "description": "Length in inches of this inventory item",
                        "format": "double"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight in ounces of this inventory item",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "description": "Width in inches of this inventory item",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Information about an inventory item's dimensions"
            },
            "Inventory.FulfillmentCenterQuantityViewModel": {
                "type": "object",
                "properties": {
                    "awaiting_quantity": {
                        "type": "integer",
                        "description": "Amount of quantity awaiting arrival of a receiving order at this fulfillment center",
                        "format": "int32"
                    },
                    "committed_quantity": {
                        "type": "integer",
                        "description": "Amount of committed quantity at this fulfillment center",
                        "format": "int32"
                    },
                    "fulfillable_quantity": {
                        "type": "integer",
                        "description": "Amount of fulfillable quantity at this fulfillment center",
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the fulfillment center",
                        "format": "int32"
                    },
                    "internal_transfer_quantity": {
                        "type": "integer",
                        "description": "The quantity of items that are in the process of internal transit \r\nbetween ShipBob fulfillment centers, with a destination of this fulfillment center.\r\nThese items are not pickable or fulfillable until they have been received and moved \r\nto the \"On Hand\" quantity of the destination FC.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Cicero"
                    },
                    "onhand_quantity": {
                        "type": "integer",
                        "description": "Amount of onhand quantity at this fulfillment center",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Break down of fulfillable quantity by fulfillment center"
            },
            "Inventory.Get.Api.Inventory.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Inventory.Get.Api.Inventory.IDs.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Inventory.Get.Api.Inventory.InventoryId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Inventory.Get.Api.Inventory.InventoryId.InventoryId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Inventory.Get.Api.Inventory.IsActive.Boolea": {
                "type": "boolean"
            },
            "Inventory.Get.Api.Inventory.IsActive.Boolean": {
                "type": "boolean"
            },
            "Inventory.Get.Api.Inventory.IsDigital.Boolea": {
                "type": "boolean"
            },
            "Inventory.Get.Api.Inventory.IsDigital.Boolean": {
                "type": "boolean"
            },
            "Inventory.Get.Api.Inventory.Limit.Integer": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer",
                "format": "int32"
            },
            "Inventory.Get.Api.Inventory.LocationType.String": {
                "type": "string"
            },
            "Inventory.Get.Api.Inventory.Page.Integer": {
                "maximum": 2147483647,
                "minimum": 0,
                "type": "integer",
                "format": "int32"
            },
            "Inventory.Get.Api.Inventory.Search.String": {
                "type": "string"
            },
            "Inventory.Get.Api.Inventory.Sort.String": {
                "type": "string"
            },
            "Inventory.Get.Api.Product.ProductId.Inventory.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Inventory.Get.Api.Product.ProductId.Inventory.ProductId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Inventory.Get.Api.Product.ProductId.Inventory.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Inventory.InventoryViewModel": {
                "type": "object",
                "properties": {
                    "dimensions": {},
                    "fulfillable_quantity_by_fulfillment_center": {
                        "type": "array",
                        "items": {},
                        "description": "Fulfillable quantity of this inventory item broken down by fulfillment center location"
                    },
                    "fulfillable_quantity_by_lot": {
                        "type": "array",
                        "items": {},
                        "description": "Fulfillable quantity of this inventory item broken down by lot"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the inventory item",
                        "format": "int32"
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Whether the inventory is active or not"
                    },
                    "is_case_pick": {
                        "type": "boolean",
                        "description": "True if the inventory item is marked as case pick"
                    },
                    "is_digital": {
                        "type": "boolean",
                        "description": "True if the inventory item is marked as a digital item"
                    },
                    "is_lot": {
                        "type": "boolean",
                        "description": "True if this inventory item is organized into lots"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the inventory item",
                        "example": "Medium Blue T-Shirt"
                    },
                    "packaging_attribute": {},
                    "total_awaiting_quantity": {
                        "type": "integer",
                        "description": "Total quantity in unreceived receiving orders for this inventory item",
                        "format": "int32"
                    },
                    "total_backordered_quantity": {
                        "type": "integer",
                        "description": "The amount of the item you need to send to ShipBob to fulfill all exception orders containing \r\nthe item. This is the exception_quantity less the fulfillable_quantity of the item.",
                        "format": "int32"
                    },
                    "total_committed_quantity": {
                        "type": "integer",
                        "description": "Total committed quantity of this inventory item",
                        "format": "int32"
                    },
                    "total_exception_quantity": {
                        "type": "integer",
                        "description": "The total quantity of all items that are contained within orders that\r\nare in exception/out of stock status. Out of stock orders have not been\r\nprocessed and therefore do not have lot or fulfillment centers assigned.",
                        "format": "int32"
                    },
                    "total_fulfillable_quantity": {
                        "type": "integer",
                        "description": "Total fulfillable quantity of this inventory item",
                        "format": "int32"
                    },
                    "total_internal_transfer_quantity": {
                        "type": "integer",
                        "description": "The total quantity of all items that are in the process of internal transit \r\nbetween ShipBob fulfillment centers. These items are not pickable or fulfillable\r\nuntil they have been received and moved to the \"On Hand\" quantity of the destination FC.\r\nInternal transit quantities for each FC represent the incoming transfer stock\r\nfor that specific location.",
                        "format": "int32"
                    },
                    "total_onhand_quantity": {
                        "type": "integer",
                        "description": "Total onhand quantity of this inventory item",
                        "format": "int32"
                    },
                    "total_sellable_quantity": {
                        "type": "integer",
                        "description": "Total quantity that can be sold without overselling the inventory item.\r\nThis is calculated by subtracting the total exception quantity from the\r\nfulfillable quantity.",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Information about an inventory item"
            },
            "Inventory.InventoryViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Inventory.LotQuantityViewModel": {
                "type": "object",
                "properties": {
                    "awaiting_quantity": {
                        "type": "integer",
                        "description": "Quantity of inventory items belonging to this lot awaiting arrival of a receiving order",
                        "format": "int32"
                    },
                    "committed_quantity": {
                        "type": "integer",
                        "description": "Committed quantity of inventory items belonging to this lot",
                        "format": "int32"
                    },
                    "expiration_date": {
                        "type": "string",
                        "description": "Expiration date for this lot",
                        "format": "date-time"
                    },
                    "fulfillable_quantity": {
                        "type": "integer",
                        "description": "Fulfillable quantity of inventory items belonging to this lot",
                        "format": "int32"
                    },
                    "fulfillable_quantity_by_fulfillment_center": {
                        "type": "array",
                        "items": {},
                        "description": "Fulfillable quantity of inventory items belonging to this lot broken down by fulfillment center location"
                    },
                    "internal_transfer_quantity": {
                        "type": "integer",
                        "description": "The quantity of all items belonging to this lot that are in the process of internal transit \r\nbetween ShipBob fulfillment centers. These items are not pickable or fulfillable\r\nuntil they have been received and moved to the \"On Hand\" quantity of the destination FC.\r\nInternal transit quantities for each FC represent the incoming transfer stock\r\nfor that specific location.",
                        "format": "int32"
                    },
                    "lot_number": {
                        "type": "string",
                        "description": "Identification number of this lot",
                        "example": "1234"
                    },
                    "onhand_quantity": {
                        "type": "integer",
                        "description": "OnHand quantity of inventory items belonging to this lot",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Break down of fulfillable quantity by lot"
            },
            "Inventory.PackagingAttribute": {
                "enum": [
                    "None",
                    "Fragile",
                    "Foldable",
                    "Stackable",
                    "Book",
                    "CustomPackaging",
                    "CustomDunnage",
                    "MarketingInsert",
                    "Poster"
                ],
                "type": "integer",
                "format": "int32"
            },
            "Inventory.ProblemDetail": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {}
            },
            "Inventory.ProblemDetails": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {}
            },
            "Locations.AddressViewModel": {
                "type": "object",
                "properties": {
                    "address1": {
                        "type": "string",
                        "description": "First part of the address of the location for this service"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Second part of the address of the location for this service"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of the location"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of the location"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the location for this service"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to use in the address of the location for this service"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone Number of the location for this service"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the location"
                    },
                    "zip_code": {
                        "type": "string",
                        "description": "Zip code of the location"
                    }
                },
                "additionalProperties": false,
                "description": "The service-specific address of the location. Each object contains address type, address1, address2, city, state, country, zip code, phone number, and email"
            },
            "Locations.FcAttributeViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique Id for the fulfillment center attribute",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the attribute."
                    }
                },
                "additionalProperties": false
            },
            "Locations.FcTypeViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique Id for the fulfillment center type",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the fc type"
                    }
                },
                "additionalProperties": false
            },
            "Locations.FcTypeViewModelV2": {
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "organization_roles": {
                        "type": "array",
                        "items": {}
                    },
                    "organization_type_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "organization_type_name": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Locations.FulfillmentCenterRegionViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique Id for the location region",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the region the location is in."
                    }
                },
                "additionalProperties": false
            },
            "Locations.Get.1.0.Location.AccessGranted.Boolea": {
                "type": "boolean",
                "description": "Return all the access granted locations"
            },
            "Locations.Get.1.0.Location.AccessGranted.Boolean": {
                "type": "boolean",
                "description": "Return all the access granted locations"
            },
            "Locations.Get.1.0.Location.IncludeInactive.Boolea": {
                "type": "boolean",
                "description": "Whether the inactive locations should be included or not"
            },
            "Locations.Get.1.0.Location.IncludeInactive.Boolean": {
                "type": "boolean",
                "description": "Whether the inactive locations should be included or not"
            },
            "Locations.Get.1.0.Location.OK.OneOfArray": {
                "type": "array",
                "items": {}
            },
            "Locations.Get.1.0.Location.ReceivingEnabled.Boolea": {
                "type": "boolean",
                "description": "Return all the receiving enabled locations"
            },
            "Locations.Get.1.0.Location.ReceivingEnabled.Boolean": {
                "type": "boolean",
                "description": "Return all the receiving enabled locations"
            },
            "Locations.InternalLocationViewModel": {
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "fulfillment_center_attributes": {
                        "type": "array",
                        "items": {}
                    },
                    "fulfillment_center_type": {},
                    "is_enabled_for_new_user": {
                        "type": "boolean"
                    },
                    "is_external": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Locations.InternalLocationViewModelV2": {
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "fulfillment_center_attributes": {
                        "type": "array",
                        "items": {}
                    },
                    "fulfillment_center_type": {},
                    "is_enabled_for_new_user": {
                        "type": "boolean"
                    },
                    "sort_center": {}
                },
                "additionalProperties": false
            },
            "Locations.LocationViewModel": {
                "type": "object",
                "properties": {
                    "abbreviation": {
                        "type": "string",
                        "description": "Abbreviation of the location. Combination of nearest Airport Code and the sequence number."
                    },
                    "access_granted": {
                        "type": "boolean",
                        "description": "Indicates whether or not the user is authorized to interact at all with the location"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Available attributes for the location"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Id of the location in ShipBob’s database",
                        "format": "int32"
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Indicates if the location is operationally active or inactive"
                    },
                    "is_receiving_enabled": {
                        "type": "boolean",
                        "description": "Indicates if the receiving is enabled for FC"
                    },
                    "is_shipping_enabled": {
                        "type": "boolean",
                        "description": "Indicates if the shipping is enabled for FC"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the location. Follows the naming convention City (State Code)\r\nfor domestic FCs and City (Country Code) for international FCs"
                    },
                    "region": {},
                    "services": {
                        "type": "array",
                        "items": {},
                        "description": "Services provided by the location"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Time zone of the location"
                    }
                },
                "additionalProperties": false
            },
            "Locations.LocationViewModelV2": {
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "organization_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "owner_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parent_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "Locations.OrganizationRoleViewModel": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Locations.ServiceTypeEnum": {
                "enum": [
                    "Receiving",
                    "Returns"
                ],
                "type": "string"
            },
            "Locations.ServiceViewModel": {
                "type": "object",
                "properties": {
                    "address": {},
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the user is authorized to access this service at the location"
                    },
                    "service_type": {}
                },
                "additionalProperties": false
            },
            "Locations.SortCenterViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique Id for the fulfillment center",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Metrics.OrderIngestionErrorLogRequest": {
                "required": [
                    "store_integration_id"
                ],
                "type": "object",
                "properties": {
                    "error_time_stamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error_type_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "is_order_ingested": {
                        "type": "boolean"
                    },
                    "order_pull_type_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "platform_source": {},
                    "retry_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "store_integration_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "store_name": {
                        "maxLength": 200,
                        "type": "string"
                    },
                    "store_order_id": {
                        "type": "string"
                    },
                    "store_reference_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Metrics.PlatformSourceEnum": {
                "enum": [
                    0,
                    1,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    -1
                ],
                "type": "integer",
                "format": "int32"
            },
            "Metrics.ProblemDetail": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {}
            },
            "Metrics.ProblemDetails": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {}
            },
            "Metrics.SyncMetricsLogRequest": {
                "required": [
                    "is_success_metric",
                    "store_integration_id",
                    "sync_start_date_time",
                    "sync_type"
                ],
                "type": "object",
                "properties": {
                    "error_time_stamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error_type_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "is_success_metric": {
                        "type": "boolean"
                    },
                    "order_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "order_status": {
                        "maxLength": 20,
                        "type": "string"
                    },
                    "order_sub_status": {
                        "maxLength": 50,
                        "type": "string"
                    },
                    "platform_source": {},
                    "store_integration_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "store_name": {
                        "maxLength": 200,
                        "type": "string"
                    },
                    "store_reference_id": {
                        "maxLength": 300,
                        "type": "string"
                    },
                    "sync_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sync_start_date_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sync_type": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Metrics.SyncMetricsLogRequestArray": {
                "type": "array",
                "items": {}
            },
            "Metrics.TrackingUploadErrorLogRequest": {
                "required": [
                    "store_integration_id"
                ],
                "type": "object",
                "properties": {
                    "error_time_stamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error_type_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "is_tracking_uploaded": {
                        "type": "boolean"
                    },
                    "lineItemErrors": {
                        "type": "array",
                        "items": {}
                    },
                    "order_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "platform_source": {},
                    "store_integration_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "store_name": {
                        "maxLength": 200,
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Metrics.TrackingUploadLineItemErrorLog": {
                "type": "object",
                "properties": {
                    "errorTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isTrackingUploaded": {
                        "type": "boolean"
                    },
                    "lineItemId": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "timeStamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Orders.AddProductToOrderByProductIdModel": {
                "required": [
                    "productId",
                    "quantity"
                ],
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "external_line_id": {
                        "type": "integer",
                        "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the product",
                        "format": "int32"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The quantity of this product ordered",
                        "format": "int32"
                    },
                    "quantity_unit_of_measure_code": {
                        "type": "string",
                        "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL"
                    }
                },
                "additionalProperties": false
            },
            "Orders.AddProductToOrderByReferenceIdModel": {
                "required": [
                    "quantity",
                    "referenceId"
                ],
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "external_line_id": {
                        "type": "integer",
                        "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
                        "format": "int32"
                    },
                    "gtin": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product. Required if there is not an existing ShipBob product with a matching reference_id value.",
                        "example": "TShirtBlueM"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The quantity of this product ordered",
                        "format": "int32"
                    },
                    "quantity_unit_of_measure_code": {
                        "type": "string",
                        "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL"
                    },
                    "reference_id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference id of the product",
                        "example": "TShirtBlueM"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Product SKU"
                    },
                    "unit_price": {
                        "type": "number",
                        "description": "Price for one item",
                        "format": "double"
                    },
                    "upc": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "description": "Universal Product Code - Unique external identifier"
                    }
                },
                "additionalProperties": false
            },
            "Orders.AddProductToOrderModel": {
                "type": "object",
                "properties": {
                    "external_line_id": {
                        "type": "integer",
                        "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
                        "format": "int32"
                    },
                    "quantity": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "quantity_unit_of_measure_code": {
                        "type": "string",
                        "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL"
                    }
                },
                "additionalProperties": false
            },
            "Orders.AddStoreOrderJsonModel": {
                "required": [
                    "orderJson"
                ],
                "type": "object",
                "properties": {
                    "order_json": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Json String that represent the order on a store front system"
                    }
                },
                "additionalProperties": false,
                "description": "Model for adding a Store Order Json to a ShipBob Order."
            },
            "Orders.AddressType": {
                "enum": [
                    "MarkFor",
                    "ShipFrom"
                ],
                "type": "string"
            },
            "Orders.AddressViewModel": {
                "required": [
                    "address1",
                    "city",
                    "country"
                ],
                "type": "object",
                "properties": {
                    "address1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "First line of the address",
                        "example": "100 Nowhere Blvd"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Second line of the address",
                        "example": "Suite 100"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The city",
                        "example": "Gotham City"
                    },
                    "company_name": {
                        "type": "string",
                        "description": "Name of the company receiving the shipment",
                        "example": "Wayne Enterprises"
                    },
                    "country": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The country (Must be ISO Alpha-2 for estimates)",
                        "example": "US"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state or province",
                        "example": "NJ"
                    },
                    "zip_code": {
                        "type": "string",
                        "description": "The zip code or postal code",
                        "format": "postal-code",
                        "example": "07093"
                    }
                },
                "additionalProperties": false
            },
            "Orders.CancelShipmentsModel": {
                "type": "object",
                "properties": {
                    "shipment_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "Shipment IDs to cancel"
                    }
                },
                "additionalProperties": false,
                "description": "Model for cancel multiple shipments at once"
            },
            "Orders.CanceledOrderViewModel": {
                "type": "object",
                "properties": {
                    "canceled_shipment_results": {
                        "type": "array",
                        "items": {},
                        "description": "Results of canceling the shipments associated with the order"
                    },
                    "order": {},
                    "order_id": {
                        "type": "integer",
                        "description": "The ID of the canceled order",
                        "format": "int32"
                    },
                    "status": {}
                },
                "additionalProperties": false,
                "description": ""
            },
            "Orders.CanceledShipmentViewModel": {
                "type": "object",
                "properties": {
                    "action": {},
                    "is_success": {
                        "type": "boolean",
                        "description": "If the cancel action was successful"
                    },
                    "reason": {
                        "type": "string",
                        "description": "The reason the cancellation result"
                    },
                    "shipment_id": {
                        "type": "integer",
                        "description": "The ID of the shipment",
                        "format": "int64"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "Orders.CanceledShipmentsViewModel": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {},
                        "description": "The results of all cancellation actions"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "Orders.CancellationResult": {
                "enum": [
                    "Success",
                    "Failure",
                    "PartialSuccess"
                ],
                "type": "string"
            },
            "Orders.CarrierShipType": {
                "enum": [
                    "Parcel",
                    "Freight"
                ],
                "type": "string"
            },
            "Orders.CartonDetailsViewModel": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "items": {},
                        "description": "List of what is packed in this carton"
                    }
                },
                "additionalProperties": false
            },
            "Orders.CartonMeasurementsViewModel": {
                "type": "object",
                "properties": {
                    "depth_in": {
                        "type": "number",
                        "description": "Total depth in inches",
                        "format": "double"
                    },
                    "length_in": {
                        "type": "number",
                        "description": "Total length in inches",
                        "format": "double"
                    },
                    "total_weight_oz": {
                        "type": "number",
                        "description": "Total weight in ounces",
                        "format": "double"
                    },
                    "width_in": {
                        "type": "number",
                        "description": "Total width in inches",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Measurements of a carton"
            },
            "Orders.CartonViewModel": {
                "type": "object",
                "properties": {
                    "barcode": {
                        "type": "string",
                        "description": "Barcode assigned to this carton"
                    },
                    "carton_details": {
                        "type": "array",
                        "items": {},
                        "description": "Details about the contents of this carton"
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID assigned to this carton",
                        "format": "int32"
                    },
                    "measurements": {},
                    "type": {
                        "type": "string",
                        "description": "Type of this carton container",
                        "example": "Box or pallet"
                    }
                },
                "additionalProperties": false
            },
            "Orders.ChannelInfoViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the channel",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the channel",
                        "example": "ShipBobs-Shopify-Store"
                    }
                },
                "additionalProperties": false,
                "description": "Created by channel metadata"
            },
            "Orders.CreateOrderModel": {
                "required": [
                    "products",
                    "recipient",
                    "referenceId",
                    "shippingMethod"
                ],
                "type": "object",
                "properties": {
                    "financials": {},
                    "gift_message": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Gift message associated with the order"
                    },
                    "location_id": {
                        "type": "integer",
                        "description": "Desired Fulfillment Center Location ID. If not specified, ShipBob will determine the location that fulfills this order.",
                        "format": "int32"
                    },
                    "order_number": {
                        "maxLength": 400,
                        "type": "string",
                        "description": "User friendly orderId or store order number that will be shown on the Orders Page. If not provided, referenceId will be used"
                    },
                    "products": {
                        "minItems": 1,
                        "type": "array",
                        "items": {},
                        "description": "Products included in the order. Products identified by reference_id must also include the product name if there is no matching ShipBob product."
                    },
                    "purchase_date": {
                        "type": "string",
                        "description": "Date this order was purchase by the end user",
                        "format": "date-time"
                    },
                    "recipient": {},
                    "reference_id": {
                        "maxLength": 300,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique and immutable order identifier from your upstream system"
                    },
                    "retailer_program_data": {},
                    "shipping_method": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Client-defined shipping method matching what the user has listed as the shipping method on the Ship Option Mapping setup page in the ShipBob Merchant Portal. If they don’t match, we will create a new one and default it to Standard",
                        "example": "Free 2-day Shipping"
                    },
                    "shipping_terms": {},
                    "tags": {
                        "type": "array",
                        "items": {},
                        "description": "Key value pair array to store extra information at the order level for API purposes. ShipBob won't display the info in the ShipBob Merchant Portal or react based on this data."
                    },
                    "type": {}
                },
                "additionalProperties": false
            },
            "Orders.EstimateDetailViewModel": {
                "type": "object",
                "properties": {
                    "estimated_currency_code": {
                        "type": "string",
                        "description": "Estimated local currency code"
                    },
                    "estimated_price": {
                        "type": "number",
                        "description": "Estimated price in dollars for the provided shipping method",
                        "format": "double"
                    },
                    "fulfillment_center": {},
                    "shipping_method": {
                        "type": "string",
                        "description": "Provided shipping method. Maps to ship option in ShipBob."
                    },
                    "total_weight_oz": {
                        "type": "number",
                        "description": "Total weight of items in cart including packaging.",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Orders.EstimateFulfillmentRequestModel": {
                "required": [
                    "address",
                    "products"
                ],
                "type": "object",
                "properties": {
                    "address": {},
                    "products": {
                        "type": "array",
                        "items": {},
                        "description": "Products to be included in the order. Each product must include one of reference_id or id"
                    },
                    "shipping_methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of strings specifying shipping methods for which to fetch estimates.\r\n\r\nIf this field is omitted we will return estimates for all shipping methods defined in ShipBob"
                    }
                },
                "additionalProperties": false
            },
            "Orders.EstimateProductInfoModel": {
                "required": [
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the product (Must be provided if reference_id is unknown)",
                        "format": "int32"
                    },
                    "quantity": {
                        "maximum": 199,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The quantity of this product ordered",
                        "format": "int32"
                    },
                    "reference_id": {
                        "type": "string",
                        "description": "Unique reference id of the product (Must be provided if ID is unknown)",
                        "example": "TShirtBlueM"
                    }
                },
                "additionalProperties": false
            },
            "Orders.EstimateViewModel": {
                "type": "object",
                "properties": {
                    "estimates": {
                        "type": "array",
                        "items": {},
                        "description": "Array of estimates for each shipping method"
                    }
                },
                "additionalProperties": false
            },
            "Orders.EstimationAddressViewModel": {
                "required": [
                    "country"
                ],
                "type": "object",
                "properties": {
                    "address1": {
                        "type": "string",
                        "description": "First line of the address",
                        "example": "100 Nowhere Blvd"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Second line of the address",
                        "example": "Suite 100"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city",
                        "example": "Gotham City"
                    },
                    "company_name": {
                        "type": "string",
                        "description": "Name of the company receiving the shipment",
                        "example": "Wayne Enterprises"
                    },
                    "country": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The country (Must be ISO Alpha-2 for estimates)",
                        "example": "US"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state or province",
                        "example": "NJ"
                    },
                    "zip_code": {
                        "type": "string",
                        "description": "The zip code or postal code",
                        "format": "postal-code",
                        "example": "07093"
                    }
                },
                "additionalProperties": false
            },
            "Orders.Financial": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "number",
                        "description": "Sum of all line item prices, discounts, and taxes in USD",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Orders.Financials": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "number",
                        "description": "Sum of all line item prices, discounts, and taxes in USD",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Orders.FulfillmentCenterViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of the fulfillment center",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Cicero (IL)"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a fulfillment center that a shipment can belong to"
            },
            "Orders.FulfillmentStatu": {
                "enum": [
                    "AwaitingInventoryAllocation",
                    "AwaitingReset",
                    "Unavailable",
                    "PendingOnTime",
                    "FulfilledOnTime",
                    "PendingLate",
                    "FulfilledLate"
                ],
                "type": "string"
            },
            "Orders.FulfillmentStatus": {
                "enum": [
                    "AwaitingInventoryAllocation",
                    "AwaitingReset",
                    "Unavailable",
                    "PendingOnTime",
                    "FulfilledOnTime",
                    "PendingLate",
                    "FulfilledLate"
                ],
                "type": "string"
            },
            "Orders.Get.Api.Order.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.EndDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Orders.Get.Api.Order.HasTracking.Boolea": {
                "type": "boolean"
            },
            "Orders.Get.Api.Order.HasTracking.Boolean": {
                "type": "boolean"
            },
            "Orders.Get.Api.Order.IDs.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Orders.Get.Api.Order.IsTrackingUploaded.Boolea": {
                "type": "boolean"
            },
            "Orders.Get.Api.Order.IsTrackingUploaded.Boolean": {
                "type": "boolean"
            },
            "Orders.Get.Api.Order.LastTrackingUpdateEndDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Orders.Get.Api.Order.LastTrackingUpdateStartDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Orders.Get.Api.Order.LastUpdateEndDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Orders.Get.Api.Order.LastUpdateStartDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Orders.Get.Api.Order.Limit.Integer": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.OrderId.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.OrderId.Shipment.OK.OneOfArray": {
                "type": "array",
                "items": {
                    "description": "Information about a shipment"
                }
            },
            "Orders.Get.Api.Order.OrderId.Shipment.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
                "description": "Information about a shipment"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.OrderId.StoreOrderJson.OK.String": {
                "type": "string"
            },
            "Orders.Get.Api.Order.OrderId.StoreOrderJson.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Order.Page.Integer": {
                "maximum": 2147483647,
                "minimum": 1,
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.ReferenceIds.StringArray": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Orders.Get.Api.Order.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Order.StartDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Orders.Get.Api.Shipment.ShipmentId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Shipment.ShipmentId.Logs.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Shipment.ShipmentId.Logs.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shipment.ShipmentId.Logs.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
                "description": "Information about a shipment"
            },
            "Orders.Get.Api.Shipment.ShipmentId.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shipment.ShipmentId.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shipment.ShipmentId.Timeline.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Shipment.ShipmentId.Timeline.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shipment.ShipmentId.Timeline.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shippingmethod.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Get.Api.Shippingmethod.Limit.Integer": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shippingmethod.Page.Integer": {
                "maximum": 2147483647,
                "minimum": 0,
                "type": "integer",
                "format": "int32"
            },
            "Orders.Get.Api.Shippingmethod.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.InternalShipmentViewModel": {
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "store_order_id": {
                        "type": "string",
                        "description": "Unique store order id of the shipment"
                    }
                },
                "additionalProperties": false
            },
            "Orders.InventoryViewModel": {
                "type": "object",
                "properties": {
                    "expiration_date": {
                        "type": "string",
                        "description": "Expiration date of the inventory",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the inventory",
                        "format": "int32"
                    },
                    "is_dangerous_goods": {
                        "type": "boolean",
                        "description": "Is inventory Dangerous Good",
                        "example": true
                    },
                    "lot": {
                        "type": "string",
                        "description": "Lot number of the inventory",
                        "example": "22222"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the inventory item",
                        "example": "Medium Blue T-Shirt"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of the inventory item to be included in the fulfillment",
                        "format": "int32"
                    },
                    "quantity_committed": {
                        "type": "integer",
                        "description": "The quantity of the inventory item allocated from the assigned fulfillment center and committed to the order. If quantity committed is less than order quantity, then the inventory item is out of stock at the assigned fulfillment center.",
                        "format": "int32"
                    },
                    "serial_numbers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Serial number of the inventory"
                    }
                },
                "additionalProperties": false,
                "description": "Information about inventory belonging to a store product"
            },
            "Orders.MeasurementsViewModel": {
                "type": "object",
                "properties": {
                    "depth_in": {
                        "type": "integer",
                        "description": "Total depth in inches",
                        "format": "int32"
                    },
                    "length_in": {
                        "type": "integer",
                        "description": "Total length in inches",
                        "format": "int32"
                    },
                    "total_weight_oz": {
                        "type": "integer",
                        "description": "Total weight in ounces",
                        "format": "int32"
                    },
                    "width_in": {
                        "type": "integer",
                        "description": "Total width in inches",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Measurements of a shipment"
            },
            "Orders.OrderStatu": {
                "enum": [
                    "Processing",
                    "Exception",
                    "PartiallyFulfilled",
                    "Fulfilled",
                    "Cancelled",
                    "ImportReview"
                ],
                "type": "string"
            },
            "Orders.OrderStatus": {
                "enum": [
                    "Processing",
                    "Exception",
                    "PartiallyFulfilled",
                    "Fulfilled",
                    "Cancelled",
                    "ImportReview"
                ],
                "type": "string"
            },
            "Orders.OrderStatusEnum": {
                "enum": [
                    "None",
                    "Processing",
                    "Completed",
                    "Exception",
                    "OnHold",
                    "Cancelled",
                    "CleanSweeped",
                    "LabeledCreated",
                    "ImportReview"
                ],
                "type": "string"
            },
            "Orders.OrderType": {
                "enum": [
                    "DTC",
                    "DropShip",
                    "B2B"
                ],
                "type": "string"
            },
            "Orders.OrderVerifyAndSaveAddressRequest": {
                "required": [
                    "city",
                    "streetAddress1"
                ],
                "type": "object",
                "properties": {
                    "CountryCode": {
                        "type": "string",
                        "description": "Country code of customer address"
                    },
                    "IsDomestic": {
                        "type": "boolean",
                        "description": "IsDomestic flag"
                    },
                    "IsPoBox": {
                        "type": "boolean",
                        "description": "IsPoBox flag"
                    },
                    "IsValid": {
                        "type": "boolean",
                        "description": "IsValid flag"
                    },
                    "OrderId": {
                        "type": "integer",
                        "description": "OrderId",
                        "format": "int32"
                    },
                    "OverrideVerification": {
                        "type": "boolean",
                        "description": "Override Verification Flag"
                    },
                    "PhoneNumber": {
                        "type": "string",
                        "description": "Phonenumber of customer address"
                    },
                    "StreetAddress1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Street Address 1"
                    },
                    "StreetAddress2": {
                        "type": "string",
                        "description": "Streed Address 2"
                    },
                    "ZipCode": {
                        "type": "string",
                        "description": "Zipcode of customer address"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "description": "City of customer address"
                    },
                    "email": {
                        "type": "string",
                        "description": "Customer's email address"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of customer"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of customer address"
                    }
                },
                "additionalProperties": false,
                "description": "Request model for verify and save address for order"
            },
            "Orders.OrderViewModel": {
                "type": "object",
                "properties": {
                    "channel": {},
                    "created_date": {
                        "type": "string",
                        "description": "Date this order was created",
                        "format": "date-time"
                    },
                    "financials": {},
                    "gift_message": {
                        "type": "string",
                        "description": "Gift message associated with the order"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the order",
                        "format": "int32"
                    },
                    "order_number": {
                        "type": "string",
                        "description": "User friendly orderId or store order number that will be shown on the Orders Page. If not provided, referenceId will be used"
                    },
                    "products": {
                        "type": "array",
                        "items": {},
                        "description": "List of products included in the order"
                    },
                    "purchase_date": {
                        "type": "string",
                        "description": "Date this order was purchase by the end user",
                        "format": "date-time"
                    },
                    "recipient": {},
                    "reference_id": {
                        "type": "string",
                        "description": "Client-defined external unique id of the order"
                    },
                    "retailer_program_data": {},
                    "shipments": {
                        "type": "array",
                        "items": {
                            "description": "Information about a shipment"
                        },
                        "description": "Shipments affiliated with the order"
                    },
                    "shipping_method": {
                        "type": "string",
                        "description": "Client-defined shipping method",
                        "example": "Free 2-day Shipping"
                    },
                    "shipping_terms": {},
                    "status": {},
                    "tags": {
                        "type": "array",
                        "items": {},
                        "description": "Client-defined order tags"
                    },
                    "type": {}
                },
                "additionalProperties": false
            },
            "Orders.OrderViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Orders.PackageMaterialType": {
                "enum": [
                    "Unknown",
                    "Box",
                    "BubbleMailer",
                    "PolyMailer",
                    "FragileBox",
                    "PosterTube",
                    "Custom",
                    "Bookfold",
                    "OwnContainer",
                    "Undefined"
                ],
                "type": "string"
            },
            "Orders.ParentCartonViewModel": {
                "type": "object",
                "properties": {
                    "barcode": {
                        "type": "string",
                        "description": "Barcode assigned to this carton"
                    },
                    "cartons": {
                        "type": "array",
                        "items": {},
                        "description": "Cartons packed inside this parent container"
                    },
                    "measurements": {},
                    "type": {
                        "type": "string",
                        "description": "Type of this carton container",
                        "example": "Box or pallet"
                    }
                },
                "additionalProperties": false
            },
            "Orders.PaymentShipTerm": {
                "enum": [
                    "Collect",
                    "ThirdParty",
                    "Prepaid",
                    "MerchantResponsible"
                ],
                "type": "string"
            },
            "Orders.Post.Api.Order.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.Estimate.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.Estimate.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.Estimate.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.Cancel.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.Cancel.Internal.Server.Error.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.Cancel.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.OrderId.Cancel.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.OrderId.Cancel.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
                "description": "Information about a shipment"
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OrderId.String": {
                "type": "string"
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.OrderId.StoreOrderJson.Created.String": {
                "type": "string"
            },
            "Orders.Post.Api.Order.OrderId.StoreOrderJson.OrderId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Order.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Order.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Shipment.Cancelbulk.Internal.Server.Error.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Shipment.Cancelbulk.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Shipment.Cancelbulk.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Shipment.ShipmentId.Cancel.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Post.Api.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
                "description": "Information about a shipment"
            },
            "Orders.Post.Api.Shipment.ShipmentId.Cancel.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Shipment.ShipmentId.Cancel.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Post.Api.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.ProductInfoViewModel": {
                "type": "object",
                "properties": {
                    "external_line_id": {
                        "type": "integer",
                        "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
                        "format": "int32"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the product",
                        "format": "int32"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The quantity of this product ordered",
                        "format": "int32"
                    },
                    "quantity_unit_of_measure_code": {
                        "type": "string",
                        "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL"
                    },
                    "reference_id": {
                        "type": "string",
                        "description": "Unique reference id of the product",
                        "example": "TShirtBlueM"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Stock keeping unit for the product",
                        "example": "TShirtBlueM"
                    },
                    "unit_price": {
                        "type": "number",
                        "description": "Price for one item",
                        "format": "double"
                    },
                    "upc": {
                        "type": "string",
                        "description": "Universal Product Code - Unique external identifier"
                    }
                },
                "additionalProperties": false
            },
            "Orders.Put.Api.Shipment.ShipmentId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Orders.Put.Api.Shipment.ShipmentId.OK.OneOfArray": {
                "type": "array",
                "items": {
                    "description": "Information about a shipment"
                }
            },
            "Orders.Put.Api.Shipment.ShipmentId.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.Put.Api.Shipment.ShipmentId.ShipmentId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Orders.RecipientInfoViewModel": {
                "required": [
                    "address",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Address of the recipient"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the recipient",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "name": {
                        "maxLength": 300,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of the recipient",
                        "example": "John Doe"
                    },
                    "phone_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "Phone number of the recipient",
                        "example": "555-555-5555"
                    }
                },
                "additionalProperties": false,
                "description": "Information about the recipient of an order"
            },
            "Orders.RecipientViewModel": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "Address of the recipient"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the recipient",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "full_name": {
                        "type": "string",
                        "description": "FullName of the recipient",
                        "example": "John Doe"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the recipient",
                        "example": "John Doe"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number of the recipient",
                        "format": "tel",
                        "example": "555-555-5555"
                    }
                },
                "additionalProperties": false,
                "description": "Information about the recipient of a shipment"
            },
            "Orders.RetailerProgramDataAddressViewModel": {
                "required": [
                    "type"
                ],
                "type": "object",
                "allOf": [
                    {}
                ],
                "properties": {
                    "type": {}
                },
                "additionalProperties": false,
                "description": "Address to used when creating a B2B/DropShip order."
            },
            "Orders.RetailerProgramDataViewModel": {
                "required": [
                    "purchaseOrderNumber",
                    "retailerProgramType"
                ],
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {},
                        "description": "Ship From - Certain retailers want to display the ship from address as their return facility, not Shipbob’s warehouse address        /// \r\nMark For Address - Final destination address"
                    },
                    "customer_ticket_number": {
                        "type": "string",
                        "description": "Customer Ticket Number"
                    },
                    "delivery_date": {
                        "type": "string",
                        "description": "Expected delivery date",
                        "format": "date-time"
                    },
                    "department": {
                        "type": "string",
                        "description": "Identifies a merchant's store department"
                    },
                    "doNotShipBeforeDate": {
                        "type": "string",
                        "description": "The date the retailer does not want the order shipped by.",
                        "format": "date-time"
                    },
                    "mark_for_store": {
                        "type": "string",
                        "description": "Store Number"
                    },
                    "purchase_order_number": {
                        "minLength": 1,
                        "type": "string",
                        "description": "First initial documentation sent from buyer to seller with item(s) and quantities."
                    },
                    "retailer_program_type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies retailer-merchant combination"
                    },
                    "shipByDate": {
                        "type": "string",
                        "description": "The date the retailer has requested the order to ship by.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Contains properties that needs to be used for fulfilling B2B/Dropship orders."
            },
            "Orders.ServiceLevelDetailViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id for the service level",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name or title of the service level"
                    }
                },
                "additionalProperties": false
            },
            "Orders.ShipMethodDetailViewModel": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Indicates if the shipping method is active"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Indicates the shipping method is a ShipBob default shipping method."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id for shipping method.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the ship method as selected by the merchant and saved in ShipBob’s database (i.e. “ground”). Corresponds to the shipping_method field in the Orders API."
                    },
                    "service_level": {}
                },
                "additionalProperties": false
            },
            "Orders.ShipMethodDetailViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Orders.ShipmentActi": {
                "enum": [
                    "Cancel"
                ],
                "type": "string"
            },
            "Orders.ShipmentAction": {
                "enum": [
                    "Cancel"
                ],
                "type": "string"
            },
            "Orders.ShipmentLogViewModel": {
                "type": "object",
                "properties": {
                    "log_type_id": {
                        "type": "integer",
                        "description": "Log type id of the shipment",
                        "format": "int32"
                    },
                    "log_type_name": {
                        "type": "string",
                        "description": "Name of the log type"
                    },
                    "log_type_text": {
                        "type": "string",
                        "description": "Summary of log type meaning"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Specifics data for the event"
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Timestamp of event",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Orders.ShipmentLogViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Orders.ShipmentProductViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the product",
                        "format": "int32"
                    },
                    "inventory_items": {
                        "type": "array",
                        "items": {},
                        "description": "Information about fulfillable inventory items belonging to this product"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product",
                        "example": "Medium Blue T-Shirt"
                    },
                    "reference_id": {
                        "type": "string",
                        "description": "Unique reference id of the product",
                        "example": "TShirtBlueM"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Stock keeping unit for the product",
                        "example": "TShirtBlueM"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a store product belonging to a shipment"
            },
            "Orders.ShipmentViewModel": {
                "type": "object",
                "properties": {
                    "actual_fulfillment_date": {
                        "type": "string",
                        "description": "The datetime of ShipBob’s completion of the fulfillment operation as promised.\r\nCurrently, this means the shipment has been picked, packed, and label has been printed.",
                        "format": "date-time"
                    },
                    "created_date": {
                        "type": "string",
                        "description": "Date this shipment was created",
                        "format": "date-time"
                    },
                    "delivery_date": {
                        "type": "string",
                        "description": "The datetime of Shipment delivered to customer.",
                        "format": "date-time"
                    },
                    "estimated_fulfillment_date": {
                        "type": "string",
                        "description": "The datetime of ShipBob’s commitment for completing\r\nthe shipment and handing to the carrier for delivery.",
                        "format": "date-time"
                    },
                    "estimated_fulfillment_date_status": {},
                    "gift_message": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Gift message associated with the shipment"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the shipment",
                        "format": "int32"
                    },
                    "insurance_value": {
                        "type": "number",
                        "description": "Monetary amount that this shipment was insured for",
                        "format": "currency"
                    },
                    "invoice_amount": {
                        "type": "number",
                        "description": "Monetary amount that was invoiced for this shipment",
                        "format": "currency"
                    },
                    "invoice_currency_code": {
                        "type": "string"
                    },
                    "is_tracking_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether the Shipment was marked with tracking information\r\nuploaded to a third-party system where the order originated."
                    },
                    "last_tracking_update_at": {
                        "type": "string",
                        "description": "Timestamp for the last time this shipment had a tracking update",
                        "format": "date-time"
                    },
                    "last_update_at": {
                        "type": "string",
                        "description": "Date this shipment was last updated",
                        "format": "date-time"
                    },
                    "location": {},
                    "measurements": {},
                    "order_id": {
                        "type": "integer",
                        "description": "Id of the order this shipment belongs to",
                        "format": "int32"
                    },
                    "package_material_type": {},
                    "parent_cartons": {
                        "type": "array",
                        "items": {},
                        "description": "Carton information for this shipment"
                    },
                    "products": {
                        "type": "array",
                        "items": {},
                        "description": "Information about the products contained in this shipment"
                    },
                    "recipient": {},
                    "reference_id": {
                        "type": "string",
                        "description": "Client-defined external unique id of the order this shipment belongs to"
                    },
                    "require_signature": {
                        "type": "boolean",
                        "description": "If a shipment requires signature"
                    },
                    "ship_option": {
                        "type": "string",
                        "description": "Name of the shipping option used for this shipment",
                        "example": "Standard"
                    },
                    "status": {},
                    "status_details": {
                        "type": "array",
                        "items": {},
                        "description": "Additional details about the shipment status"
                    },
                    "tracking": {}
                },
                "additionalProperties": false,
                "description": "Information about a shipment"
            },
            "Orders.ShippingTermsViewModel": {
                "type": "object",
                "properties": {
                    "carrier_type": {},
                    "payment_term": {}
                },
                "additionalProperties": false,
                "description": "Contains shipping properties that need to be used for fulfilling an order."
            },
            "Orders.SortOrder": {
                "enum": [
                    "Newest",
                    "Oldest"
                ],
                "type": "string"
            },
            "Orders.StatusDetailViewModel": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Describes what the status detail means"
                    },
                    "exception_fulfillment_center_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "extra_information": {},
                    "id": {
                        "type": "integer",
                        "description": "The id of the status detail",
                        "format": "int32"
                    },
                    "inventory_id": {
                        "type": "integer",
                        "description": "Inventory Id the detail applies to (if applicable)",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Short name of the status detail"
                    }
                },
                "additionalProperties": false
            },
            "Orders.StatusInformationViewModel": {
                "type": "object",
                "properties": {
                    "validation_messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "Orders.TagViewModel": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "The key of the tag",
                        "example": "Handling instructions"
                    },
                    "value": {
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "The value of the tag",
                        "example": "Fragile"
                    }
                },
                "additionalProperties": false
            },
            "Orders.TrackingViewModel": {
                "type": "object",
                "properties": {
                    "bol": {
                        "type": "string",
                        "description": "Bill of lading (BOL) number. Document acknowledging receipt of cargo for shipment."
                    },
                    "carrier": {
                        "type": "string",
                        "description": "Carrier of the shipment",
                        "example": "USPS"
                    },
                    "carrier_service": {
                        "type": "string",
                        "description": "The carrier's service which was used for this shipment",
                        "example": "Priority"
                    },
                    "pro_number": {
                        "type": "string",
                        "description": "Tracking number used for freight carriers"
                    },
                    "scac": {
                        "type": "string",
                        "description": "Standard Carrier Alpha Code (SCAC). Unique 2-4 letter code used to identify transportation companies."
                    },
                    "shipping_date": {
                        "type": "string",
                        "description": "Date freight was shipped on",
                        "format": "date-time"
                    },
                    "tracking_number": {
                        "type": "string",
                        "description": "Tracking number of the shipment",
                        "example": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                    },
                    "tracking_url": {
                        "type": "string",
                        "description": "URL to the website where a shipment can be tracked",
                        "example": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                },
                "additionalProperties": false,
                "description": "Tracking information for a shipment"
            },
            "Orders.UpdateShipmentModel": {
                "type": "object",
                "properties": {
                    "is_tracking_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether the Shipment was marked with tracking information\r\nuploaded to a third-party system where the order originated."
                    }
                },
                "additionalProperties": false,
                "description": "Model for Updating multiple shipments of the same Order"
            },
            "Products.BundleRootInformationViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of the bundle root product",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the bundle root product"
                    }
                },
                "additionalProperties": false
            },
            "Products.ChannelViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the store channel",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the store channel",
                        "example": "House of Slippers"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a store channel"
            },
            "Products.CreateProductModel": {
                "required": [
                    "name",
                    "reference_id"
                ],
                "type": "object",
                "properties": {
                    "barcode": {
                        "maxLength": 150,
                        "type": "string",
                        "description": "Barcode for the product",
                        "example": "123456789012"
                    },
                    "gtin": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1.",
                        "example": "012345678905"
                    },
                    "name": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the product",
                        "example": "Medium Blue T-Shirt"
                    },
                    "reference_id": {
                        "maxLength": 400,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference identifier for the product. Any linked or generated inventory will also be uniquely identified by this value",
                        "example": "TShirtBlueM"
                    },
                    "sku": {
                        "maxLength": 400,
                        "type": "string",
                        "description": "Stock keeping unit for the product",
                        "example": "TShirtBlueM"
                    },
                    "unit_price": {
                        "type": "number",
                        "description": "The price of one unit",
                        "format": "double",
                        "example": 20.32
                    },
                    "upc": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "Universal Product Code - Unique external identifier",
                        "example": "012345678912"
                    }
                },
                "additionalProperties": false,
                "description": "The product to create"
            },
            "Products.CreateProductModelArray": {
                "maxItems": 50,
                "type": "array",
                "items": {}
            },
            "Products.FulfillmentCenterQuantityViewModel": {
                "type": "object",
                "properties": {
                    "committed_quantity": {
                        "type": "integer",
                        "description": "Amount of committed quantity at this fulfillment center",
                        "format": "int32"
                    },
                    "fulfillable_quantity": {
                        "type": "integer",
                        "description": "Amount of fulfillable quantity at this fulfillment center",
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the fulfillment center",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Cicero"
                    },
                    "onhand_quantity": {
                        "type": "integer",
                        "description": "Amount of onhand quantity at this fulfillment center",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Break down of quantities by fulfillment center"
            },
            "Products.Get.Api.Product.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.Get.Api.Product.IDs.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Products.Get.Api.Product.Limit.Integer": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer",
                "format": "int32"
            },
            "Products.Get.Api.Product.OK.Next.Page.String": {
                "type": "string",
                "description": "The href of the next page of results, if there is a next page",
                "format": ""
            },
            "Products.Get.Api.Product.OK.Page.Number.Int": {
                "type": "integer",
                "description": "Number of the current page",
                "format": ""
            },
            "Products.Get.Api.Product.OK.Page.Size.Int": {
                "type": "integer",
                "description": "Number of results per page",
                "format": ""
            },
            "Products.Get.Api.Product.OK.Total.Count.Int": {
                "type": "integer",
                "description": "Total number of results",
                "format": ""
            },
            "Products.Get.Api.Product.OK.Total.Pages.Int": {
                "type": "integer",
                "description": "Total number of pages of results",
                "format": ""
            },
            "Products.Get.Api.Product.Page.Integer": {
                "maximum": 2147483647,
                "minimum": 0,
                "type": "integer",
                "format": "int32"
            },
            "Products.Get.Api.Product.ProductId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.Get.Api.Product.ProductId.ProductId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.Get.Api.Product.ProductId.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.Get.Api.Product.ReferenceIds.StringArray": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Products.Get.Api.Product.Search.String": {
                "type": "string"
            },
            "Products.Get.Api.Product.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.InventoryItemViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the inventory item",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the inventory item",
                        "example": "Medium Blue T-Shirt"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of the inventory item included in a store product",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "The inventory that store products can resolve to when packing a shipment"
            },
            "Products.Post.Api.Product.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.Post.Api.Product.Batch.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.Post.Api.Product.Batch.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.Post.Api.Product.Batch.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.Post.Api.Product.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.Post.Api.Product.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.ProblemDetail": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {}
            },
            "Products.ProblemDetails": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {}
            },
            "Products.ProductActiveStatu": {
                "enum": [
                    "Any",
                    "Active",
                    "Inactive"
                ],
                "type": "string"
            },
            "Products.ProductActiveStatus": {
                "enum": [
                    "Any",
                    "Active",
                    "Inactive"
                ],
                "type": "string"
            },
            "Products.ProductBundleStatu": {
                "enum": [
                    "Any",
                    "Bundle",
                    "NotBundle"
                ],
                "type": "string"
            },
            "Products.ProductBundleStatus": {
                "enum": [
                    "Any",
                    "Bundle",
                    "NotBundle"
                ],
                "type": "string"
            },
            "Products.ProductViewModel": {
                "type": "object",
                "properties": {
                    "barcode": {
                        "type": "string",
                        "description": "Barcode for the product",
                        "example": "123456789012"
                    },
                    "bundle_root_information": {},
                    "channel": {},
                    "created_date": {
                        "type": "string",
                        "description": "Date the product was created",
                        "format": "date-time"
                    },
                    "fulfillable_inventory_items": {
                        "type": "array",
                        "items": {},
                        "description": "The inventory that this product will resolve to when packing a shipment"
                    },
                    "fulfillable_quantity_by_fulfillment_center": {
                        "type": "array",
                        "items": {},
                        "description": "Fulfillable quantity of this product broken down by fulfillment center location"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1.",
                        "example": "012345678905"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier of the product",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product",
                        "example": "Medium Blue T-Shirt"
                    },
                    "reference_id": {
                        "type": "string",
                        "description": "Unique reference identifier of the product",
                        "example": "TShirtBlueM"
                    },
                    "sku": {
                        "type": "string",
                        "description": "Stock keeping unit for the product",
                        "example": "TShirtBlueM"
                    },
                    "total_committed_quantity": {
                        "type": "integer",
                        "description": "Total committed quantity of this product",
                        "format": "int32"
                    },
                    "total_fulfillable_quantity": {
                        "type": "integer",
                        "description": "Total fulfillable quantity of this product",
                        "format": "int32"
                    },
                    "total_onhand_quantity": {
                        "type": "integer",
                        "description": "Total on hand quantity of this product",
                        "format": "int32"
                    },
                    "unit_price": {
                        "type": "number",
                        "description": "The price of one unit",
                        "format": "double",
                        "example": 20.32
                    },
                    "upc": {
                        "type": "string",
                        "description": "Universal Product Code - Unique external identifier",
                        "example": "012345678912"
                    }
                },
                "additionalProperties": false
            },
            "Products.ProductViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Products.Put.Api.Product.ProductId.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.Put.Api.Product.ProductId.ProductId.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.Put.Api.Product.ProductId.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Products.Put.Api.Product.ProductId.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Products.UpdateProductModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "barcode": {
                        "type": "string",
                        "description": "Barcode for the product",
                        "example": "123456789012"
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1.",
                        "example": "012345678905"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the product",
                        "example": "Medium Blue T-Shirt"
                    },
                    "sku": {
                        "type": "string",
                        "description": "The stock keeping unit of the product",
                        "example": "TShirtBlueM"
                    },
                    "unit_price": {
                        "type": "number",
                        "description": "The price of one unit",
                        "format": "double",
                        "example": 20.32
                    },
                    "upc": {
                        "type": "string",
                        "description": "Universal Product Code - Unique external identifier",
                        "example": "012345678912"
                    }
                },
                "additionalProperties": false,
                "description": "Updates to an existing product product"
            },
            "Receiving.AddBoxItemToBoxModel": {
                "required": [
                    "inventory_id",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "inventory_id": {
                        "type": "integer",
                        "description": "Unique inventory id of the items in the box",
                        "format": "int32"
                    },
                    "lot_date": {
                        "type": "string",
                        "description": "Lot expiration date for the items in the box",
                        "format": "date-time"
                    },
                    "lot_number": {
                        "type": "string",
                        "description": "Lot number of the items in the box",
                        "example": "2222"
                    },
                    "quantity": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Quantity of the items in the box",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Information about an inventory item contained inside a receiving order box"
            },
            "Receiving.AddBoxToOrderModel": {
                "required": [
                    "box_items",
                    "tracking_number"
                ],
                "type": "object",
                "properties": {
                    "box_items": {
                        "type": "array",
                        "items": {},
                        "description": "Items contained in this box"
                    },
                    "tracking_number": {
                        "type": "string",
                        "description": "Tracking number for the box shipment",
                        "example": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a box shipment to be added to a receiving order"
            },
            "Receiving.AssignOrderToFulfillmentCenterModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the fulfillment center to assign this receiving order to",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Model containing information that assigns a receiving order to a fulfillment center.\r\nIf the fulfillment center provided is in a receiving hub region, then the response will be the receiving hub location."
            },
            "Receiving.BoxItemViewModel": {
                "type": "object",
                "properties": {
                    "inventory_id": {
                        "type": "integer",
                        "description": "Unique identifier of the inventory item",
                        "format": "int32"
                    },
                    "lot_date": {
                        "type": "string",
                        "description": "Expiration date of the item's lot",
                        "format": "date-time"
                    },
                    "lot_number": {
                        "type": "string",
                        "description": "Lot number the item belongs to"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of the item included",
                        "format": "int32"
                    },
                    "received_quantity": {
                        "type": "integer",
                        "description": "Quantity of the item that was received after processing the receiving order",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Information about an item contained inside a box as part of a receiving order"
            },
            "Receiving.BoxStatu": {
                "enum": [
                    "Awaiting",
                    "Arrived",
                    "Completed",
                    "Counting",
                    "Stowing",
                    "Cancelled"
                ],
                "type": "string"
            },
            "Receiving.BoxStatus": {
                "enum": [
                    "Awaiting",
                    "Arrived",
                    "Completed",
                    "Counting",
                    "Stowing",
                    "Cancelled"
                ],
                "type": "string"
            },
            "Receiving.BoxViewModel": {
                "type": "object",
                "properties": {
                    "arrived_date": {
                        "type": "string",
                        "description": "Date the box arrived",
                        "format": "date-time"
                    },
                    "box_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "box_items": {
                        "type": "array",
                        "items": {},
                        "description": "Information about the items included in the box"
                    },
                    "box_number": {
                        "type": "integer",
                        "description": "The number of the box in the receiving order",
                        "format": "int32"
                    },
                    "box_status": {},
                    "counting_started_date": {
                        "type": "string",
                        "description": "Date counting of the box's inventory items started",
                        "format": "date-time"
                    },
                    "received_date": {
                        "type": "string",
                        "description": "Date the box was received",
                        "format": "date-time"
                    },
                    "tracking_number": {
                        "type": "string",
                        "description": "Tracking number of the box shipment",
                        "example": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a box shipment included in a receiving order"
            },
            "Receiving.CreateReceivingOrderModel": {
                "required": [
                    "box_packaging_type",
                    "boxes",
                    "expected_arrival_date",
                    "fulfillment_center",
                    "package_type"
                ],
                "type": "object",
                "properties": {
                    "box_packaging_type": {},
                    "boxes": {
                        "type": "array",
                        "items": {},
                        "description": "Box shipments to be added to this receiving order"
                    },
                    "expected_arrival_date": {
                        "type": "string",
                        "description": "Expected arrival date of all the box shipments in this receiving order",
                        "format": "date-time"
                    },
                    "fulfillment_center": {},
                    "package_type": {},
                    "purchase_order_number": {
                        "type": "string",
                        "description": "Purchase order number for this receiving order"
                    }
                },
                "additionalProperties": false,
                "description": "Information to create a new receiving order"
            },
            "Receiving.FulfillmentCenterViewModel": {
                "type": "object",
                "properties": {
                    "address1": {
                        "type": "string",
                        "description": "Address line one of the fulfillment center",
                        "example": "5900 W Ogden Ave"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Address line two of the fulfillment center",
                        "example": "Suite 100"
                    },
                    "city": {
                        "type": "string",
                        "description": "City the fulfillment center is located in",
                        "example": "Cicero"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country the fulfillment center is located in",
                        "example": "USA"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email contact for the fulfillment center",
                        "example": "example@example.com"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier of the fulfillment center",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Cicero (IL)"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number contact for the fulfillment center",
                        "example": "555-555-5555"
                    },
                    "state": {
                        "type": "string",
                        "description": "State the fulfillment center is located in",
                        "example": "IL"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone the fulfillment center is located in",
                        "example": "Central Standard Time"
                    },
                    "zip_code": {
                        "type": "string",
                        "description": "Postal code of the fulfillment center",
                        "example": "60804"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a fulfillment center"
            },
            "Receiving.FulfillmentCenterViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Receiving.Get.1.0.Receiving.Id.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Receiving.Get.1.0.Receiving.Id.Labels.Bad.Request.OneOf.ValidationProblemDetail": {},
            "Receiving.Get.1.0.Receiving.Id.Labels.Bad.Request.OneOf.ValidationProblemDetails": {},
            "Receiving.Get.1.0.Receiving.Id.Labels.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Receiving.Get.1.0.Receiving.Id.Labels.Not.Found.OneOf.ValidationProblemDetail": {},
            "Receiving.Get.1.0.Receiving.Id.Labels.Not.Found.OneOf.ValidationProblemDetails": {},
            "Receiving.Get.1.0.Receiving.Id.Labels.OK.String": {
                "type": "string",
                "format": "byte"
            },
            "Receiving.Get.1.0.Receiving.Id.Not.Found.OneOf.ValidationProblemDetail": {},
            "Receiving.Get.1.0.Receiving.Id.Not.Found.OneOf.ValidationProblemDetails": {},
            "Receiving.Get.1.0.Receiving.Not.Found.OneOf.ValidationProblemDetail": {},
            "Receiving.Get.1.0.Receiving.Not.Found.OneOf.ValidationProblemDetails": {},
            "Receiving.Get.1.0.Receiving.PurchaseOrderNumber.String": {
                "type": "string"
            },
            "Receiving.PackageType": {
                "enum": [
                    "Package",
                    "Pallet",
                    "FloorLoadedContainer"
                ],
                "type": "string"
            },
            "Receiving.PackingType": {
                "enum": [
                    "EverythingInOneBox",
                    "OneSkuPerBox",
                    "MultipleSkuPerBox"
                ],
                "type": "string"
            },
            "Receiving.Post.1.0.Receiving.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Receiving.Post.1.0.Receiving.Id.Cancel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Receiving.Post.1.0.Receiving.Id.Cancel.Not.Found.OneOf.ValidationProblemDetail": {},
            "Receiving.Post.1.0.Receiving.Id.Cancel.Not.Found.OneOf.ValidationProblemDetails": {},
            "Receiving.Post.1.0.Receiving.Id.Cancel.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Receiving.Post.1.0.Receiving.Not.Found.OneOf.ValidationProblemDetail": {},
            "Receiving.Post.1.0.Receiving.Not.Found.OneOf.ValidationProblemDetails": {},
            "Receiving.ReceivingOrderViewModel": {
                "type": "object",
                "properties": {
                    "box_labels_uri": {
                        "type": "string",
                        "description": "URL to the packing slip to be included in each box shipment for this receiving order",
                        "example": "https://api.shipbob.com/1.0/receiving/1/labels"
                    },
                    "box_packaging_type": {},
                    "boxes": {
                        "type": "array",
                        "items": {},
                        "description": "Information about the boxes being shipped in this receiving order"
                    },
                    "expected_arrival_date": {
                        "type": "string",
                        "description": "Expected date that all packages will have arrived",
                        "format": "date-time"
                    },
                    "fulfillment_center": {},
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the warehouse receiving order",
                        "format": "int32"
                    },
                    "insert_date": {
                        "type": "string",
                        "description": "Insert date of the receiving order",
                        "format": "date-time"
                    },
                    "last_updated_date": {
                        "type": "string",
                        "description": "Last date the receiving order was updated",
                        "format": "date-time"
                    },
                    "package_type": {},
                    "purchase_order_number": {
                        "type": "string",
                        "description": "Purchase order number for a receiving order"
                    },
                    "status": {}
                },
                "additionalProperties": false,
                "description": "Information about a receiving order"
            },
            "Receiving.ReceivingStatu": {
                "enum": [
                    "Awaiting",
                    "Processing",
                    "Completed",
                    "Cancelled",
                    "Incomplete",
                    "Arrived",
                    "PartiallyArrived",
                    "PartiallyArrivedAtHub",
                    "ArrivedAtHub",
                    "ProcessingAtHub",
                    "InternalTransfer"
                ],
                "type": "string"
            },
            "Receiving.ReceivingStatus": {
                "enum": [
                    "Awaiting",
                    "Processing",
                    "Completed",
                    "Cancelled",
                    "Incomplete",
                    "Arrived",
                    "PartiallyArrived",
                    "PartiallyArrivedAtHub",
                    "ArrivedAtHub",
                    "ProcessingAtHub",
                    "InternalTransfer"
                ],
                "type": "string"
            },
            "Receiving.ValidationProblemDetail": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {
                    "type": "object",
                    "additionalProperties": false
                }
            },
            "Receiving.ValidationProblemDetails": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": {
                    "type": "object",
                    "additionalProperties": false
                }
            },
            "Returns.ChannelInfoViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the channel",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the channel",
                        "example": "ShipBobs-Shopify-Store"
                    }
                },
                "additionalProperties": false,
                "description": "Created by channel metadata"
            },
            "Returns.CreateReturnRequest": {
                "type": "object",
                "properties": {
                    "fulfillmentCenter": {},
                    "inventory": {
                        "type": "array",
                        "items": {}
                    },
                    "originalShipmentId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "referenceId": {
                        "type": "string"
                    },
                    "trackingNumber": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Returns.CreateReturnViewModel": {
                "required": [
                    "fulfillment_center",
                    "inventory",
                    "reference_id"
                ],
                "type": "object",
                "properties": {
                    "fulfillment_center": {},
                    "inventory": {
                        "minLength": 1,
                        "type": "array",
                        "items": {},
                        "description": "Array of inventory items being returned"
                    },
                    "original_shipment_id": {
                        "type": "integer",
                        "description": "Shipment from which the items in the return originated",
                        "format": "int32",
                        "example": 123456
                    },
                    "reference_id": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "Client-defined external unique identifier for the return order",
                        "example": "ShipBob_Return_123"
                    },
                    "tracking_number": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Tracking number for the return shipment",
                        "example": "1Z9999999999999999"
                    }
                },
                "additionalProperties": false
            },
            "Returns.Facility": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Returns.FulfillmentCenterViewModel": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Unique identifier of the fulfillment center",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Cicero (IL)"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a fulfillment center"
            },
            "Returns.Get.1.0.Return.EndDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Returns.Get.1.0.Return.FulfillmentCenterIds.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Returns.Get.1.0.Return.IDs.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Returns.Get.1.0.Return.Id.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.Id.Not.Found.OneOf.ValidationProblemDetail": {},
            "Returns.Get.1.0.Return.Id.Not.Found.OneOf.ValidationProblemDetails": {},
            "Returns.Get.1.0.Return.Id.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.Id.Statushistory.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.Id.Statushistory.Not.Found.OneOf.ValidationProblemDetail": {},
            "Returns.Get.1.0.Return.Id.Statushistory.Not.Found.OneOf.ValidationProblemDetails": {},
            "Returns.Get.1.0.Return.Id.Statushistory.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.InventoryIds.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Returns.Get.1.0.Return.Limit.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.OK.Page.Number.Int": {
                "type": "integer",
                "description": "Number of the current page",
                "format": ""
            },
            "Returns.Get.1.0.Return.OK.Page.Size.Int": {
                "type": "integer",
                "description": "Number of results per page",
                "format": ""
            },
            "Returns.Get.1.0.Return.OK.Total.Count.Int": {
                "type": "integer",
                "description": "Total number of results",
                "format": ""
            },
            "Returns.Get.1.0.Return.OK.Total.Pages.Int": {
                "type": "integer",
                "description": "Total number of pages of results",
                "format": ""
            },
            "Returns.Get.1.0.Return.OriginalShipmentIds.IntegerArray": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "Returns.Get.1.0.Return.Page.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.ReferenceIds.StringArray": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Returns.Get.1.0.Return.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Get.1.0.Return.StartDate.String": {
                "type": "string",
                "format": "date-time"
            },
            "Returns.Get.1.0.Return.TrackingNumbers.StringArray": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Returns.InventoryItemViewModel": {
                "type": "object",
                "properties": {
                    "action_requested": {},
                    "action_taken": {
                        "type": "array",
                        "items": {},
                        "description": "Action(s) taken when processing the return"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the inventory item",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the inventory item"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity expected to be processed with the return",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Returns.LotInformationViewModel": {
                "type": "object",
                "properties": {
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lot_number": {
                        "type": "string"
                    },
                    "quantity_processed": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Returns.Post.1.0.Return.Id.Cancel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Post.1.0.Return.Id.Cancel.Not.Found.OneOf.ValidationProblemDetail": {},
            "Returns.Post.1.0.Return.Id.Cancel.Not.Found.OneOf.ValidationProblemDetails": {},
            "Returns.Post.1.0.Return.Id.Cancel.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Post.1.0.Return.Id.Cancel.Unprocessable.Entity.OneOf.ValidationProblemDetail": {},
            "Returns.Post.1.0.Return.Id.Cancel.Unprocessable.Entity.OneOf.ValidationProblemDetails": {},
            "Returns.Post.Api.V1.Public.Create.CreationSourceId.Integer": {
                "type": "integer",
                "format": "int32",
                "default": 3
            },
            "Returns.Post.Api.V1.Public.Create.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Put.1.0.Return.Id.Bad.Request.OneOf.ValidationProblemDetail": {},
            "Returns.Put.1.0.Return.Id.Bad.Request.OneOf.ValidationProblemDetails": {},
            "Returns.Put.1.0.Return.Id.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Put.1.0.Return.Id.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "format": "int32"
            },
            "Returns.Put.1.0.Return.Id.Unprocessable.Entity.OneOf.ValidationProblemDetail": {},
            "Returns.Put.1.0.Return.Id.Unprocessable.Entity.OneOf.ValidationProblemDetails": {},
            "Returns.ReturnActi": {
                "enum": [
                    "Default",
                    "Restock",
                    "Quarantine",
                    "Dispose"
                ],
                "type": "string"
            },
            "Returns.ReturnAction": {
                "enum": [
                    "Default",
                    "Restock",
                    "Quarantine",
                    "Dispose"
                ],
                "type": "string"
            },
            "Returns.ReturnActionRequestedViewModel": {
                "type": "object",
                "properties": {
                    "action": {},
                    "action_type": {},
                    "instructions": {
                        "type": "string",
                        "description": "Specific instructions to be taken for the inventory when processing the return"
                    }
                },
                "additionalProperties": false
            },
            "Returns.ReturnActionSource": {
                "enum": [
                    "InventoryDefault",
                    "Override"
                ],
                "type": "string"
            },
            "Returns.ReturnActionTakenViewModel": {
                "type": "object",
                "properties": {
                    "action": {},
                    "action_reason": {
                        "type": "string",
                        "description": "Reason the given action was taken"
                    },
                    "lot_information": {
                        "type": "array",
                        "items": {}
                    },
                    "quantity_processed": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Quantity of inventory processed with the taken action",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Returns.ReturnInventory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lotDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lotNumber": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requestedAction": {}
                },
                "additionalProperties": false
            },
            "Returns.ReturnInventoryViewModel": {
                "required": [
                    "id",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the inventory item to return",
                        "format": "int32",
                        "example": 111222
                    },
                    "quantity": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Quantity of the returned inventory item in the return",
                        "format": "int32",
                        "example": 1
                    },
                    "requested_action": {}
                },
                "additionalProperties": false
            },
            "Returns.ReturnOrderStatusHistoryViewModel": {
                "type": "object",
                "properties": {
                    "status": {},
                    "time_stamp": {
                        "type": "string",
                        "description": "Date this corresponding return order status was created",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Returns.ReturnOrderStatusHistoryViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Returns.ReturnOrderViewModel": {
                "type": "object",
                "properties": {
                    "channel": {},
                    "completed_date": {
                        "type": "string",
                        "description": "Completed date for a return order.",
                        "format": "date-time"
                    },
                    "customer_name": {
                        "type": "string",
                        "description": "Customer name from the related shipment."
                    },
                    "fulfillment_center": {},
                    "id": {
                        "type": "integer",
                        "description": "Unique id of the Return Order",
                        "format": "int32"
                    },
                    "insert_date": {
                        "type": "string",
                        "description": "Date this return order was created",
                        "format": "date-time"
                    },
                    "inventory": {
                        "type": "array",
                        "items": {},
                        "description": "List of inventory included in the return order"
                    },
                    "invoice_amount": {
                        "type": "number",
                        "description": "Invoiced amount of return order (sum of transaction amounts)",
                        "format": "double"
                    },
                    "original_shipment_id": {
                        "type": "integer",
                        "description": "Id of the corresponding shipment that is the souce of the return",
                        "format": "int32"
                    },
                    "reference_id": {
                        "type": "string",
                        "description": "Client-defined external unique id of the return order"
                    },
                    "return_type": {},
                    "status": {},
                    "store_order_id": {
                        "type": "string",
                        "description": "Store order for the related shipment."
                    },
                    "tracking_number": {
                        "type": "string",
                        "description": "Tracking number of the return shipment",
                        "example": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {},
                        "description": "Array of transactions affiliated with the return order"
                    }
                },
                "additionalProperties": false
            },
            "Returns.ReturnOrderViewModelArray": {
                "type": "array",
                "items": {}
            },
            "Returns.ReturnStatu": {
                "enum": [
                    "AwaitingArrival",
                    "Arrived",
                    "Processing",
                    "Completed",
                    "Cancelled"
                ],
                "type": "string"
            },
            "Returns.ReturnStatus": {
                "enum": [
                    "AwaitingArrival",
                    "Arrived",
                    "Processing",
                    "Completed",
                    "Cancelled"
                ],
                "type": "string"
            },
            "Returns.ReturnStatusArray": {
                "type": "array",
                "items": {}
            },
            "Returns.ReturnType": {
                "enum": [
                    "Regular",
                    "ReturnToSender"
                ],
                "type": "string"
            },
            "Returns.SortOrder": {
                "enum": [
                    "Newest",
                    "Oldest"
                ],
                "type": "string"
            },
            "Returns.TransactionLogSource": {
                "enum": [
                    "ReturnLabelInvoice",
                    "ReturnProcessingFee",
                    "ReturnToSenderFee"
                ],
                "type": "string"
            },
            "Returns.TransactionViewModel": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Transaction amount in dollars",
                        "format": "double",
                        "example": 2.5
                    },
                    "transaction_type": {}
                },
                "additionalProperties": false
            },
            "Returns.ValidationProblemDetail": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "extensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": false
                        },
                        "readOnly": true
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Returns.ValidationProblemDetails": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "extensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": false
                        },
                        "readOnly": true
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "TriggerSync.Post.Api.Linnworks.TriggerSync.Bad.Request.String": {
                "type": "string"
            },
            "TriggerSync.Post.Api.Linnworks.TriggerSync.Forbidden.String": {
                "type": "string"
            },
            "TriggerSync.Post.Api.Linnworks.TriggerSync.Unauthorized.String": {
                "type": "string"
            },
            "TriggerSync.fcToWHMapping": {
                "type": "object",
                "properties": {
                    "linnworks_locations": {
                        "type": "string"
                    },
                    "shipbob_fullfilment_center": {
                        "type": "string"
                    }
                }
            },
            "TriggerSync.integrationRequest_linnworksConfig": {
                "required": [
                    "secrets",
                    "config",
                    "tenantName"
                ],
                "type": "object",
                "properties": {
                    "config": {},
                    "secrets": {},
                    "tenantName": {
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "TriggerSync.integrationSecret": {
                "required": [
                    "shipBobToken",
                    "integrationToken"
                ],
                "type": "object",
                "properties": {
                    "integrationToken": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "shipBobToken": {
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "TriggerSync.integrationSuccessResponse": {
                "type": "object",
                "properties": {
                    "actionTaken": {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    "masterSyncId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "requestId": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "TriggerSync.linnworksConfig": {
                "required": [
                    "linnworksApiUrl",
                    "shipBobApiUrl",
                    "trackingSync",
                    "orderSync",
                    "inventorySync",
                    "productSync",
                    "lookBackDays",
                    "startShippingDate"
                ],
                "type": "object",
                "properties": {
                    "allowedHeadersForLogging": {
                        "type": "string"
                    },
                    "confirmFulfillmentForProcessedOrders": {
                        "type": "boolean"
                    },
                    "enableLinnworksTagCreation": {
                        "type": "boolean"
                    },
                    "fcToWHMap": {
                        "type": "array",
                        "items": {}
                    },
                    "inventorySync": {
                        "type": "boolean"
                    },
                    "linnworksApiUrl": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "linnworksAvailableLocationsSelected": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logErrorRequestAndResponseData": {
                        "type": "boolean"
                    },
                    "logRequestResponseHeader": {
                        "type": "boolean"
                    },
                    "lookBackDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "markOrdersAsProcessed": {
                        "type": "boolean"
                    },
                    "maxConcurrentRequests": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderSync": {
                        "type": "boolean"
                    },
                    "productSync": {
                        "type": "boolean"
                    },
                    "reconciliationSync": {
                        "type": "boolean"
                    },
                    "shipBobApiUrl": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "startShippingDate": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "syncByDelegation": {
                        "type": "boolean"
                    },
                    "syncPostalService": {
                        "type": "boolean"
                    },
                    "trackingSync": {
                        "type": "boolean"
                    },
                    "trackingSyncBatchSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Webhooks.CreateWebhookSubscriptionModel": {
                "required": [
                    "subscription_url",
                    "topic"
                ],
                "type": "object",
                "properties": {
                    "subscription_url": {
                        "type": "string",
                        "description": "URL we will call when an event matching the subscription topic is raised. Must have ssl enabled (https) and accept POST requests with content type of application/json",
                        "format": "uri",
                        "example": "https://mywebsite.com/shipbob/handler"
                    },
                    "topic": {}
                },
                "additionalProperties": false
            },
            "Webhooks.Delete.1.0.Webhook.Id.Id.Integer": {
                "type": "integer",
                "description": "",
                "format": "int32"
            },
            "Webhooks.Delete.1.0.Webhook.Id.Not.Found.OneOf.HttpValidationProblemDetail": {},
            "Webhooks.Delete.1.0.Webhook.Id.Not.Found.OneOf.HttpValidationProblemDetails": {},
            "Webhooks.Get.1.0.Internal.Webhook.ChannelId.Integer": {
                "type": "integer",
                "description": "Optional channel id of the webhooks requested",
                "format": "int32"
            },
            "Webhooks.Get.1.0.Internal.Webhook.Limit.Integer": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer",
                "description": "Amount of Webhooks per page to request",
                "format": "int32"
            },
            "Webhooks.Get.1.0.Internal.Webhook.Page.Integer": {
                "maximum": 2147483647,
                "minimum": 0,
                "type": "integer",
                "description": "Page of Webhooks to get",
                "format": "int32"
            },
            "Webhooks.Get.1.0.Internal.Webhook.UserId.Integer": {
                "type": "integer",
                "description": "User Id of the webhooks requested",
                "format": "int32"
            },
            "Webhooks.Get.1.0.Webhook.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Webhooks.Get.1.0.Webhook.Limit.Integer": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer",
                "description": "Amount of Webhooks per page to request",
                "format": "int32"
            },
            "Webhooks.Get.1.0.Webhook.OK.Next.Page.String": {
                "type": "string",
                "description": "The href of the next page of results, if there is a next page",
                "format": ""
            },
            "Webhooks.Get.1.0.Webhook.OK.Page.Number.Int": {
                "type": "integer",
                "description": "Number of the current page",
                "format": ""
            },
            "Webhooks.Get.1.0.Webhook.OK.Page.Size.Int": {
                "type": "integer",
                "description": "Number of results per page",
                "format": ""
            },
            "Webhooks.Get.1.0.Webhook.OK.Total.Count.Int": {
                "type": "integer",
                "description": "Total number of results",
                "format": ""
            },
            "Webhooks.Get.1.0.Webhook.OK.Total.Pages.Int": {
                "type": "integer",
                "description": "Total number of pages of results",
                "format": ""
            },
            "Webhooks.Get.1.0.Webhook.Page.Integer": {
                "maximum": 2147483647,
                "minimum": 0,
                "type": "integer",
                "description": "Page of Webhooks to get",
                "format": "int32"
            },
            "Webhooks.HttpValidationProblemDetail": {
                "allOf": [
                    {},
                    {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            },
            "Webhooks.HttpValidationProblemDetails": {
                "allOf": [
                    {},
                    {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            },
            "Webhooks.Post.1.0.Webhook.Bad.Request.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Webhooks.Post.1.0.Webhook.Shipbob.Channel.Id.Integer": {
                "type": "integer",
                "description": "",
                "format": "int32"
            },
            "Webhooks.Post.1.0.Webhook.Unprocessable.Entity.Object": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "Webhooks.ProblemDetail": {
                "required": [
                    "$type"
                ],
                "type": "object",
                "properties": {
                    "$type": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "extensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Webhooks.ProblemDetails": {
                "required": [
                    "$type"
                ],
                "type": "object",
                "properties": {
                    "$type": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "extensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "instance": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Webhooks.Topic": {
                "enum": [
                    "order_shipped",
                    "shipment_delivered",
                    "shipment_exception",
                    "shipment_onhold",
                    "shipment_cancelled"
                ],
                "type": "string"
            },
            "Webhooks.Topics": {
                "enum": [
                    "order_shipped",
                    "shipment_delivered",
                    "shipment_exception",
                    "shipment_onhold",
                    "shipment_cancelled"
                ],
                "type": "string"
            },
            "Webhooks.WebhookViewModel": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Timestamp the webhook subscription was created",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID of the webhook subscription",
                        "format": "int32",
                        "example": 12345
                    },
                    "subscription_url": {
                        "type": "string",
                        "description": "URL subscription events will be posted to",
                        "format": "uri"
                    },
                    "topic": {}
                },
                "additionalProperties": false
            },
            "Webhooks.WebhookViewModelArray": {
                "type": "array",
                "items": {}
            }
        }
    }
}