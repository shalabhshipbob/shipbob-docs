{
  "swagger": "2.0",
  "info": {
    "title": "ShipBob-Experimental-Original",
    "version": ""
  },
  "host": "gateway-dev.shipbob.dev",
  "basePath": "/experimental",
  "schemes": [
    "https"
  ],
  "paths": {
    "/receiving-extended/{id}/tag": {
      "put": {
        "summary": "  Update Warehouse Receiving Order Tags\n",
        "description": "  Updates tags for the provided Warehouse Receiving Order\n",
        "operationId": "0b40a20e6f25678c26ed11ebd0a2e433",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "receiving.UpdateReceivingTagsRequest",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Receiving.UpdateReceivingTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Receiving.UpdateReceivingTagsResponse"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Receiving.UpdateReceivingTagsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Receiving.Put.Api.Receiving.Id.Tag.Bad.Request.Object"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Receiving.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Receiving.ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Receiving.Put.Api.Receiving.Id.Tag.Not.Found.Object"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving",
          "Receiving:Extended"
        ]
      }
    },
    "/channel:search": {
      "post": {
        "summary": "  Search channels\n",
        "description": "  Search channels based on filters\n",
        "operationId": "831a7380f5aaf8f77b9a356776f3e457",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channels.v2.ChannelsV2SearchRequest",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Channels.v2.ChannelsV2SearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Channels.v2.ChannelSearchViewModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Channels.Post.Api.V2.Channel.Search.Bad.Request.Object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Channels"
        ]
      }
    },
    "/channel": {
      "post": {
        "summary": "  Create Channel\n",
        "description": "  Creates channel with provided name if none exists\n",
        "operationId": "92111627502044489c5f9a8f8e0a8228",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "InheritScopes",
            "in": "query",
            "description": "Header specifying should the scopes be inherited from the token\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "channels.CreateChannelRequestModel",
            "in": "body",
            "description": "Request with channel name",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Channels.CreateChannelRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Channels.ChannelViewModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Channels.ChannelViewModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Channels.Post.Api.V2.Channel.Bad.Request.Object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Channels"
        ]
      }
    },
    "/receiving/:set-external-sync": {
      "post": {
        "summary": "Set ExternalSync flag for Wros\n",
        "operationId": "a24cc704b22486f1d00776d6eabef67e",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "receiving.UpdateExternalSyncModel",
            "in": "body",
            "description": "The list of wro ids and a flag to enable external sync",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Receiving.UpdateExternalSyncModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Receiving.V2.WarehouseReceivingOrderViewModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Receiving.Post.2.0.Receiving.Set.External.Sync.Bad.Request.Object"
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/inventory-levels": {
      "get": {
        "summary": "    Get All Inventory Levels\n",
        "operationId": "92f6f4de418ed836aca7dec8d17a1f84",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryQuantityResponsePagedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "InventoryLevels"
        ]
      }
    },
    "/inventories": {
      "get": {
        "summary": "    Get All Inventories\n",
        "operationId": "5a3e974ce80c445f8f51b7f9ac682e2c",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "FilterOperations",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryResponsePagedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "Inventories"
        ]
      }
    },
    "/inventory-levels/{inventoryId}": {
      "get": {
        "summary": "    Get Inventory Levels\n",
        "operationId": "69d1808c5d320b58f248877290e03f36",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryQuantityResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "InventoryLevels"
        ]
      }
    },
    "/inventory-levels/locations": {
      "get": {
        "summary": "    Get All Inventory Levels Grouped By Fulfillment Center\n",
        "operationId": "511ebaa4c51b171357da1850ec73b690",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LocationType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryQuantityFcResponsePagedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "InventoryLevels"
        ]
      }
    },
    "/inventory-levels/lots": {
      "get": {
        "summary": "    Get All Inventory Levels Grouped By Lot\n",
        "operationId": "f114ded633454ff81bd27c6324c5d098",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LocationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryQuantityLotResponsePagedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "InventoryLevels"
        ]
      }
    },
    "/inventory-levels/{inventoryId}/locations": {
      "get": {
        "summary": "    Get Inventory Levels Grouped By Fulfillment Center\n",
        "operationId": "9ccd2885c6a35d9758faf63aee5c50bd",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryQuantityFcResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "InventoryLevels"
        ]
      }
    },
    "/inventory-levels/{inventoryId}/lots": {
      "get": {
        "summary": "    Get Inventory Levels Grouped By Lot\n",
        "operationId": "53e0fe48fd3e068eb74400fcdf4ac39d",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryQuantityLotResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "InventoryLevels"
        ]
      }
    },
    "/inventories/{inventoryId}": {
      "get": {
        "summary": "    Get Inventory\n",
        "operationId": "baabdeacd0fb29ccd774844538582e71",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory.InventoryResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Inventory.ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory",
          "Inventories"
        ]
      }
    },
    "/inventory/history": {
      "post": {
        "summary": "Merchant Inventory History.\n",
        "description": "Returns all events that change the total on-hand quantity of a given merchant's inventory for a given facility.\n",
        "operationId": "e717a735deb90e36e99360ae311df0c3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fulfillmentCenterInventoryService.MerchantHistoryRequest",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FulfillmentCenterInventoryService.MerchantHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FulfillmentCenterInventoryService.InventoryHistoryResponse"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "FulfillmentCenterInventoryService",
          "InventoryHistory"
        ]
      }
    },
    "/inventory/{InventoryId}/history": {
      "get": {
        "summary": "Single Inventory History.\n",
        "description": "Returns all events that change the total on-hand quantity of a given inventory and lot combination for a given facility.\n",
        "operationId": "97192f9a8c0a15b9832cfa9b74fa705c",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "InventoryId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "FacilityId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          },
          {
            "name": "EventCategory",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Cursor",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FulfillmentCenterInventoryService.InventoryHistoryResponse"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "FulfillmentCenterInventoryService",
          "InventoryHistory"
        ]
      }
    },
    "/Product/{productId}/variants": {
      "patch": {
        "summary": "Updates multiple product variants\n",
        "operationId": "16364e8117703570686434e0b3ba7abe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.UpdateProductVariantModelV5",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.UpdateProductVariantModelV5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.VariantViewModelV5Array"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      },
      "post": {
        "summary": "Adds new product variants to a product\n",
        "operationId": "14daa5e4386442d68fbf15d81ca67bea",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.CreateProductVariantRequestModelV5Array",
            "in": "body",
            "description": "The product variants to add to product",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.CreateProductVariantRequestModelV5Array"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      },
      "get": {
        "summary": "Gets multiple product variants\n",
        "operationId": "d7b5853f4a24d00f149fbe297ee11e5b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product id\n",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.VariantViewModelV5Array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Product.ProductId.Variants.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Product.ProductId.Variants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      }
    },
    "/Product/{productId}": {
      "patch": {
        "summary": "Update a single product with Json Merge Patch functionality\n",
        "description": "Updates a single product. This endpoint supports Json Merge Patch functionality, which allows partial updates to be made to the product. The endpoint will only update the fields that are provided in the request. For updating variants, you mnust include the ID of the variant that you would like to update.\n",
        "operationId": "2dd7afd0ffe30df53fe295964e471abc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product identifier\n",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.UpdateProductRequestModelV5",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.UpdateProductRequestModelV5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      },
      "delete": {
        "summary": "Deletes Bundle and removes associations to related products\n",
        "operationId": "dff42dc941ad7015e0ef589a5df04a41",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product identifier\n",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Delete.Api.V5.Product.ProductId.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Delete.Api.V5.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      },
      "get": {
        "summary": "  Gets Product by Id\n",
        "operationId": "9d82d40f4758612d28c98612ce997deb",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Product.ProductId.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      }
    },
    "/Taxonomy": {
      "get": {
        "summary": "  Gets Taxonomy\n",
        "operationId": "261e342a8a9514a5c30d6321ef4ff2c2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.TaxonomyViewModelArray"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Taxonomy"
        ]
      }
    },
    "/Variant/{variantId}/channel-metadata/{channelMetadataId}": {
      "put": {
        "summary": "Update specific channel metadata record from a variant by channel metadata ID\n",
        "operationId": "90aa9021b19d7789681a49b76d79703d",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "description": "The ID of the variant to update the metadata from\n",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "channelMetadataId",
            "in": "path",
            "description": "The ID of the channel metadata record to update\n",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.VariantViewModelV5"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Variant"
        ]
      },
      "delete": {
        "summary": "Used to delete a specific channel metadata record from a variant by channel metadata ID\n",
        "operationId": "b48e74188d2b119e672f2ea93f9b96c6",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "description": "The ID of the variant to remove the metadata from\n",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "channelMetadataId",
            "in": "path",
            "description": "The ID of the channel metadata record to delete\n",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.VariantViewModelV5"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Delete.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Delete.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Variant"
        ]
      }
    },
    "/Product/{productId}:moveVariants": {
      "post": {
        "summary": "Migrates variants to existing product\n",
        "operationId": "a3869424cb29a4540a3c8890462b4704",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.MigrateVariantRequestModel",
            "in": "body",
            "description": "Migration definition",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.MigrateVariantRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Post.Api.V5.Product.ProductId.MoveVariants.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Post.Api.V5.Product.ProductId.MoveVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      }
    },
    "/Taxonomy/{id}/parent": {
      "get": {
        "summary": "  Gets Taxonomy Parent\n",
        "operationId": "09c013ed682b50f3d16234d4c69f519b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.TaxonomyViewModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Id.Parent.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Id.Parent.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Id.Parent.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Taxonomy"
        ]
      }
    },
    "/Variant/{variantId}:convertToBundle": {
      "post": {
        "summary": "Add new product variants to a product\n",
        "operationId": "0386f51f54514a8488c3b7e914220aba",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.ConvertVariantToBundleRequest",
            "in": "body",
            "description": "The variant request that is to be converted to bundle",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.ConvertVariantToBundleRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Variant"
        ]
      }
    },
    "/Taxonomy/{id}": {
      "get": {
        "summary": "  Gets Taxonomy by Id\n",
        "operationId": "45c19cd89efa4b89bc9c93f3d443f77c",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.TaxonomyViewModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Id.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Id.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Taxonomy.Id.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Taxonomy"
        ]
      }
    },
    "/Product": {
      "post": {
        "summary": "Create single product to the store\n",
        "operationId": "0c4a773215d74006c7062e138ae1b94e",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "products.CreateProductRequestModelV5",
            "in": "body",
            "description": "The product to add",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.CreateProductRequestModelV5"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      },
      "get": {
        "summary": "Retrieves List of Products based on filters provided\n",
        "operationId": "5e4fe606de2077dfa918ff128f5bbfff",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "description": "Search Products by name, sku, inventory id or product Id.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "Barcode",
            "in": "query",
            "description": "Barcode Associated with variant\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "CategoryIds",
            "in": "query",
            "description": "List of Category Ids associated with product\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "ChannelIds",
            "in": "query",
            "description": "Looks for Products variants by their channel IDs\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "HasDigitalVariants",
            "in": "query",
            "description": "Looks for Products with/without digital variants\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "HasVariants",
            "in": "query",
            "description": "Looks for Products with/without variants\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "InventoryId",
            "in": "query",
            "description": "Looks for variants by its associated inventory id\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "IsInventorySyncEnabled",
            "in": "query",
            "description": "Looks for Products variants by their IsInventorySyncEnabled is true\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "LegacyIds",
            "in": "query",
            "description": "Looks for Products with by Legacy Product Id(s)\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Looks for Products/Variants by name\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "OnHand",
            "in": "query",
            "description": "Looks for Products with inventory\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "PlatformIds",
            "in": "query",
            "description": "Looks for Products variants by their external Platform IDs\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "ProductId",
            "in": "query",
            "description": "Looks for Products with an assigned Id\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "ProductType",
            "in": "query",
            "description": "Looks for Products by type\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "ReviewsPending",
            "in": "query",
            "description": "Looks for Products by ReviewsPending\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "SalesChannel",
            "in": "query",
            "description": "Looks for Products variants assigned to a platform/sales channel \n",
            "required": false,
            "type": "string"
          },
          {
            "name": "SellerSKU",
            "in": "query",
            "description": "Looks for Products that match the provided Seller query\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "SKU",
            "in": "query",
            "description": "Looks for Products that match the provided Sku query\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "TaxonomyIds",
            "in": "query",
            "description": "Looks for Products variants by their taxonomy id or any descendants of the taxonomies sent separated by comma\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "VariantId",
            "in": "query",
            "description": "Looks for products that contain a variant with the given ID\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "VariantStatus",
            "in": "query",
            "description": "Looks for Products with variants that contain provided status\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "1-250\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "Id, Name, Category, TotalOnHandQty\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "ASC,DESC\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5PagedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Product.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Get.Api.V5.Product.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      }
    },
    "/packaging-requirement": {
      "get": {
        "summary": "Gets Packaging Requirement\n",
        "operationId": "672942b09322e1990e33ef572188ad73",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Products.PackagingRequirementViewModelArray"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "PackagingRequirement"
        ]
      }
    },
    "/Variant/{variantId}:merge": {
      "post": {
        "summary": "Used to merge two or more variants together\n",
        "operationId": "089b4461bf637cc52135f10eaf8f02a9",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "description": "The ID of the variant to use as the merge target\n",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.MergeVariantRequestModelArray",
            "in": "body",
            "description": "The variants that should be merged to the target variant",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.MergeVariantRequestModelArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Variant"
        ]
      }
    },
    "/Variant/{variantId}/channel-metadata": {
      "post": {
        "summary": "Create a new Channel Metadata Entry for a given Variant\n",
        "operationId": "16bdf05dd87417fa58047a46bb481f61",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "products.Post.Api.V5.Variant.VariantId.Channel.Metadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.Post.Api.V5.Variant.VariantId.Channel.Metadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModelV5"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Variant"
        ]
      }
    },
    "/Product:moveVariants": {
      "post": {
        "summary": "Migrates existing variants to a new product\n",
        "operationId": "d88155a65d5492b57f4cf1d9b2351989",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "products.MigrateVariantRequestModel",
            "in": "body",
            "description": "Migration definition",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Products.MigrateVariantRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Products.ProductViewModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Products.Post.Api.V5.Product.MoveVariants.Bad.Request.Object"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Products.Post.Api.V5.Product.MoveVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products",
          "Product"
        ]
      }
    },
    "/pos-integration/pick-inventory": {
      "post": {
        "summary": "  \tPOS Pick Inventory\n",
        "description": "    POS Integration API to pick inventory\n",
        "operationId": "1400c7aeab22edbc7311475e92739299",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "facilityWorkflowIntegrations.ShopifyPickData",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FacilityWorkflowIntegrations.ShopifyPickData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/FacilityWorkflowIntegrations.ShopifyResponseError"
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "ShopifyPick",
          "FacilityWorkflowIntegrations"
        ]
      }
    }
  },
  "definitions": {
    "Attachment.Post.Api.Attachment.Bad.Request.Object": {
      "type": "object"
    },
    "Attachment.Post.Api.Attachment.Unprocessable.Entity.Object": {
      "type": "object"
    },
    "Attachment.Post.Api.BlobKey.String": {
      "type": "string"
    },
    "Attachment.Post.Api.DomainType.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Attachment.Post.Api.FileName.String": {
      "type": "string"
    },
    "Attachment.Post.Api.FileType.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Attachments.CreateViewModel": {
      "type": "object",
      "properties": {
        "AttachmentName": {
          "type": "string"
        },
        "AttachmentUri": {
          "type": "string"
        }
      }
    },
    "Channels.ChannelViewModel": {
      "type": "object",
      "properties": {
        "application_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Channels.CreateChannelRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Channels.Post.Api.V2.Channel.Bad.Request.Object": {
      "type": "object"
    },
    "Channels.Post.Api.V2.Channel.InheritScopes.Boolean": {
      "type": "boolean"
    },
    "Channels.Post.Api.V2.Channel.Search.Bad.Request.Object": {
      "type": "object"
    },
    "Channels.v2.ChannelBasicViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Channels.v2.ChannelSearchViewModel": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Channels.v2.ChannelBasicViewModel"
          }
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        },
        "total_records": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Channels.v2.ChannelsV2SearchRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "records_per_page": {
          "type": "integer",
          "format": "int32"
        },
        "search_filters": {
          "$ref": "#/components/schemas/Channels.v2.SearchFilters"
        }
      }
    },
    "Channels.v2.SearchFilters": {
      "type": "object",
      "properties": {
        "channel_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "channel_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FacilityWorkflowIntegrations.ShopifyPickData": {
      "type": "object",
      "properties": {
        "fulfillmentCenterId": {
          "type": "integer",
          "format": "int32"
        },
        "inventorySku": {
          "type": "string"
        },
        "quantityToPick": {
          "type": "integer",
          "format": "int32"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "required": [
        "fulfillmentCenterId",
        "inventorySku",
        "quantityToPick",
        "transactionId"
      ]
    },
    "FacilityWorkflowIntegrations.ShopifyResponseError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "FulfillmentCenterInventoryService.Get.Inventory.InventoryId.History.Cursor.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "FulfillmentCenterInventoryService.Get.Inventory.InventoryId.History.EndDate.String": {
      "type": "string",
      "format": "date-time"
    },
    "FulfillmentCenterInventoryService.Get.Inventory.InventoryId.History.EventCategory.String": {
      "type": "string"
    },
    "FulfillmentCenterInventoryService.Get.Inventory.InventoryId.History.FacilityId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "FulfillmentCenterInventoryService.Get.Inventory.InventoryId.History.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "FulfillmentCenterInventoryService.Get.Inventory.InventoryId.History.StartDate.String": {
      "type": "string",
      "format": "date-time"
    },
    "FulfillmentCenterInventoryService.InventoryHistory": {
      "type": "object",
      "properties": {
        "decrement": {
          "$ref": "#/components/schemas/FulfillmentCenterInventoryService.InventoryHistoryDetails"
        },
        "event_category": {
          "type": "string"
        },
        "event_datetime": {
          "type": "string",
          "format": "date-time"
        },
        "increment": {
          "$ref": "#/components/schemas/FulfillmentCenterInventoryService.InventoryHistoryDetails"
        },
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "shipbob_order_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FulfillmentCenterInventoryService.InventoryHistoryDetails": {
      "type": "object",
      "properties": {
        "expiration_date": {
          "type": "string",
          "format": "date-time"
        },
        "facility_id": {
          "type": "integer",
          "format": "int32"
        },
        "lot_number": {
          "type": "string"
        },
        "quantity_change": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FulfillmentCenterInventoryService.InventoryHistoryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/FulfillmentCenterInventoryService.InventoryHistory"
          }
        },
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "FulfillmentCenterInventoryService.MerchantHistoryRequest": {
      "type": "object",
      "properties": {
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "event_category": {
          "type": "string"
        },
        "facility_id": {
          "type": "integer",
          "format": "int32"
        },
        "inventory_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "inventory_ids"
      ]
    },
    "Inventory.CreateInventoryLotExclusionRequest": {
      "type": "object",
      "properties": {
        "expiration_date": {
          "type": "string",
          "format": "date-time"
        },
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "lot_number": {
          "type": "string"
        }
      }
    },
    "Inventory.DimensionsResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number",
          "format": "double"
        },
        "is_locked": {
          "type": "boolean"
        },
        "length": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "string"
        },
        "validated": {
          "type": "boolean"
        },
        "width": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Inventory.FilterOperati": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "rawValue": {
          "type": "string"
        }
      }
    },
    "Inventory.FilterOperation": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "rawValue": {
          "type": "string"
        }
      }
    },
    "Inventory.FilterOperationArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Inventory.FilterOperation"
      }
    },
    "Inventory.FulfillableQuantityByFulfillmentCenter": {
      "type": "object",
      "properties": {
        "awaiting_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "committed_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "fulfillable_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "internal_transfer_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "on_hand_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Inventory.FulfillmentCenterResponse": {
      "type": "object",
      "properties": {
        "awaiting_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "committed_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "fulfillable_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "internal_transfer_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "on_hand_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Inventory.Get.Api.V2.Inventories.InventoryId.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventories.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V2.Inventories.IsActive.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventories.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventories.IsDigital.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventories.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventories.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventories.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventories.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.InventoryId.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.InventoryId.Locations.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.InventoryId.Lots.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V2.Inventory.Levels.IsActive.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.IsDigital.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.IsActive.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.IsDigital.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.LocationId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.LocationType.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Locations.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.IsActive.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.IsDigital.Boolea": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.LocationId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.Lots.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V2.Inventory.Levels.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventories.InventoryId.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventories.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V3.Inventories.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventories.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventories.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventories.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventories.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.InventoryId.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.InventoryId.Locations.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.InventoryId.Lots.InventoryId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V3.Inventory.Levels.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.LocationId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.LocationType.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Locations.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.InventoryIds.IntegerArray": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      }
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.IsActive.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.IsDigital.Boolean": {
      "type": "boolean"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.LocationId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.Lots.SortBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.PageSize.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.SearchBy.String": {
      "type": "string"
    },
    "Inventory.Get.Api.V3.Inventory.Levels.SortBy.String": {
      "type": "string"
    },
    "Inventory.HazmatResponse": {
      "type": "object",
      "properties": {
        "is_hazmat": {
          "type": "boolean"
        },
        "validated": {
          "type": "boolean"
        }
      }
    },
    "Inventory.InventoryHistoryReportQueryModel": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "fulfillmentCenterId": {
          "type": "integer",
          "format": "int32"
        },
        "inventoryIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "requestId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Inventory.InventoryHistoryReportResponse": {
      "type": "object",
      "properties": {
        "reportUrl": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        }
      }
    },
    "Inventory.InventoryQuantityFcResponse": {
      "type": "object",
      "properties": {
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.FulfillmentCenterResponse"
          }
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        }
      }
    },
    "Inventory.InventoryQuantityFcResponsePagedResponse": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.InventoryQuantityFcResponse"
          }
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "Inventory.InventoryQuantityLotResponse": {
      "type": "object",
      "properties": {
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "lots": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.Lots"
          }
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        }
      }
    },
    "Inventory.InventoryQuantityLotResponsePagedResponse": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.InventoryQuantityLotResponse"
          }
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "Inventory.InventoryQuantityResponse": {
      "type": "object",
      "properties": {
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "total_awaiting_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_backordered_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_committed_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_exception_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_fulfillable_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_internal_transfer_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_on_hand_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "total_sellable_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Inventory.InventoryQuantityResponsePagedResponse": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.InventoryQuantityResponse"
          }
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "Inventory.InventoryResponse": {
      "type": "object",
      "properties": {
        "barcode": {
          "type": "string"
        },
        "dimensions": {
          "$ref": "#/components/schemas/Inventory.DimensionsResponse"
        },
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "is_case": {
          "type": "boolean"
        },
        "is_lot": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "variant": {
          "$ref": "#/components/schemas/Inventory.VariantResponse"
        },
        "weight": {
          "$ref": "#/components/schemas/Inventory.WeightResponse"
        }
      }
    },
    "Inventory.InventoryResponsePagedResponse": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.InventoryResponse"
          }
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "Inventory.Lot": {
      "type": "object",
      "properties": {
        "awaiting_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "committed_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "fulfillable_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "internal_transfer_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.FulfillableQuantityByFulfillmentCenter"
          }
        },
        "lot_date": {
          "type": "string",
          "format": "date-time"
        },
        "lot_number": {
          "type": "string"
        },
        "on_hand_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Inventory.Lots": {
      "type": "object",
      "properties": {
        "awaiting_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "committed_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "fulfillable_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "internal_transfer_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Inventory.FulfillableQuantityByFulfillmentCenter"
          }
        },
        "lot_date": {
          "type": "string",
          "format": "date-time"
        },
        "lot_number": {
          "type": "string"
        },
        "on_hand_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Inventory.Post.Api.Inventory.History.Report.Bad.Request.Object": {
      "type": "object"
    },
    "Inventory.ProblemDetail": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Inventory.ProblemDetails": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Inventory.ResponseError": {
      "type": "object",
      "properties": {
        "error_message": {
          "type": "string"
        }
      }
    },
    "Inventory.VariantResponse": {
      "type": "object",
      "properties": {
        "hazmat": {
          "$ref": "#/components/schemas/Inventory.HazmatResponse"
        },
        "is_active": {
          "type": "boolean"
        },
        "is_bundle": {
          "type": "boolean"
        },
        "is_digital": {
          "type": "boolean"
        }
      }
    },
    "Inventory.WeightResponse": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Orders.AddressType": {
      "type": "string"
    },
    "Orders.AddressViewModel": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip_code": {
          "type": "string",
          "format": "postal-code"
        }
      },
      "required": [
        "address1",
        "city",
        "country"
      ]
    },
    "Orders.CreateTransportationOrderModel": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "measurements": {
          "$ref": "#/components/schemas/Orders.MeasurementsViewModel"
        },
        "recipient": {
          "$ref": "#/components/schemas/Orders.RecipientInfoViewModel"
        },
        "reference_id": {
          "type": "string"
        },
        "shipping_method": {
          "type": "string"
        }
      },
      "required": [
        "locationId",
        "measurements",
        "recipient",
        "referenceId",
        "shippingMethod"
      ]
    },
    "Orders.Get.Api.LotExclusions.Inventory.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Orders.Get.Api.LotExclusions.InventoryLotExclusionsViewModel": {
      "type": "object",
      "properties": {
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "$/components/schemas/Orders.Get.Api.LotExclusions.LotExclusionsViewModel"
          }
        },
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Orders.Get.Api.LotExclusions.InventoryLotExclusionsViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Orders.Get.Api.LotExclusions.InventoryLotExclusionsViewModel"
      }
    },
    "Orders.Get.Api.LotExclusions.LotDate.String": {
      "type": "string",
      "format": "date-time"
    },
    "Orders.Get.Api.LotExclusions.LotExclusionsViewModel": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "integer",
          "format": "int32"
        },
        "lot_date": {
          "type": "string",
          "format": "date-time"
        },
        "lot_number": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Orders.Get.Api.LotExclusions.LotExclusionsViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Orders.Get.Api.LotExclusions.LotExclusionsViewModel"
      }
    },
    "Orders.Get.Api.LotExclusions.LotNumber.String": {
      "type": "string"
    },
    "Orders.Get.Api.LotExclusions.Shipbob.Channel.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Orders.MeasurementsViewModel": {
      "type": "object",
      "properties": {
        "depth_in": {
          "type": "integer",
          "format": "int32"
        },
        "length_in": {
          "type": "integer",
          "format": "int32"
        },
        "total_weight_oz": {
          "type": "integer",
          "format": "int32"
        },
        "width_in": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Orders.Post.Api.Order.Transportation.Bad.Request.Object": {
      "type": "object"
    },
    "Orders.Post.Api.Order.Transportation.Shipbob.Channel.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Orders.Post.Api.Order.Transportation.Unprocessable.Entity.Object": {
      "type": "object"
    },
    "Orders.Put.Api.Order.OrderId.Dimensions.Bad.Request.Object": {
      "type": "object"
    },
    "Orders.Put.Api.Order.OrderId.Dimensions.OrderId.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Orders.Put.Api.Order.OrderId.Dimensions.Shipbob.Channel.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Orders.Put.Api.Order.OrderId.Dimensions.Unprocessable.Entity.Object": {
      "type": "object"
    },
    "Orders.RecipientInfoViewModel": {
      "type": "object",
      "properties": {
        "address": {

        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "name"
      ]
    },
    "Orders.RetailerProgramDataAddressViewModel": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/components/schemas/Orders.AddressType"
        }
      },
      "required": [
        "type"
      ]
    },
    "Orders.TransportationOrderViewModel": {
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Orders.UpdateMeasurementsViewModel": {
      "type": "object",
      "properties": {
        "depth_in": {
          "type": "integer",
          "format": "int32"
        },
        "length_in": {
          "type": "integer",
          "format": "int32"
        },
        "total_weight_oz": {
          "type": "integer",
          "format": "int32"
        },
        "width_in": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "depth",
        "length",
        "totalWeight",
        "width"
      ]
    },
    "Orders.UpdateOrderDimensionsModel": {
      "type": "object",
      "properties": {
        "measurements": {
          "$ref": "#/components/schemas/Orders.UpdateMeasurementsViewModel"
        }
      },
      "required": [
        "measurements"
      ]
    },
    "Products.AdditionalHazmatAttributesRequestModel": {
      "type": "object",
      "properties": {
        "charge_state_percentage": {
          "type": "number",
          "format": "double"
        },
        "container_metal": {
          "type": "boolean"
        },
        "lithium_battery_packaging": {
          "type": "string"
        },
        "lithium_battery_type": {
          "type": "string"
        },
        "magnet": {
          "type": "boolean"
        },
        "net_volume": {
          "type": "number",
          "format": "double"
        },
        "net_weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.AdditionalHazmatAttributesViewModel": {
      "type": "object",
      "properties": {
        "charge_state_percentage": {
          "type": "number",
          "format": "double"
        },
        "container_metal": {
          "type": "boolean"
        },
        "lithium_battery_packaging": {
          "type": "string"
        },
        "lithium_battery_type": {
          "type": "string"
        },
        "magnet": {
          "type": "boolean"
        },
        "net_volume": {
          "type": "number",
          "format": "double"
        },
        "net_weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.AmazonChannelMetadataRequestModel": {
      "type": "object",
      "properties": {
        "asin": {
          "type": "string"
        },
        "fnsku": {
          "type": "string"
        },
        "fulfillment_channel": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "Products.AmazonChannelMetadataViewModel": {
      "type": "object",
      "properties": {
        "asin": {
          "type": "string"
        },
        "fnsku": {
          "type": "string"
        },
        "fulfillment_channel": {
          "type": "string"
        }
      }
    },
    "Products.AmazonProductChannelMetadataModel": {
      "type": "object",
      "properties": {
        "asin": {
          "type": "string"
        },
        "fnsku": {
          "type": "string"
        },
        "fulfillment_channel": {
          "type": "string"
        }
      }
    },
    "Products.ApplicableCategoryViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "sub_category_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "Products.AssociatedBundlesViewModel": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "product_name": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64"
        },
        "variant_sku": {
          "type": "string"
        }
      }
    },
    "Products.BarcodeModel": {
      "type": "object",
      "properties": {
        "sticker_url": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Products.BarcodeRequestModel": {
      "type": "object",
      "properties": {
        "sticker_url": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Products.BarcodeViewModel": {
      "type": "object",
      "properties": {
        "sticker_url": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Products.BaseAdditionalHazmatAttributesModel": {
      "type": "object",
      "properties": {
        "charge_state_percentage": {
          "type": "number",
          "format": "double"
        },
        "container_metal": {
          "type": "boolean"
        },
        "lithium_battery_packaging": {
          "type": "string"
        },
        "lithium_battery_type": {
          "type": "string"
        },
        "magnet": {
          "type": "boolean"
        },
        "net_volume": {
          "type": "number",
          "format": "double"
        },
        "net_weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.BaseBundleDefinitionModel": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.BaseChannelMetadataRequestModel": {
      "type": "object"
    },
    "Products.BaseCustomsModel": {
      "type": "object",
      "properties": {
        "country_code_of_origin": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hs_tariff_code": {
          "type": "string"
        },
        "is321_eligible": {
          "type": "boolean"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.BaseDimensionModel": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number",
          "format": "double"
        },
        "length": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.BaseFulfillmentSettingsModel": {
      "type": "object",
      "properties": {
        "dangerous_goods": {
          "type": "boolean"
        },
        "is_bpm_parcel": {
          "type": "boolean"
        },
        "is_case_pick": {
          "type": "boolean"
        },
        "msds_url": {
          "type": "string"
        },
        "requires_prop65": {
          "type": "boolean"
        },
        "serial_scan": {
          "$ref": "#/components/schemas/Products.BaseSerialScanModel"
        }
      }
    },
    "Products.BaseLotInformationModel": {
      "type": "object",
      "properties": {
        "is_lot": {
          "type": "boolean"
        },
        "minimum_shelf_life_days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.BaseProductChannelMetadataModel": {
      "type": "object"
    },
    "Products.BaseProductRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "taxonomy_id": {
          "type": "integer",
          "format": "int32"
        },
        "type_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.BaseProductVariantModel": {
      "type": "object",
      "properties": {
        "additional_hazmat_attributes": {
          "$ref": "#/components/schemas/Products.BaseAdditionalHazmatAttributesModel"
        },
        "bundle_definition": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BaseBundleDefinitionModel"
          }
        },
        "channel_metadata": {
          "type": "array",
          "items": {

          }
        },
        "customs": {
          "$ref": "#/components/schemas/Products.BaseCustomsModel"
        },
        "dimension": {
          "$ref": "#/components/schemas/Products.BaseDimensionModel"
        },
        "fulfillment_settings": {
          "$ref": "#/components/schemas/Products.BaseFulfillmentSettingsModel"
        },
        "gtin": {
          "type": "string"
        },
        "is_digital": {
          "type": "boolean"
        },
        "lot_information": {
          "$ref": "#/components/schemas/Products.BaseLotInformationModel"
        },
        "name": {
          "type": "string"
        },
        "packaging_material_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "packaging_requirement_id": {
          "type": "integer",
          "format": "int32"
        },
        "return_preferences": {
          "$ref": "#/components/schemas/Products.BaseReturnPreferencesModel"
        },
        "reviews_pending": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.ReviewsPendingType"
          }
        },
        "sku": {
          "type": "string"
        },
        "status": {
          "$ref": "#/components/schemas/Products.VariantStatus"
        },
        "upc": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.BaseProductVariantRequestModel": {
      "type": "object",
      "properties": {
        "additional_hazmat_attributes": {
          "$ref": "#/components/schemas/Products.AdditionalHazmatAttributesRequestModel"
        },
        "bundle_definition": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BundleDefinitionRequestModel"
          }
        },
        "channel_metadata": {
          "type": "array",
          "items": {

          }
        },
        "customs": {
          "$ref": "#/components/schemas/Products.CustomsRequestModel"
        },
        "dimension": {
          "$ref": "#/components/schemas/Products.DimensionRequestModel"
        },
        "fulfillment_settings": {
          "$ref": "#/components/schemas/Products.FulfillmentSettingsRequestModel"
        },
        "gtin": {
          "type": "string"
        },
        "is_digital": {
          "type": "boolean"
        },
        "lot_information": {
          "$ref": "#/components/schemas/Products.LotInformationRequestModel"
        },
        "name": {
          "type": "string"
        },
        "packaging_material_type_id": {
          "type": "integer",
          "format": "int32"
        },
        "packaging_requirement_id": {
          "type": "integer",
          "format": "int32"
        },
        "return_preferences": {
          "$ref": "#/components/schemas/Products.ReturnPreferencesRequestModel"
        },
        "sku": {
          "type": "string"
        },
        "status_id": {
          "type": "integer",
          "format": "int32"
        },
        "upc": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.BaseReturnPreferencesModel": {
      "type": "object",
      "properties": {
        "backup_action_id": {
          "type": "integer",
          "format": "int32"
        },
        "instructions": {
          "type": "string"
        },
        "primary_action_id": {
          "type": "integer",
          "format": "int32"
        },
        "return_to_sender_backup_action_id": {
          "type": "integer",
          "format": "int32"
        },
        "return_to_sender_primary_action_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.BaseSerialScanModel": {
      "type": "object",
      "properties": {
        "exact_character_length": {
          "type": "integer",
          "format": "int32"
        },
        "is_enabled": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      }
    },
    "Products.BaseTaxonomyViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "Products.BigCommerceChannelMetadataRequestModel": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string"
        },
        "platform_product_id": {
          "type": "integer",
          "format": "int64"
        },
        "platform_variant_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.BigCommerceChannelMetadataViewModel": {
      "type": "object",
      "properties": {
        "platform_product_id": {
          "type": "integer",
          "format": "int64"
        },
        "platform_variant_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.BigCommerceProductChannelMetadataModel": {
      "type": "object",
      "properties": {
        "platform_product_id": {
          "type": "integer",
          "format": "int64"
        },
        "platform_variant_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.BundleDefinitionRequestModel": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.BundleDefinitionViewModel": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64"
        },
        "variant_name": {
          "type": "string"
        },
        "variant_sku": {
          "type": "string"
        }
      }
    },
    "Products.ChannelMetadataRequestModel": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_inventory_sync_enabled": {
          "type": "boolean"
        },
        "legacy_product_id": {
          "type": "integer",
          "format": "int64"
        },
        "platform": {
          "type": "string"
        },
        "platform_identifier": {
          "type": "string"
        },
        "platform_inventory_item_id": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "seller_sku": {
          "type": "string"
        }
      }
    },
    "Products.ChannelMetadataViewModel": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "integer",
          "format": "int64"
        },
        "channel_name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_inventory_sync_enabled": {
          "type": "boolean"
        },
        "legacy_product_id": {
          "type": "integer",
          "format": "int64"
        },
        "platform": {
          "type": "string"
        },
        "platform_identifier": {
          "type": "string"
        },
        "platform_inventory_item_id": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "seller_sku": {
          "type": "string"
        }
      }
    },
    "Products.ChildTaxonomyViewModel": {
      "type": "object",
      "properties": {
        "has_children": {
          "type": "boolean"
        }
      }
    },
    "Products.ConvertVariantToBundleRequest": {
      "type": "object",
      "properties": {
        "bundle_definition": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BundleDefinitionRequestModel"
          }
        },
        "channel_metadata": {
          "type": "array",
          "items": {

          }
        },
        "name": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        }
      }
    },
    "Products.CreateProductRequestModelV3": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.CreateProductVariantRequestModelV3"
          }
        }
      }
    },
    "Products.CreateProductRequestModelV5": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.CreateProductVariantRequestModelV5"
          }
        }
      }
    },
    "Products.CreateProductVariantRequestModel": {
      "type": "object"
    },
    "Products.CreateProductVariantRequestModelV3": {
      "type": "object",
      "properties": {
        "barcode_sticker_url": {
          "type": "string"
        }
      }
    },
    "Products.CreateProductVariantRequestModelV3Array": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.CreateProductVariantRequestModelV3"
      }
    },
    "Products.CreateProductVariantRequestModelV5": {
      "type": "object",
      "properties": {
        "barcodes": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BarcodeRequestModel"
          }
        }
      }
    },
    "Products.CreateProductVariantRequestModelV5Array": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.CreateProductVariantRequestModelV5"
      }
    },
    "Products.CustomsRequestModel": {
      "type": "object",
      "properties": {
        "country_code_of_origin": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hs_tariff_code": {
          "type": "string"
        },
        "is321_eligible": {
          "type": "boolean"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.CustomsViewModel": {
      "type": "object",
      "properties": {
        "country_code_of_origin": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hs_tariff_code": {
          "type": "string"
        },
        "is321_eligible": {
          "type": "boolean"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.Delete.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Delete.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.ChannelMetadataId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Delete.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Delete.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Delete.Api.V4.Product.ProductId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Delete.Api.V4.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Delete.Api.V4.Product.ProductId.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Delete.Api.V5.Product.ProductId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Delete.Api.V5.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Delete.Api.V5.Product.ProductId.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Delete.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Delete.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.ChannelMetadataId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Delete.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Delete.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.DimensionRequestModel": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number",
          "format": "double"
        },
        "length": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.DimensionViewModel": {
      "type": "object",
      "properties": {
        "height": {
          "type": "number",
          "format": "double"
        },
        "is_locked": {
          "type": "boolean"
        },
        "length": {
          "type": "number",
          "format": "double"
        },
        "source": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "width": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Products.EnumViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Products.FulfillmentSettingsRequestModel": {
      "type": "object",
      "properties": {
        "dangerous_goods": {
          "type": "boolean"
        },
        "is_bpm_parcel": {
          "type": "boolean"
        },
        "is_case_pick": {
          "type": "boolean"
        },
        "msds_url": {
          "type": "string"
        },
        "requires_prop65": {
          "type": "boolean"
        },
        "serial_scan": {
          "$ref": "#/components/schemas/Products.SerialScanRequestModel"
        }
      }
    },
    "Products.FulfillmentSettingsViewModel": {
      "type": "object",
      "properties": {
        "dangerous_goods": {
          "type": "boolean"
        },
        "is_bpm_parcel": {
          "type": "boolean"
        },
        "is_case_pick": {
          "type": "boolean"
        },
        "msds_url": {
          "type": "string"
        },
        "requires_prop65": {
          "type": "boolean"
        },
        "serial_scan": {
          "$ref": "#/components/schemas/Products.SerialScanViewModel"
        }
      }
    },
    "Products.Get.Api.V4.Product.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Get.Api.V4.Product.Barcode.Int": {
      "type": "Int"
    },
    "Products.Get.Api.V4.Product.CategoryIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.ChannelIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.HasDigitalVariants.Boolean": {
      "type": "Boolean"
    },
    "Products.Get.Api.V4.Product.HasVariants.Boolean": {
      "type": "Boolean"
    },
    "Products.Get.Api.V4.Product.InventoryId.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.LegacyIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.Name.String": {
      "type": "String"
    },
    "Products.Get.Api.V4.Product.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Product.OnHand.Integer": {
      "type": "Integer"
    },
    "Products.Get.Api.V4.Product.PageSize.Int": {
      "type": "int"
    },
    "Products.Get.Api.V4.Product.PlatformIds.List.String": {
      "type": "List\u003CString\u003E"
    },
    "Products.Get.Api.V4.Product.ProductId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Get.Api.V4.Product.ProductId.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Product.ProductId.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Get.Api.V4.Product.ProductType.Integer": {
      "type": "Integer"
    },
    "Products.Get.Api.V4.Product.ReviewsPending.List.ReviewsPendingType": {
      "type": "List\u003CReviewsPendingType\u003E"
    },
    "Products.Get.Api.V4.Product.SKU.String": {
      "type": "String"
    },
    "Products.Get.Api.V4.Product.SalesChannel.List.String": {
      "type": "List\u003CString\u003E"
    },
    "Products.Get.Api.V4.Product.Search.String": {
      "type": "string"
    },
    "Products.Get.Api.V4.Product.SellerSKU.String": {
      "type": "String"
    },
    "Products.Get.Api.V4.Product.SortBy.String": {
      "type": "string"
    },
    "Products.Get.Api.V4.Product.SortOrder.String": {
      "type": "string"
    },
    "Products.Get.Api.V4.Product.TaxonomyIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.VariantId.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V4.Product.VariantStatus.String": {
      "type": "String"
    },
    "Products.Get.Api.V4.Taxonomy.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Id.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Id.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Products.Get.Api.V4.Taxonomy.Id.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Id.Parent.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Id.Parent.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Products.Get.Api.V4.Taxonomy.Id.Parent.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Id.Parent.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Id.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V4.Taxonomy.Search.String": {
      "type": "string"
    },
    "Products.Get.Api.V4.Taxonomy.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Product.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Get.Api.V5.Product.Barcode.Int": {
      "type": "Int"
    },
    "Products.Get.Api.V5.Product.CategoryIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.ChannelIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.HasDigitalVariants.Boolean": {
      "type": "Boolean"
    },
    "Products.Get.Api.V5.Product.HasVariants.Boolean": {
      "type": "Boolean"
    },
    "Products.Get.Api.V5.Product.InventoryId.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.LegacyIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.Name.String": {
      "type": "String"
    },
    "Products.Get.Api.V5.Product.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Product.OnHand.Integer": {
      "type": "Integer"
    },
    "Products.Get.Api.V5.Product.PageSize.Int": {
      "type": "int"
    },
    "Products.Get.Api.V5.Product.PlatformIds.List.String": {
      "type": "List\u003CString\u003E"
    },
    "Products.Get.Api.V5.Product.ProductId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Get.Api.V5.Product.ProductId.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Product.ProductId.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Get.Api.V5.Product.ProductId.Variants.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Get.Api.V5.Product.ProductId.Variants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Product.ProductId.Variants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Get.Api.V5.Product.ProductType.Integer": {
      "type": "Integer"
    },
    "Products.Get.Api.V5.Product.ReviewsPending.List.ReviewsPendingType": {
      "type": "List\u003CReviewsPendingType\u003E"
    },
    "Products.Get.Api.V5.Product.SKU.String": {
      "type": "String"
    },
    "Products.Get.Api.V5.Product.SalesChannel.List.String": {
      "type": "List\u003CString\u003E"
    },
    "Products.Get.Api.V5.Product.Search.String": {
      "type": "string"
    },
    "Products.Get.Api.V5.Product.SellerSKU.String": {
      "type": "String"
    },
    "Products.Get.Api.V5.Product.SortBy.String": {
      "type": "string"
    },
    "Products.Get.Api.V5.Product.SortOrder.String": {
      "type": "string"
    },
    "Products.Get.Api.V5.Product.TaxonomyIds.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.VariantId.List.Int": {
      "type": "List\u003Cint\u003E"
    },
    "Products.Get.Api.V5.Product.VariantStatus.String": {
      "type": "String"
    },
    "Products.Get.Api.V5.Taxonomy.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Id.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Id.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Products.Get.Api.V5.Taxonomy.Id.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Id.Parent.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Id.Parent.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Products.Get.Api.V5.Taxonomy.Id.Parent.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Id.Parent.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Id.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Get.Api.V5.Taxonomy.Search.String": {
      "type": "string"
    },
    "Products.Get.Api.V5.Taxonomy.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.HttpValidationProblemDetails": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object"
        }
      }
    },
    "Products.InventoryViewModel": {
      "type": "object",
      "properties": {
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "on_hand_qty": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.LotInformationRequestModel": {
      "type": "object",
      "properties": {
        "is_lot": {
          "type": "boolean"
        },
        "minimum_shelf_life_days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.LotInformationViewModel": {
      "type": "object",
      "properties": {
        "is_lot": {
          "type": "boolean"
        },
        "minimum_shelf_life_days": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.MergeVariantRequestModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.MergeVariantRequestModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.MergeVariantRequestModel"
      }
    },
    "Products.MergedChildrenViewModel": {
      "type": "object",
      "properties": {
        "channel_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "completed_at": {
          "type": "string",
          "format": "date-time"
        },
        "inventory_id": {
          "type": "integer",
          "format": "int64"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64"
        },
        "variant_name": {
          "type": "string"
        }
      }
    },
    "Products.MigrateVariantRequestModel": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_category_id": {
          "type": "integer",
          "format": "int32"
        },
        "taxonomy_id": {
          "type": "integer",
          "format": "int32"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.VariantToMigrate"
          }
        }
      }
    },
    "Products.PackagingMaterialTypeViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Products.PackagingRequirementViewModel": {
      "type": "object",
      "properties": {
        "applicable_categories": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.ApplicableCategoryViewModel"
          }
        },
        "applicable_packaging_material_types": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.PackagingMaterialTypeViewModel"
          }
        },
        "applicable_taxonomy": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Products.PackagingRequirementViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.PackagingRequirementViewModel"
      }
    },
    "Products.Patch.Api.V4.Product.ProductId.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Patch.Api.V4.Product.ProductId.Variants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Patch.Api.V5.Product.ProductId.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Patch.Api.V5.Product.ProductId.Variants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V2.Variant.VariantId.Channel.Metadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel": {

    },
    "Products.Post.Api.V2.Variant.VariantId.Channel.Metadata.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V2.Variant.VariantId.ConvertToBundle.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V2.Variant.VariantId.Merge.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V4.Product.MoveVariants.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Post.Api.V4.Product.MoveVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Post.Api.V4.Product.ProductId.MoveVariants.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Post.Api.V4.Product.ProductId.MoveVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Post.Api.V4.Product.ProductId.MoveVariants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V4.Product.ProductId.Variants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V5.Product.MoveVariants.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Post.Api.V5.Product.MoveVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Post.Api.V5.Product.ProductId.MoveVariants.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Post.Api.V5.Product.ProductId.MoveVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Post.Api.V5.Product.ProductId.MoveVariants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V5.Product.ProductId.Variants.ProductId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V5.Variant.VariantId.Channel.Metadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel": {

    },
    "Products.Post.Api.V5.Variant.VariantId.Channel.Metadata.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V5.Variant.VariantId.ConvertToBundle.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Post.Api.V5.Variant.VariantId.Merge.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.ProblemDetails": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Products.ProductChannelMetadataModel": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "integer",
          "format": "int64"
        },
        "channel_name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_inventory_sync_enabled": {
          "type": "boolean"
        },
        "legacy_product_id": {
          "type": "integer",
          "format": "int64"
        },
        "platform": {
          "type": "string"
        },
        "platform_identifier": {
          "type": "string"
        },
        "platform_inventory_item_id": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "seller_sku": {
          "type": "string"
        }
      }
    },
    "Products.ProductViewModel": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "sub_category": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "taxonomy": {
          "$ref": "#/components/schemas/Products.TaxonomyInformationViewModel"
        },
        "type": {
          "type": "string"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.VariantViewModel"
          }
        }
      }
    },
    "Products.ProductViewModelPagedResponse": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.ProductViewModel"
          }
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "Products.ProductViewModelV5": {
      "type": "object",
      "properties": {
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "taxonomy": {
          "$ref": "#/components/schemas/Products.TaxonomyInformationViewModel"
        },
        "type": {
          "type": "string"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.VariantViewModelV5"
          }
        }
      }
    },
    "Products.ProductViewModelV5PagedResponse": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.ProductViewModelV5"
          }
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.ChannelMetadataId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel": {

    },
    "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object": {
      "type": "object"
    },
    "Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.ChannelMetadataId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {

    },
    "Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel": {

    },
    "Products.Put.Api.V5.Variant.VariantId.Channel.Metadata.ChannelMetadataId.VariantId.Integer": {
      "type": "integer",
      "format": "int64"
    },
    "Products.ReturnPreferencesRequestModel": {
      "type": "object",
      "properties": {
        "backup_action_id": {
          "type": "integer",
          "format": "int32"
        },
        "instructions": {
          "type": "string"
        },
        "primary_action_id": {
          "type": "integer",
          "format": "int32"
        },
        "return_to_sender_backup_action_id": {
          "type": "integer",
          "format": "int32"
        },
        "return_to_sender_primary_action_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Products.ReturnPreferencesViewModel": {
      "type": "object",
      "properties": {
        "backup_action": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "instructions": {
          "type": "string"
        },
        "primary_action": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "return_to_sender_backup_action": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "return_to_sender_primary_action": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        }
      }
    },
    "Products.ReviewsPendingType": {
      "type": "integer",
      "format": "int32"
    },
    "Products.SerialScanRequestModel": {
      "type": "object",
      "properties": {
        "exact_character_length": {
          "type": "integer",
          "format": "int32"
        },
        "is_enabled": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      }
    },
    "Products.SerialScanViewModel": {
      "type": "object",
      "properties": {
        "exact_character_length": {
          "type": "integer",
          "format": "int32"
        },
        "is_enabled": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      }
    },
    "Products.ShopifyChannelMetadataRequestModel": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string"
        }
      }
    },
    "Products.ShopifyChannelMetadataViewModel": {
      "type": "object"
    },
    "Products.ShopifyProductChannelMetadataModel": {
      "type": "object"
    },
    "Products.TaxonomyInformationViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parent_id": {
          "type": "integer",
          "format": "int32"
        },
        "parent_name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "Products.TaxonomyViewModel": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.ChildTaxonomyViewModel"
          }
        },
        "parent": {

        }
      }
    },
    "Products.TaxonomyViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.TaxonomyViewModel"
      }
    },
    "Products.UpdateProductRequestModelV3": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.UpdateProductVariantRequestModelV3"
          }
        }
      }
    },
    "Products.UpdateProductRequestModelV5": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.UpdateProductVariantRequestModelV5"
          }
        }
      }
    },
    "Products.UpdateProductVariantModelV5": {
      "type": "object",
      "properties": {
        "barcodes": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BarcodeModel"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.UpdateProductVariantRequestModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.UpdateProductVariantRequestModelV3": {
      "type": "object",
      "properties": {
        "barcode_sticker_url": {
          "type": "string"
        }
      }
    },
    "Products.UpdateProductVariantRequestModelV5": {
      "type": "object",
      "properties": {
        "barcodes": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BarcodeRequestModel"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Products.VariantStatus": {
      "type": "integer",
      "format": "int32"
    },
    "Products.VariantToMigrate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Products.VariantViewModel": {
      "type": "object",
      "properties": {
        "barcode": {
          "type": "string"
        },
        "barcode_sticker_url": {
          "type": "string"
        },
        "channel_metadata": {
          "type": "array",
          "items": {

          }
        }
      }
    },
    "Products.VariantViewModelArray": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.VariantViewModel"
      }
    },
    "Products.VariantViewModelBase": {
      "type": "object",
      "properties": {
        "additional_hazmat_attributes": {
          "$ref": "#/components/schemas/Products.AdditionalHazmatAttributesViewModel"
        },
        "associated_bundles": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.AssociatedBundlesViewModel"
          }
        },
        "bundle_definition": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BundleDefinitionViewModel"
          }
        },
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "customs": {
          "$ref": "#/components/schemas/Products.CustomsViewModel"
        },
        "dimension": {
          "$ref": "#/components/schemas/Products.DimensionViewModel"
        },
        "fulfillment_settings": {
          "$ref": "#/components/schemas/Products.FulfillmentSettingsViewModel"
        },
        "gtin": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "inventory": {
          "$ref": "#/components/schemas/Products.InventoryViewModel"
        },
        "is_digital": {
          "type": "boolean"
        },
        "is_image_uploaded": {
          "type": "boolean"
        },
        "lot_information": {
          "$ref": "#/components/schemas/Products.LotInformationViewModel"
        },
        "merge_children": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.MergedChildrenViewModel"
          }
        },
        "name": {
          "type": "string"
        },
        "packaging_material_type": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "packaging_requirement": {
          "$ref": "#/components/schemas/Products.EnumViewModel"
        },
        "return_preferences": {
          "$ref": "#/components/schemas/Products.ReturnPreferencesViewModel"
        },
        "reviews_pending": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sku": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "upc": {
          "type": "string"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time"
        },
        "weight": {
          "$ref": "#/components/schemas/Products.WeightViewModel"
        }
      }
    },
    "Products.VariantViewModelV5": {
      "type": "object",
      "properties": {
        "barcodes": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Products.BarcodeViewModel"
          }
        },
        "channel_metadata": {
          "type": "array",
          "items": {

          }
        }
      }
    },
    "Products.VariantViewModelV5Array": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Products.VariantViewModelV5"
      }
    },
    "Products.WeightViewModel": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Receiving.FulfillmentCenterViewModel": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "zip_code": {
          "type": "string"
        }
      }
    },
    "Receiving.PackageType": {
      "type": "string"
    },
    "Receiving.PackingType": {
      "type": "string"
    },
    "Receiving.Post.2.0.Receiving.Set.External.Sync.Bad.Request.Object": {
      "type": "object"
    },
    "Receiving.ProblemDetails": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Receiving.Put.Api.Receiving.Id.Tag.Authorization.String": {
      "type": "string"
    },
    "Receiving.Put.Api.Receiving.Id.Tag.Bad.Request.Object": {
      "type": "object"
    },
    "Receiving.Put.Api.Receiving.Id.Tag.Id.Integer": {
      "type": "integer",
      "format": "int32"
    },
    "Receiving.Put.Api.Receiving.Id.Tag.Not.Found.Object": {
      "type": "object"
    },
    "Receiving.ReceivingStatus": {
      "type": "string"
    },
    "Receiving.TagModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "Receiving.UpdateExternalSyncModel": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "is_external_sync": {
          "type": "boolean"
        }
      }
    },
    "Receiving.UpdateReceivingTagsRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Receiving.TagModel"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "Receiving.UpdateReceivingTagsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Receiving.TagModel"
          }
        },
        "total_records": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Receiving.V2.InventoryQuantityViewModel": {
      "type": "object",
      "properties": {
        "expected_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "inventory_id": {
          "type": "integer",
          "format": "int32"
        },
        "received_quantity": {
          "type": "integer",
          "format": "int32"
        },
        "sku": {
          "type": "string"
        },
        "stowed_quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Receiving.V2.WarehouseReceivingOrderViewModel": {
      "type": "object",
      "properties": {
        "box_labels_uri": {
          "type": "string"
        },
        "box_packaging_type": {
          "$ref": "#/components/schemas/Receiving.PackingType"
        },
        "expected_arrival_date": {
          "type": "string",
          "format": "date-time"
        },
        "external_sync_timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "fulfillment_center": {
          "$ref": "#/components/schemas/Receiving.FulfillmentCenterViewModel"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "insert_date": {
          "type": "string",
          "format": "date-time"
        },
        "inventory_quantities": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Receiving.V2.InventoryQuantityViewModel"
          }
        },
        "last_updated_date": {
          "type": "string",
          "format": "date-time"
        },
        "package_type": {
          "$ref": "#/components/schemas/Receiving.PackageType"
        },
        "purchase_order_number": {
          "type": "string"
        },
        "status": {
          "$ref": "#/components/schemas/Receiving.ReceivingStatus"
        }
      }
    }
  },
  "securityDefinitions": {
    "PAT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer {your_personal_access_token}'",
      "x-bearerFormat": "JWT",
      "x-key-type": "Bearer"
    },
    "OAuth2": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "https://auth.example.com/oauth/token",
      "scopes": {
        "read": "Read access",
        "write": "Write access",
        "admin": "Admin access"
      },
      "description": "OAuth2 authentication using JWT tokens"
    }
  },
  "tags": []
}