{
  "openapi": "3.0.0",
  "info": {
    "title": "ShipBob Developer API (2.0)",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.shipbob.com/2.0/"
    },
    {
      "url": "https://sandbox-api.shipbob.com/2.0/"
    }
  ],
  "paths": {
    "/webhook": {
      "post": {
        "summary": "Create a new webhook subscription",
        "operationId": "72e0c2d956e31774c876c58c53e8dce0",
        "parameters": [
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Webhooks.WebhookViewModel"
                },
                "example": {
                  "application/json": {
                    "created_at": "2019-08-24T14:15:22Z",
                    "id": 12345,
                    "subscription_url": "http://example.com",
                    "topic": "order_shipped"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Webhooks.Post.1.0.Webhook.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Webhooks.Post.1.0.Webhook.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "webhooks.CreateWebhookSubscriptionModel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Webhooks.CreateWebhookSubscriptionModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Webhooks"
        ]
      },
      "get": {
        "summary": "Get Webhooks",
        "description": "All parameters are AND filters",
        "operationId": "e9181e4f0862d1d40e984035d6261bc9",
        "parameters": [
          {
            "name": "Topic",
            "in": "query",
            "description": "Topic of the webhooks requested",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page of Webhooks to get",
            "schema": {
              "type": "number",
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "additionalProperties": false
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Amount of Webhooks per page to request",
            "schema": {
              "type": "number",
              "format": "int32",
              "maximum": 250,
              "minimum": 1,
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Page-Number": {
                "description": "Number of the current page",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Total-Pages": {
                "description": "Total number of pages of results",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Total-Count": {
                "description": "Total number of results",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Page-Size": {
                "description": "Number of results per page",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Next-Page": {
                "description": "The href of the next page of results, if there is a next page",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Webhooks.WebhookViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "created_at": "2019-08-24T14:15:22Z",
                      "id": 12345,
                      "subscription_url": "http://example.com",
                      "topic": "order_shipped"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Webhooks.Get.1.0.Webhook.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhook/{id}": {
      "delete": {
        "summary": "Delete an existing webhook subscription",
        "operationId": "db62c75d5623351365b17c3d309b2745",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Webhooks.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "$type": "string",
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "extensions": {
                      "property1": {

                      },
                      "property2": {

                      }
                    },
                    "instance": "string",
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/order/{orderId}/shipment/{shipmentId}/cancel": {
      "post": {
        "summary": "Cancel one Shipment by Order Id and Shipment Id",
        "operationId": "3bc94b60cb23d76de794549b5af84198",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                },
                "example": {
                  "application/json": {
                    "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                    "created_date": "2019-08-24T14:15:22Z",
                    "delivery_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                    "gift_message": "string",
                    "id": 0,
                    "insurance_value": 0,
                    "invoice_amount": 0,
                    "invoice_currency_code": "string",
                    "is_tracking_uploaded": true,
                    "last_tracking_update_at": "2019-08-24T14:15:22Z",
                    "last_update_at": "2019-08-24T14:15:22Z",
                    "location": {
                      "id": 0,
                      "name": "Cicero (IL)"
                    },
                    "measurements": {
                      "depth_in": 0,
                      "length_in": 0,
                      "total_weight_oz": 0,
                      "width_in": 0
                    },
                    "order_id": 0,
                    "package_material_type": "Unknown",
                    "parent_cartons": [
                      {
                        "barcode": "string",
                        "cartons": [
                          {
                            "barcode": "string",
                            "carton_details": [
                              {
                                "products": [
                                  {
                                    "id": 0,
                                    "inventory_items": [
                                      {
                                        "expiration_date": "2019-08-24T14:15:22Z",
                                        "id": 0,
                                        "is_dangerous_goods": true,
                                        "lot": "22222",
                                        "name": "Medium Blue T-Shirt",
                                        "quantity": 0,
                                        "quantity_committed": 0,
                                        "serial_numbers": [
                                          "string"
                                        ]
                                      }
                                    ],
                                    "name": "Medium Blue T-Shirt",
                                    "reference_id": "TShirtBlueM",
                                    "sku": "TShirtBlueM"
                                  }
                                ]
                              }
                            ],
                            "id": 0,
                            "measurements": {
                              "depth_in": 0.1,
                              "length_in": 0.1,
                              "total_weight_oz": 0.1,
                              "width_in": 0.1
                            },
                            "type": "Box or pallet"
                          }
                        ],
                        "measurements": {
                          "depth_in": 0.1,
                          "length_in": 0.1,
                          "total_weight_oz": 0.1,
                          "width_in": 0.1
                        },
                        "type": "Box or pallet"
                      }
                    ],
                    "products": [
                      {
                        "id": 0,
                        "inventory_items": [
                          {
                            "expiration_date": "2019-08-24T14:15:22Z",
                            "id": 0,
                            "is_dangerous_goods": true,
                            "lot": "22222",
                            "name": "Medium Blue T-Shirt",
                            "quantity": 0,
                            "quantity_committed": 0,
                            "serial_numbers": [
                              "string"
                            ]
                          }
                        ],
                        "name": "Medium Blue T-Shirt",
                        "reference_id": "TShirtBlueM",
                        "sku": "TShirtBlueM"
                      }
                    ],
                    "recipient": {
                      "address": {
                        "address1": "100 Nowhere Blvd",
                        "address2": "Suite 100",
                        "city": "Gotham City",
                        "company_name": "Wayne Enterprises",
                        "country": "US",
                        "state": "NJ",
                        "zip_code": "07093"
                      },
                      "email": "john@example.com",
                      "full_name": "John Doe",
                      "name": "John Doe",
                      "phone_number": "555-555-5555"
                    },
                    "reference_id": "string",
                    "require_signature": true,
                    "ship_option": "Standard",
                    "status": "None",
                    "status_details": [
                      {
                        "description": "string",
                        "exception_fulfillment_center_id": 0,
                        "extra_information": {
                          "validation_messages": [
                            "string"
                          ]
                        },
                        "id": 0,
                        "inventory_id": 0,
                        "name": "string"
                      }
                    ],
                    "tracking": {
                      "bol": "string",
                      "carrier": "USPS",
                      "carrier_service": "Priority",
                      "pro_number": "string",
                      "scac": "string",
                      "shipping_date": "2019-08-24T14:15:22Z",
                      "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                      "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/estimate": {
      "post": {
        "summary": "Estimate Fulfillment Cost For Order",
        "description": "This endpoint will provide, where possible, an estimate of pricing and fulfillment center assignment of a potential standard (direct to consumer) order. Keep in mind that there are ways for the merchant to change FC assignment or product configuration after order creation that could invalidate this estimate. Estimates cannot be returned for items that are unknown, out of stock, or too large for fulfillment using standard box sizes. Additional services such as high-pick fees, shipping insurance, auto-splitting or auto-adding items to orders, and signature required are not included in this estimate.",
        "operationId": "77a8ea8828da55afca0929f5d8f0ba32",
        "parameters": [
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.EstimateViewModel"
                },
                "example": {
                  "application/json": {
                    "estimates": [
                      {
                        "estimated_currency_code": "string",
                        "estimated_price": 0.1,
                        "fulfillment_center": {
                          "id": 0,
                          "name": "Cicero (IL)"
                        },
                        "shipping_method": "string",
                        "total_weight_oz": 0.1
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.Estimate.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.Estimate.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "orders.EstimateFulfillmentRequestModel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.EstimateFulfillmentRequestModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shippingmethod": {
      "get": {
        "summary": "Get shipping methods",
        "description": "Get all merchants shipping methods",
        "operationId": "2024486cc9eff567290873743fa16fc9",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "description": "Page of orders to get",
            "schema": {
              "type": "number",
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 0,
              "additionalProperties": false
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Amount of records per page to request",
            "schema": {
              "type": "number",
              "format": "int32",
              "maximum": 250,
              "minimum": 1,
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.ShipMethodDetailViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "active": true,
                      "default": true,
                      "id": 0,
                      "name": "string",
                      "service_level": {
                        "id": 0,
                        "name": "string"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Shippingmethod.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Shippingmethod.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}/shipment/{shipmentId}": {
      "get": {
        "summary": "Get one Shipment by Order Id and Shipment Id",
        "operationId": "4a91e4ebbcfdf842cefb9a16c69cd278",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order id to get the shipment for",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                },
                "example": {
                  "application/json": {
                    "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                    "created_date": "2019-08-24T14:15:22Z",
                    "delivery_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                    "gift_message": "string",
                    "id": 0,
                    "insurance_value": 0,
                    "invoice_amount": 0,
                    "invoice_currency_code": "string",
                    "is_tracking_uploaded": true,
                    "last_tracking_update_at": "2019-08-24T14:15:22Z",
                    "last_update_at": "2019-08-24T14:15:22Z",
                    "location": {
                      "id": 0,
                      "name": "Cicero (IL)"
                    },
                    "measurements": {
                      "depth_in": 0,
                      "length_in": 0,
                      "total_weight_oz": 0,
                      "width_in": 0
                    },
                    "order_id": 0,
                    "package_material_type": "Unknown",
                    "parent_cartons": [
                      {
                        "barcode": "string",
                        "cartons": [
                          {
                            "barcode": "string",
                            "carton_details": [
                              {
                                "products": [
                                  {
                                    "id": 0,
                                    "inventory_items": [
                                      {
                                        "expiration_date": "2019-08-24T14:15:22Z",
                                        "id": 0,
                                        "is_dangerous_goods": true,
                                        "lot": "22222",
                                        "name": "Medium Blue T-Shirt",
                                        "quantity": 0,
                                        "quantity_committed": 0,
                                        "serial_numbers": [
                                          "string"
                                        ]
                                      }
                                    ],
                                    "name": "Medium Blue T-Shirt",
                                    "reference_id": "TShirtBlueM",
                                    "sku": "TShirtBlueM"
                                  }
                                ]
                              }
                            ],
                            "id": 0,
                            "measurements": {
                              "depth_in": 0.1,
                              "length_in": 0.1,
                              "total_weight_oz": 0.1,
                              "width_in": 0.1
                            },
                            "type": "Box or pallet"
                          }
                        ],
                        "measurements": {
                          "depth_in": 0.1,
                          "length_in": 0.1,
                          "total_weight_oz": 0.1,
                          "width_in": 0.1
                        },
                        "type": "Box or pallet"
                      }
                    ],
                    "products": [
                      {
                        "id": 0,
                        "inventory_items": [
                          {
                            "expiration_date": "2019-08-24T14:15:22Z",
                            "id": 0,
                            "is_dangerous_goods": true,
                            "lot": "22222",
                            "name": "Medium Blue T-Shirt",
                            "quantity": 0,
                            "quantity_committed": 0,
                            "serial_numbers": [
                              "string"
                            ]
                          }
                        ],
                        "name": "Medium Blue T-Shirt",
                        "reference_id": "TShirtBlueM",
                        "sku": "TShirtBlueM"
                      }
                    ],
                    "recipient": {
                      "address": {
                        "address1": "100 Nowhere Blvd",
                        "address2": "Suite 100",
                        "city": "Gotham City",
                        "company_name": "Wayne Enterprises",
                        "country": "US",
                        "state": "NJ",
                        "zip_code": "07093"
                      },
                      "email": "john@example.com",
                      "full_name": "John Doe",
                      "name": "John Doe",
                      "phone_number": "555-555-5555"
                    },
                    "reference_id": "string",
                    "require_signature": true,
                    "ship_option": "Standard",
                    "status": "None",
                    "status_details": [
                      {
                        "description": "string",
                        "exception_fulfillment_center_id": 0,
                        "extra_information": {
                          "validation_messages": [
                            "string"
                          ]
                        },
                        "id": 0,
                        "inventory_id": 0,
                        "name": "string"
                      }
                    ],
                    "tracking": {
                      "bol": "string",
                      "carrier": "USPS",
                      "carrier_service": "Priority",
                      "pro_number": "string",
                      "scac": "string",
                      "shipping_date": "2019-08-24T14:15:22Z",
                      "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                      "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order": {
      "post": {
        "summary": "Create Order",
        "operationId": "014d459354b1309064ac8ab6993c7394",
        "parameters": [
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.OrderViewModel"
                },
                "example": {
                  "application/json": {
                    "channel": {
                      "id": 0,
                      "name": "ShipBobs-Shopify-Store"
                    },
                    "created_date": "2019-08-24T14:15:22Z",
                    "financials": {
                      "total_price": 0.1
                    },
                    "gift_message": "string",
                    "id": 0,
                    "order_number": "string",
                    "products": [
                      {
                        "external_line_id": 0,
                        "gtin": "string",
                        "id": 0,
                        "quantity": 0,
                        "quantity_unit_of_measure_code": "string",
                        "reference_id": "TShirtBlueM",
                        "sku": "TShirtBlueM",
                        "unit_price": 0.1,
                        "upc": "string"
                      }
                    ],
                    "purchase_date": "2019-08-24T14:15:22Z",
                    "recipient": {
                      "address": {
                        "address1": "100 Nowhere Blvd",
                        "address2": "Suite 100",
                        "city": "Gotham City",
                        "company_name": "Wayne Enterprises",
                        "country": "US",
                        "state": "NJ",
                        "zip_code": "07093"
                      },
                      "email": "john@example.com",
                      "name": "John Doe",
                      "phone_number": "555-555-5555"
                    },
                    "reference_id": "string",
                    "retailer_program_data": {
                      "addresses": [
                        {
                          "address1": "100 Nowhere Blvd",
                          "address2": "Suite 100",
                          "city": "Gotham City",
                          "company_name": "Wayne Enterprises",
                          "country": "US",
                          "state": "NJ",
                          "type": "MarkFor",
                          "zip_code": "07093"
                        }
                      ],
                      "customer_ticket_number": "string",
                      "delivery_date": "2019-08-24T14:15:22Z",
                      "department": "string",
                      "doNotShipBeforeDate": "2019-08-24T14:15:22Z",
                      "mark_for_store": "string",
                      "purchase_order_number": "string",
                      "retailer_program_type": "string",
                      "shipByDate": "2019-08-24T14:15:22Z"
                    },
                    "shipments": [
                      {
                        "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                        "created_date": "2019-08-24T14:15:22Z",
                        "delivery_date": "2019-08-24T14:15:22Z",
                        "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                        "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                        "gift_message": "string",
                        "id": 0,
                        "insurance_value": 0,
                        "invoice_amount": 0,
                        "invoice_currency_code": "string",
                        "is_tracking_uploaded": true,
                        "last_tracking_update_at": "2019-08-24T14:15:22Z",
                        "last_update_at": "2019-08-24T14:15:22Z",
                        "location": {
                          "id": 0,
                          "name": "Cicero (IL)"
                        },
                        "measurements": {
                          "depth_in": 0,
                          "length_in": 0,
                          "total_weight_oz": 0,
                          "width_in": 0
                        },
                        "order_id": 0,
                        "package_material_type": "Unknown",
                        "parent_cartons": [
                          {
                            "barcode": "string",
                            "cartons": [
                              {
                                "barcode": "string",
                                "carton_details": [
                                  {
                                    "products": [
                                      {
                                        "id": 0,
                                        "inventory_items": [
                                          {
                                            "expiration_date": "2019-08-24T14:15:22Z",
                                            "id": 0,
                                            "is_dangerous_goods": true,
                                            "lot": "22222",
                                            "name": "Medium Blue T-Shirt",
                                            "quantity": 0,
                                            "quantity_committed": 0,
                                            "serial_numbers": [
                                              "string"
                                            ]
                                          }
                                        ],
                                        "name": "Medium Blue T-Shirt",
                                        "reference_id": "TShirtBlueM",
                                        "sku": "TShirtBlueM"
                                      }
                                    ]
                                  }
                                ],
                                "id": 0,
                                "measurements": {
                                  "depth_in": 0.1,
                                  "length_in": 0.1,
                                  "total_weight_oz": 0.1,
                                  "width_in": 0.1
                                },
                                "type": "Box or pallet"
                              }
                            ],
                            "measurements": {
                              "depth_in": 0.1,
                              "length_in": 0.1,
                              "total_weight_oz": 0.1,
                              "width_in": 0.1
                            },
                            "type": "Box or pallet"
                          }
                        ],
                        "products": [
                          {
                            "id": 0,
                            "inventory_items": [
                              {
                                "expiration_date": "2019-08-24T14:15:22Z",
                                "id": 0,
                                "is_dangerous_goods": true,
                                "lot": "22222",
                                "name": "Medium Blue T-Shirt",
                                "quantity": 0,
                                "quantity_committed": 0,
                                "serial_numbers": [
                                  "string"
                                ]
                              }
                            ],
                            "name": "Medium Blue T-Shirt",
                            "reference_id": "TShirtBlueM",
                            "sku": "TShirtBlueM"
                          }
                        ],
                        "recipient": {
                          "address": {
                            "address1": "100 Nowhere Blvd",
                            "address2": "Suite 100",
                            "city": "Gotham City",
                            "company_name": "Wayne Enterprises",
                            "country": "US",
                            "state": "NJ",
                            "zip_code": "07093"
                          },
                          "email": "john@example.com",
                          "full_name": "John Doe",
                          "name": "John Doe",
                          "phone_number": "555-555-5555"
                        },
                        "reference_id": "string",
                        "require_signature": true,
                        "ship_option": "Standard",
                        "status": "None",
                        "status_details": [
                          {
                            "description": "string",
                            "exception_fulfillment_center_id": 0,
                            "extra_information": {
                              "validation_messages": [
                                "string"
                              ]
                            },
                            "id": 0,
                            "inventory_id": 0,
                            "name": "string"
                          }
                        ],
                        "tracking": {
                          "bol": "string",
                          "carrier": "USPS",
                          "carrier_service": "Priority",
                          "pro_number": "string",
                          "scac": "string",
                          "shipping_date": "2019-08-24T14:15:22Z",
                          "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                          "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                        }
                      }
                    ],
                    "shipping_method": "Free 2-day Shipping",
                    "shipping_terms": {
                      "carrier_type": "Parcel",
                      "payment_term": "Collect"
                    },
                    "status": "Processing",
                    "tags": [
                      {
                        "name": "Handling instructions",
                        "value": "Fragile"
                      }
                    ],
                    "type": "DTC"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "orders.CreateOrderModel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.CreateOrderModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "summary": "Get Orders",
        "description": "All parameters are AND filters",
        "operationId": "b104a65e90eefe2b42929142ce7c1b99",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "description": "Page of orders to get",
            "schema": {
              "type": "number",
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 1,
              "additionalProperties": false
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Amount of orders per page to request",
            "schema": {
              "type": "number",
              "format": "int32",
              "maximum": 250,
              "minimum": 1,
              "additionalProperties": false
            }
          },
          {
            "name": "IDs",
            "in": "query",
            "description": "order ids to filter by, comma separated \u003Cbr /\u003E\u003Cstrong\u003EExample:\u003C/strong\u003E ?IDs=1,2",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "ReferenceIds",
            "in": "query",
            "description": "Reference ids to filter by, comma separated \u003Cbr /\u003E\u003Cstrong\u003EExample:\u003C/strong\u003E ?ReferenceIds=Ref1,Ref2",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to filter orders inserted later than",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to filter orders inserted earlier than",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "Order to sort results in",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "HasTracking",
            "in": "query",
            "description": "Has any portion of this order been assigned a tracking number",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "LastUpdateStartDate",
            "in": "query",
            "description": "Start date to filter orders updated later than",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "LastUpdateEndDate",
            "in": "query",
            "description": "End date to filter orders updated later than",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "IsTrackingUploaded",
            "in": "query",
            "description": "Filter orders that their tracking information was fully uploaded",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "LastTrackingUpdateStartDate",
            "in": "query",
            "description": "Start date to filter orders with tracking updates later than the supplied date. Will only return orders that have tracking information",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "LastTrackingUpdateEndDate",
            "in": "query",
            "description": "End date to filter orders updated later than the supplied date. Will only return orders that have tracking information",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.OrderViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "channel": {
                        "id": 0,
                        "name": "ShipBobs-Shopify-Store"
                      },
                      "created_date": "2019-08-24T14:15:22Z",
                      "financials": {
                        "total_price": 0.1
                      },
                      "gift_message": "string",
                      "id": 0,
                      "order_number": "string",
                      "products": [
                        {
                          "external_line_id": 0,
                          "gtin": "string",
                          "id": 0,
                          "quantity": 0,
                          "quantity_unit_of_measure_code": "string",
                          "reference_id": "TShirtBlueM",
                          "sku": "TShirtBlueM",
                          "unit_price": 0.1,
                          "upc": "string"
                        }
                      ],
                      "purchase_date": "2019-08-24T14:15:22Z",
                      "recipient": {
                        "address": {
                          "address1": "100 Nowhere Blvd",
                          "address2": "Suite 100",
                          "city": "Gotham City",
                          "company_name": "Wayne Enterprises",
                          "country": "US",
                          "state": "NJ",
                          "zip_code": "07093"
                        },
                        "email": "john@example.com",
                        "name": "John Doe",
                        "phone_number": "555-555-5555"
                      },
                      "reference_id": "string",
                      "retailer_program_data": {
                        "addresses": [
                          {
                            "address1": "100 Nowhere Blvd",
                            "address2": "Suite 100",
                            "city": "Gotham City",
                            "company_name": "Wayne Enterprises",
                            "country": "US",
                            "state": "NJ",
                            "type": "MarkFor",
                            "zip_code": "07093"
                          }
                        ],
                        "customer_ticket_number": "string",
                        "delivery_date": "2019-08-24T14:15:22Z",
                        "department": "string",
                        "doNotShipBeforeDate": "2019-08-24T14:15:22Z",
                        "mark_for_store": "string",
                        "purchase_order_number": "string",
                        "retailer_program_type": "string",
                        "shipByDate": "2019-08-24T14:15:22Z"
                      },
                      "shipments": [
                        {
                          "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                          "created_date": "2019-08-24T14:15:22Z",
                          "delivery_date": "2019-08-24T14:15:22Z",
                          "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                          "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                          "gift_message": "string",
                          "id": 0,
                          "insurance_value": 0,
                          "invoice_amount": 0,
                          "invoice_currency_code": "string",
                          "is_tracking_uploaded": true,
                          "last_tracking_update_at": "2019-08-24T14:15:22Z",
                          "last_update_at": "2019-08-24T14:15:22Z",
                          "location": {
                            "id": 0,
                            "name": "Cicero (IL)"
                          },
                          "measurements": {
                            "depth_in": 0,
                            "length_in": 0,
                            "total_weight_oz": 0,
                            "width_in": 0
                          },
                          "order_id": 0,
                          "package_material_type": "Unknown",
                          "parent_cartons": [
                            {
                              "barcode": "string",
                              "cartons": [
                                {
                                  "barcode": "string",
                                  "carton_details": [
                                    {
                                      "products": [
                                        {
                                          "id": 0,
                                          "inventory_items": [
                                            {
                                              "expiration_date": "2019-08-24T14:15:22Z",
                                              "id": 0,
                                              "is_dangerous_goods": true,
                                              "lot": "22222",
                                              "name": "Medium Blue T-Shirt",
                                              "quantity": 0,
                                              "quantity_committed": 0,
                                              "serial_numbers": [null]
                                            }
                                          ],
                                          "name": "Medium Blue T-Shirt",
                                          "reference_id": "TShirtBlueM",
                                          "sku": "TShirtBlueM"
                                        }
                                      ]
                                    }
                                  ],
                                  "id": 0,
                                  "measurements": {
                                    "depth_in": 0.1,
                                    "length_in": 0.1,
                                    "total_weight_oz": 0.1,
                                    "width_in": 0.1
                                  },
                                  "type": "Box or pallet"
                                }
                              ],
                              "measurements": {
                                "depth_in": 0.1,
                                "length_in": 0.1,
                                "total_weight_oz": 0.1,
                                "width_in": 0.1
                              },
                              "type": "Box or pallet"
                            }
                          ],
                          "products": [
                            {
                              "id": 0,
                              "inventory_items": [
                                {
                                  "expiration_date": "2019-08-24T14:15:22Z",
                                  "id": 0,
                                  "is_dangerous_goods": true,
                                  "lot": "22222",
                                  "name": "Medium Blue T-Shirt",
                                  "quantity": 0,
                                  "quantity_committed": 0,
                                  "serial_numbers": [
                                    "string"
                                  ]
                                }
                              ],
                              "name": "Medium Blue T-Shirt",
                              "reference_id": "TShirtBlueM",
                              "sku": "TShirtBlueM"
                            }
                          ],
                          "recipient": {
                            "address": {
                              "address1": "100 Nowhere Blvd",
                              "address2": "Suite 100",
                              "city": "Gotham City",
                              "company_name": "Wayne Enterprises",
                              "country": "US",
                              "state": "NJ",
                              "zip_code": "07093"
                            },
                            "email": "john@example.com",
                            "full_name": "John Doe",
                            "name": "John Doe",
                            "phone_number": "555-555-5555"
                          },
                          "reference_id": "string",
                          "require_signature": true,
                          "ship_option": "Standard",
                          "status": "None",
                          "status_details": [
                            {
                              "description": "string",
                              "exception_fulfillment_center_id": 0,
                              "extra_information": {
                                "validation_messages": [
                                  "string"
                                ]
                              },
                              "id": 0,
                              "inventory_id": 0,
                              "name": "string"
                            }
                          ],
                          "tracking": {
                            "bol": "string",
                            "carrier": "USPS",
                            "carrier_service": "Priority",
                            "pro_number": "string",
                            "scac": "string",
                            "shipping_date": "2019-08-24T14:15:22Z",
                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                            "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                          }
                        }
                      ],
                      "shipping_method": "Free 2-day Shipping",
                      "shipping_terms": {
                        "carrier_type": "Parcel",
                        "payment_term": "Collect"
                      },
                      "status": "Processing",
                      "tags": [
                        {
                          "name": "Handling instructions",
                          "value": "Fragile"
                        }
                      ],
                      "type": "DTC"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}/cancel": {
      "post": {
        "summary": "Cancel single Order by Order ID",
        "operationId": "3a6639775d28e552e545761a24e90fab",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order ID to cancel",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "Channel ID for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.CanceledOrderViewModel"
                },
                "example": {
                  "application/json": {
                    "canceled_shipment_results": [
                      {
                        "action": "Cancel",
                        "is_success": true,
                        "reason": "string",
                        "shipment_id": 0
                      }
                    ],
                    "order": {
                      "channel": {
                        "id": 0,
                        "name": "ShipBobs-Shopify-Store"
                      },
                      "created_date": "2019-08-24T14:15:22Z",
                      "financials": {
                        "total_price": 0.1
                      },
                      "gift_message": "string",
                      "id": 0,
                      "order_number": "string",
                      "products": [
                        {
                          "external_line_id": 0,
                          "gtin": "string",
                          "id": 0,
                          "quantity": 0,
                          "quantity_unit_of_measure_code": "string",
                          "reference_id": "TShirtBlueM",
                          "sku": "TShirtBlueM",
                          "unit_price": 0.1,
                          "upc": "string"
                        }
                      ],
                      "purchase_date": "2019-08-24T14:15:22Z",
                      "recipient": {
                        "address": {
                          "address1": "100 Nowhere Blvd",
                          "address2": "Suite 100",
                          "city": "Gotham City",
                          "company_name": "Wayne Enterprises",
                          "country": "US",
                          "state": "NJ",
                          "zip_code": "07093"
                        },
                        "email": "john@example.com",
                        "name": "John Doe",
                        "phone_number": "555-555-5555"
                      },
                      "reference_id": "string",
                      "retailer_program_data": {
                        "addresses": [
                          {
                            "address1": "100 Nowhere Blvd",
                            "address2": "Suite 100",
                            "city": "Gotham City",
                            "company_name": "Wayne Enterprises",
                            "country": "US",
                            "state": "NJ",
                            "type": "MarkFor",
                            "zip_code": "07093"
                          }
                        ],
                        "customer_ticket_number": "string",
                        "delivery_date": "2019-08-24T14:15:22Z",
                        "department": "string",
                        "doNotShipBeforeDate": "2019-08-24T14:15:22Z",
                        "mark_for_store": "string",
                        "purchase_order_number": "string",
                        "retailer_program_type": "string",
                        "shipByDate": "2019-08-24T14:15:22Z"
                      },
                      "shipments": [
                        {
                          "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                          "created_date": "2019-08-24T14:15:22Z",
                          "delivery_date": "2019-08-24T14:15:22Z",
                          "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                          "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                          "gift_message": "string",
                          "id": 0,
                          "insurance_value": 0,
                          "invoice_amount": 0,
                          "invoice_currency_code": "string",
                          "is_tracking_uploaded": true,
                          "last_tracking_update_at": "2019-08-24T14:15:22Z",
                          "last_update_at": "2019-08-24T14:15:22Z",
                          "location": {
                            "id": 0,
                            "name": "Cicero (IL)"
                          },
                          "measurements": {
                            "depth_in": 0,
                            "length_in": 0,
                            "total_weight_oz": 0,
                            "width_in": 0
                          },
                          "order_id": 0,
                          "package_material_type": "Unknown",
                          "parent_cartons": [
                            {
                              "barcode": "string",
                              "cartons": [
                                {
                                  "barcode": "string",
                                  "carton_details": [
                                    {
                                      "products": [
                                        {
                                          "id": 0,
                                          "inventory_items": [
                                            {
                                              "expiration_date": "2019-08-24T14:15:22Z",
                                              "id": 0,
                                              "is_dangerous_goods": true,
                                              "lot": "22222",
                                              "name": "Medium Blue T-Shirt",
                                              "quantity": 0,
                                              "quantity_committed": 0,
                                              "serial_numbers": [null]
                                            }
                                          ],
                                          "name": "Medium Blue T-Shirt",
                                          "reference_id": "TShirtBlueM",
                                          "sku": "TShirtBlueM"
                                        }
                                      ]
                                    }
                                  ],
                                  "id": 0,
                                  "measurements": {
                                    "depth_in": 0.1,
                                    "length_in": 0.1,
                                    "total_weight_oz": 0.1,
                                    "width_in": 0.1
                                  },
                                  "type": "Box or pallet"
                                }
                              ],
                              "measurements": {
                                "depth_in": 0.1,
                                "length_in": 0.1,
                                "total_weight_oz": 0.1,
                                "width_in": 0.1
                              },
                              "type": "Box or pallet"
                            }
                          ],
                          "products": [
                            {
                              "id": 0,
                              "inventory_items": [
                                {
                                  "expiration_date": "2019-08-24T14:15:22Z",
                                  "id": 0,
                                  "is_dangerous_goods": true,
                                  "lot": "22222",
                                  "name": "Medium Blue T-Shirt",
                                  "quantity": 0,
                                  "quantity_committed": 0,
                                  "serial_numbers": [
                                    "string"
                                  ]
                                }
                              ],
                              "name": "Medium Blue T-Shirt",
                              "reference_id": "TShirtBlueM",
                              "sku": "TShirtBlueM"
                            }
                          ],
                          "recipient": {
                            "address": {
                              "address1": "100 Nowhere Blvd",
                              "address2": "Suite 100",
                              "city": "Gotham City",
                              "company_name": "Wayne Enterprises",
                              "country": "US",
                              "state": "NJ",
                              "zip_code": "07093"
                            },
                            "email": "john@example.com",
                            "full_name": "John Doe",
                            "name": "John Doe",
                            "phone_number": "555-555-5555"
                          },
                          "reference_id": "string",
                          "require_signature": true,
                          "ship_option": "Standard",
                          "status": "None",
                          "status_details": [
                            {
                              "description": "string",
                              "exception_fulfillment_center_id": 0,
                              "extra_information": {
                                "validation_messages": [
                                  "string"
                                ]
                              },
                              "id": 0,
                              "inventory_id": 0,
                              "name": "string"
                            }
                          ],
                          "tracking": {
                            "bol": "string",
                            "carrier": "USPS",
                            "carrier_service": "Priority",
                            "pro_number": "string",
                            "scac": "string",
                            "shipping_date": "2019-08-24T14:15:22Z",
                            "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                            "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                          }
                        }
                      ],
                      "shipping_method": "Free 2-day Shipping",
                      "shipping_terms": {
                        "carrier_type": "Parcel",
                        "payment_term": "Collect"
                      },
                      "status": "Processing",
                      "tags": [
                        {
                          "name": "Handling instructions",
                          "value": "Fragile"
                        }
                      ],
                      "type": "DTC"
                    },
                    "order_id": 0,
                    "status": "Success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.Cancel.Internal.Server.Error.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}/shipment": {
      "get": {
        "summary": "Get all Shipments for Order",
        "operationId": "1e0815dcfb1c817c448dfd569dbe8c21",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order id to get shipments for",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.OK.OneOfArray"
                },
                "example": {
                  "application/json": [
                    {
                      "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                      "created_date": "2019-08-24T14:15:22Z",
                      "delivery_date": "2019-08-24T14:15:22Z",
                      "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                      "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                      "gift_message": "string",
                      "id": 0,
                      "insurance_value": 0,
                      "invoice_amount": 0,
                      "invoice_currency_code": "string",
                      "is_tracking_uploaded": true,
                      "last_tracking_update_at": "2019-08-24T14:15:22Z",
                      "last_update_at": "2019-08-24T14:15:22Z",
                      "location": {
                        "id": 0,
                        "name": "Cicero (IL)"
                      },
                      "measurements": {
                        "depth_in": 0,
                        "length_in": 0,
                        "total_weight_oz": 0,
                        "width_in": 0
                      },
                      "order_id": 0,
                      "package_material_type": "Unknown",
                      "parent_cartons": [
                        {
                          "barcode": "string",
                          "cartons": [
                            {
                              "barcode": "string",
                              "carton_details": [
                                {
                                  "products": [
                                    {
                                      "id": 0,
                                      "inventory_items": [
                                        {
                                          "expiration_date": "2019-08-24T14:15:22Z",
                                          "id": 0,
                                          "is_dangerous_goods": true,
                                          "lot": "22222",
                                          "name": "Medium Blue T-Shirt",
                                          "quantity": 0,
                                          "quantity_committed": 0,
                                          "serial_numbers": [
                                            "string"
                                          ]
                                        }
                                      ],
                                      "name": "Medium Blue T-Shirt",
                                      "reference_id": "TShirtBlueM",
                                      "sku": "TShirtBlueM"
                                    }
                                  ]
                                }
                              ],
                              "id": 0,
                              "measurements": {
                                "depth_in": 0.1,
                                "length_in": 0.1,
                                "total_weight_oz": 0.1,
                                "width_in": 0.1
                              },
                              "type": "Box or pallet"
                            }
                          ],
                          "measurements": {
                            "depth_in": 0.1,
                            "length_in": 0.1,
                            "total_weight_oz": 0.1,
                            "width_in": 0.1
                          },
                          "type": "Box or pallet"
                        }
                      ],
                      "products": [
                        {
                          "id": 0,
                          "inventory_items": [
                            {
                              "expiration_date": "2019-08-24T14:15:22Z",
                              "id": 0,
                              "is_dangerous_goods": true,
                              "lot": "22222",
                              "name": "Medium Blue T-Shirt",
                              "quantity": 0,
                              "quantity_committed": 0,
                              "serial_numbers": [
                                "string"
                              ]
                            }
                          ],
                          "name": "Medium Blue T-Shirt",
                          "reference_id": "TShirtBlueM",
                          "sku": "TShirtBlueM"
                        }
                      ],
                      "recipient": {
                        "address": {
                          "address1": "100 Nowhere Blvd",
                          "address2": "Suite 100",
                          "city": "Gotham City",
                          "company_name": "Wayne Enterprises",
                          "country": "US",
                          "state": "NJ",
                          "zip_code": "07093"
                        },
                        "email": "john@example.com",
                        "full_name": "John Doe",
                        "name": "John Doe",
                        "phone_number": "555-555-5555"
                      },
                      "reference_id": "string",
                      "require_signature": true,
                      "ship_option": "Standard",
                      "status": "None",
                      "status_details": [
                        {
                          "description": "string",
                          "exception_fulfillment_center_id": 0,
                          "extra_information": {
                            "validation_messages": [
                              "string"
                            ]
                          },
                          "id": 0,
                          "inventory_id": 0,
                          "name": "string"
                        }
                      ],
                      "tracking": {
                        "bol": "string",
                        "carrier": "USPS",
                        "carrier_service": "Priority",
                        "pro_number": "string",
                        "scac": "string",
                        "shipping_date": "2019-08-24T14:15:22Z",
                        "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                        "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shipment/{shipmentId}/cancel": {
      "post": {
        "summary": "Cancel one Shipment by Shipment Id",
        "operationId": "45f79207b988587991d84f65bd5f823f",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                },
                "example": {
                  "application/json": {
                    "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                    "created_date": "2019-08-24T14:15:22Z",
                    "delivery_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                    "gift_message": "string",
                    "id": 0,
                    "insurance_value": 0,
                    "invoice_amount": 0,
                    "invoice_currency_code": "string",
                    "is_tracking_uploaded": true,
                    "last_tracking_update_at": "2019-08-24T14:15:22Z",
                    "last_update_at": "2019-08-24T14:15:22Z",
                    "location": {
                      "id": 0,
                      "name": "Cicero (IL)"
                    },
                    "measurements": {
                      "depth_in": 0,
                      "length_in": 0,
                      "total_weight_oz": 0,
                      "width_in": 0
                    },
                    "order_id": 0,
                    "package_material_type": "Unknown",
                    "parent_cartons": [
                      {
                        "barcode": "string",
                        "cartons": [
                          {
                            "barcode": "string",
                            "carton_details": [
                              {
                                "products": [
                                  {
                                    "id": 0,
                                    "inventory_items": [
                                      {
                                        "expiration_date": "2019-08-24T14:15:22Z",
                                        "id": 0,
                                        "is_dangerous_goods": true,
                                        "lot": "22222",
                                        "name": "Medium Blue T-Shirt",
                                        "quantity": 0,
                                        "quantity_committed": 0,
                                        "serial_numbers": [
                                          "string"
                                        ]
                                      }
                                    ],
                                    "name": "Medium Blue T-Shirt",
                                    "reference_id": "TShirtBlueM",
                                    "sku": "TShirtBlueM"
                                  }
                                ]
                              }
                            ],
                            "id": 0,
                            "measurements": {
                              "depth_in": 0.1,
                              "length_in": 0.1,
                              "total_weight_oz": 0.1,
                              "width_in": 0.1
                            },
                            "type": "Box or pallet"
                          }
                        ],
                        "measurements": {
                          "depth_in": 0.1,
                          "length_in": 0.1,
                          "total_weight_oz": 0.1,
                          "width_in": 0.1
                        },
                        "type": "Box or pallet"
                      }
                    ],
                    "products": [
                      {
                        "id": 0,
                        "inventory_items": [
                          {
                            "expiration_date": "2019-08-24T14:15:22Z",
                            "id": 0,
                            "is_dangerous_goods": true,
                            "lot": "22222",
                            "name": "Medium Blue T-Shirt",
                            "quantity": 0,
                            "quantity_committed": 0,
                            "serial_numbers": [
                              "string"
                            ]
                          }
                        ],
                        "name": "Medium Blue T-Shirt",
                        "reference_id": "TShirtBlueM",
                        "sku": "TShirtBlueM"
                      }
                    ],
                    "recipient": {
                      "address": {
                        "address1": "100 Nowhere Blvd",
                        "address2": "Suite 100",
                        "city": "Gotham City",
                        "company_name": "Wayne Enterprises",
                        "country": "US",
                        "state": "NJ",
                        "zip_code": "07093"
                      },
                      "email": "john@example.com",
                      "full_name": "John Doe",
                      "name": "John Doe",
                      "phone_number": "555-555-5555"
                    },
                    "reference_id": "string",
                    "require_signature": true,
                    "ship_option": "Standard",
                    "status": "None",
                    "status_details": [
                      {
                        "description": "string",
                        "exception_fulfillment_center_id": 0,
                        "extra_information": {
                          "validation_messages": [
                            "string"
                          ]
                        },
                        "id": 0,
                        "inventory_id": 0,
                        "name": "string"
                      }
                    ],
                    "tracking": {
                      "bol": "string",
                      "carrier": "USPS",
                      "carrier_service": "Priority",
                      "pro_number": "string",
                      "scac": "string",
                      "shipping_date": "2019-08-24T14:15:22Z",
                      "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                      "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}/storeOrderJson": {
      "post": {
        "summary": "Save the Store Order Json",
        "operationId": "09827e2d903cb474f73ccd9ce3498cb7",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order ID to Store",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.Created.String"
                },
                "example": {
                  "application/json": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "orders.AddStoreOrderJsonModel",
          "description": "The JSON that represent the order on the Third Party Source",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.AddStoreOrderJsonModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "summary": "Get Order Store Json",
        "operationId": "d39eda6d39c15939516450078b07ef5f",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order ID to Get the JSON Stored",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.OK.String"
                },
                "example": {
                  "application/json": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shipment/{shipmentId}": {
      "get": {
        "summary": "Get one Shipment by Shipment Id",
        "operationId": "8c8639205c363bf5fcc5b147c40ccfe5",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel"
                },
                "example": {
                  "application/json": {
                    "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                    "created_date": "2019-08-24T14:15:22Z",
                    "delivery_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                    "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                    "gift_message": "string",
                    "id": 0,
                    "insurance_value": 0,
                    "invoice_amount": 0,
                    "invoice_currency_code": "string",
                    "is_tracking_uploaded": true,
                    "last_tracking_update_at": "2019-08-24T14:15:22Z",
                    "last_update_at": "2019-08-24T14:15:22Z",
                    "location": {
                      "id": 0,
                      "name": "Cicero (IL)"
                    },
                    "measurements": {
                      "depth_in": 0,
                      "length_in": 0,
                      "total_weight_oz": 0,
                      "width_in": 0
                    },
                    "order_id": 0,
                    "package_material_type": "Unknown",
                    "parent_cartons": [
                      {
                        "barcode": "string",
                        "cartons": [
                          {
                            "barcode": "string",
                            "carton_details": [
                              {
                                "products": [
                                  {
                                    "id": 0,
                                    "inventory_items": [
                                      {
                                        "expiration_date": "2019-08-24T14:15:22Z",
                                        "id": 0,
                                        "is_dangerous_goods": true,
                                        "lot": "22222",
                                        "name": "Medium Blue T-Shirt",
                                        "quantity": 0,
                                        "quantity_committed": 0,
                                        "serial_numbers": [
                                          "string"
                                        ]
                                      }
                                    ],
                                    "name": "Medium Blue T-Shirt",
                                    "reference_id": "TShirtBlueM",
                                    "sku": "TShirtBlueM"
                                  }
                                ]
                              }
                            ],
                            "id": 0,
                            "measurements": {
                              "depth_in": 0.1,
                              "length_in": 0.1,
                              "total_weight_oz": 0.1,
                              "width_in": 0.1
                            },
                            "type": "Box or pallet"
                          }
                        ],
                        "measurements": {
                          "depth_in": 0.1,
                          "length_in": 0.1,
                          "total_weight_oz": 0.1,
                          "width_in": 0.1
                        },
                        "type": "Box or pallet"
                      }
                    ],
                    "products": [
                      {
                        "id": 0,
                        "inventory_items": [
                          {
                            "expiration_date": "2019-08-24T14:15:22Z",
                            "id": 0,
                            "is_dangerous_goods": true,
                            "lot": "22222",
                            "name": "Medium Blue T-Shirt",
                            "quantity": 0,
                            "quantity_committed": 0,
                            "serial_numbers": [
                              "string"
                            ]
                          }
                        ],
                        "name": "Medium Blue T-Shirt",
                        "reference_id": "TShirtBlueM",
                        "sku": "TShirtBlueM"
                      }
                    ],
                    "recipient": {
                      "address": {
                        "address1": "100 Nowhere Blvd",
                        "address2": "Suite 100",
                        "city": "Gotham City",
                        "company_name": "Wayne Enterprises",
                        "country": "US",
                        "state": "NJ",
                        "zip_code": "07093"
                      },
                      "email": "john@example.com",
                      "full_name": "John Doe",
                      "name": "John Doe",
                      "phone_number": "555-555-5555"
                    },
                    "reference_id": "string",
                    "require_signature": true,
                    "ship_option": "Standard",
                    "status": "None",
                    "status_details": [
                      {
                        "description": "string",
                        "exception_fulfillment_center_id": 0,
                        "extra_information": {
                          "validation_messages": [
                            "string"
                          ]
                        },
                        "id": 0,
                        "inventory_id": 0,
                        "name": "string"
                      }
                    ],
                    "tracking": {
                      "bol": "string",
                      "carrier": "USPS",
                      "carrier_service": "Priority",
                      "pro_number": "string",
                      "scac": "string",
                      "shipping_date": "2019-08-24T14:15:22Z",
                      "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                      "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "put": {
        "summary": "Update a Shipment",
        "operationId": "1426d06c67a3195a00a3b3251a178559",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The Shipment id to be updated",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Put.Api.Shipment.ShipmentId.OK.OneOfArray"
                },
                "example": {
                  "application/json": [
                    {
                      "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                      "created_date": "2019-08-24T14:15:22Z",
                      "delivery_date": "2019-08-24T14:15:22Z",
                      "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                      "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                      "gift_message": "string",
                      "id": 0,
                      "insurance_value": 0,
                      "invoice_amount": 0,
                      "invoice_currency_code": "string",
                      "is_tracking_uploaded": true,
                      "last_tracking_update_at": "2019-08-24T14:15:22Z",
                      "last_update_at": "2019-08-24T14:15:22Z",
                      "location": {
                        "id": 0,
                        "name": "Cicero (IL)"
                      },
                      "measurements": {
                        "depth_in": 0,
                        "length_in": 0,
                        "total_weight_oz": 0,
                        "width_in": 0
                      },
                      "order_id": 0,
                      "package_material_type": "Unknown",
                      "parent_cartons": [
                        {
                          "barcode": "string",
                          "cartons": [
                            {
                              "barcode": "string",
                              "carton_details": [
                                {
                                  "products": [
                                    {
                                      "id": 0,
                                      "inventory_items": [
                                        {
                                          "expiration_date": "2019-08-24T14:15:22Z",
                                          "id": 0,
                                          "is_dangerous_goods": true,
                                          "lot": "22222",
                                          "name": "Medium Blue T-Shirt",
                                          "quantity": 0,
                                          "quantity_committed": 0,
                                          "serial_numbers": [
                                            "string"
                                          ]
                                        }
                                      ],
                                      "name": "Medium Blue T-Shirt",
                                      "reference_id": "TShirtBlueM",
                                      "sku": "TShirtBlueM"
                                    }
                                  ]
                                }
                              ],
                              "id": 0,
                              "measurements": {
                                "depth_in": 0.1,
                                "length_in": 0.1,
                                "total_weight_oz": 0.1,
                                "width_in": 0.1
                              },
                              "type": "Box or pallet"
                            }
                          ],
                          "measurements": {
                            "depth_in": 0.1,
                            "length_in": 0.1,
                            "total_weight_oz": 0.1,
                            "width_in": 0.1
                          },
                          "type": "Box or pallet"
                        }
                      ],
                      "products": [
                        {
                          "id": 0,
                          "inventory_items": [
                            {
                              "expiration_date": "2019-08-24T14:15:22Z",
                              "id": 0,
                              "is_dangerous_goods": true,
                              "lot": "22222",
                              "name": "Medium Blue T-Shirt",
                              "quantity": 0,
                              "quantity_committed": 0,
                              "serial_numbers": [
                                "string"
                              ]
                            }
                          ],
                          "name": "Medium Blue T-Shirt",
                          "reference_id": "TShirtBlueM",
                          "sku": "TShirtBlueM"
                        }
                      ],
                      "recipient": {
                        "address": {
                          "address1": "100 Nowhere Blvd",
                          "address2": "Suite 100",
                          "city": "Gotham City",
                          "company_name": "Wayne Enterprises",
                          "country": "US",
                          "state": "NJ",
                          "zip_code": "07093"
                        },
                        "email": "john@example.com",
                        "full_name": "John Doe",
                        "name": "John Doe",
                        "phone_number": "555-555-5555"
                      },
                      "reference_id": "string",
                      "require_signature": true,
                      "ship_option": "Standard",
                      "status": "None",
                      "status_details": [
                        {
                          "description": "string",
                          "exception_fulfillment_center_id": 0,
                          "extra_information": {
                            "validation_messages": [
                              "string"
                            ]
                          },
                          "id": 0,
                          "inventory_id": 0,
                          "name": "string"
                        }
                      ],
                      "tracking": {
                        "bol": "string",
                        "carrier": "USPS",
                        "carrier_service": "Priority",
                        "pro_number": "string",
                        "scac": "string",
                        "shipping_date": "2019-08-24T14:15:22Z",
                        "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                        "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Put.Api.Shipment.ShipmentId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "x-name": "orders.UpdateShipmentModel",
          "description": "Shipment Information to be updated",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.UpdateShipmentModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shipment/{shipmentId}/logs": {
      "get": {
        "summary": "Get logs for one Shipment by Shipment Id",
        "operationId": "aefaa6a540d93e2dea0584a6fb69fad5",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "log_type_id": 0,
                      "log_type_name": "string",
                      "log_type_text": "string",
                      "metadata": {
                        "property1": "string",
                        "property2": "string"
                      },
                      "timestamp": "2019-08-24T14:15:22Z"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Logs.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shipment/cancelbulk": {
      "post": {
        "summary": "Cancel multiple Shipments by Shipment Id",
        "operationId": "d4ff930aa01d3593cec89c7a8959fe67",
        "parameters": [
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "Channel ID for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.CanceledShipmentsViewModel"
                },
                "example": {
                  "application/json": {
                    "results": [
                      {
                        "action": "Cancel",
                        "is_success": true,
                        "reason": "string",
                        "shipment_id": 0
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.Cancelbulk.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.Cancelbulk.Internal.Server.Error.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "orders.CancelShipmentsModel",
          "description": "The shipment IDs to cancel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.CancelShipmentsModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}/shipment/{shipmentId}/timeline": {
      "get": {
        "summary": "Get one Shipment's status timeline by Order Id and Shipment Id",
        "operationId": "46a877cb09f66372f7381c7086049150",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order id to get the shipment for",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "log_type_id": 0,
                      "log_type_name": "string",
                      "log_type_text": "string",
                      "metadata": {
                        "property1": "string",
                        "property2": "string"
                      },
                      "timestamp": "2019-08-24T14:15:22Z"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}": {
      "get": {
        "summary": "Get Order",
        "operationId": "ec2804df94cd56f5f33114c7b1475772",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.OrderViewModel"
                },
                "example": {
                  "application/json": {
                    "channel": {
                      "id": 0,
                      "name": "ShipBobs-Shopify-Store"
                    },
                    "created_date": "2019-08-24T14:15:22Z",
                    "financials": {
                      "total_price": 0.1
                    },
                    "gift_message": "string",
                    "id": 0,
                    "order_number": "string",
                    "products": [
                      {
                        "external_line_id": 0,
                        "gtin": "string",
                        "id": 0,
                        "quantity": 0,
                        "quantity_unit_of_measure_code": "string",
                        "reference_id": "TShirtBlueM",
                        "sku": "TShirtBlueM",
                        "unit_price": 0.1,
                        "upc": "string"
                      }
                    ],
                    "purchase_date": "2019-08-24T14:15:22Z",
                    "recipient": {
                      "address": {
                        "address1": "100 Nowhere Blvd",
                        "address2": "Suite 100",
                        "city": "Gotham City",
                        "company_name": "Wayne Enterprises",
                        "country": "US",
                        "state": "NJ",
                        "zip_code": "07093"
                      },
                      "email": "john@example.com",
                      "name": "John Doe",
                      "phone_number": "555-555-5555"
                    },
                    "reference_id": "string",
                    "retailer_program_data": {
                      "addresses": [
                        {
                          "address1": "100 Nowhere Blvd",
                          "address2": "Suite 100",
                          "city": "Gotham City",
                          "company_name": "Wayne Enterprises",
                          "country": "US",
                          "state": "NJ",
                          "type": "MarkFor",
                          "zip_code": "07093"
                        }
                      ],
                      "customer_ticket_number": "string",
                      "delivery_date": "2019-08-24T14:15:22Z",
                      "department": "string",
                      "doNotShipBeforeDate": "2019-08-24T14:15:22Z",
                      "mark_for_store": "string",
                      "purchase_order_number": "string",
                      "retailer_program_type": "string",
                      "shipByDate": "2019-08-24T14:15:22Z"
                    },
                    "shipments": [
                      {
                        "actual_fulfillment_date": "2019-08-24T14:15:22Z",
                        "created_date": "2019-08-24T14:15:22Z",
                        "delivery_date": "2019-08-24T14:15:22Z",
                        "estimated_fulfillment_date": "2019-08-24T14:15:22Z",
                        "estimated_fulfillment_date_status": "AwaitingInventoryAllocation",
                        "gift_message": "string",
                        "id": 0,
                        "insurance_value": 0,
                        "invoice_amount": 0,
                        "invoice_currency_code": "string",
                        "is_tracking_uploaded": true,
                        "last_tracking_update_at": "2019-08-24T14:15:22Z",
                        "last_update_at": "2019-08-24T14:15:22Z",
                        "location": {
                          "id": 0,
                          "name": "Cicero (IL)"
                        },
                        "measurements": {
                          "depth_in": 0,
                          "length_in": 0,
                          "total_weight_oz": 0,
                          "width_in": 0
                        },
                        "order_id": 0,
                        "package_material_type": "Unknown",
                        "parent_cartons": [
                          {
                            "barcode": "string",
                            "cartons": [
                              {
                                "barcode": "string",
                                "carton_details": [
                                  {
                                    "products": [
                                      {
                                        "id": 0,
                                        "inventory_items": [
                                          {
                                            "expiration_date": "2019-08-24T14:15:22Z",
                                            "id": 0,
                                            "is_dangerous_goods": true,
                                            "lot": "22222",
                                            "name": "Medium Blue T-Shirt",
                                            "quantity": 0,
                                            "quantity_committed": 0,
                                            "serial_numbers": [
                                              "string"
                                            ]
                                          }
                                        ],
                                        "name": "Medium Blue T-Shirt",
                                        "reference_id": "TShirtBlueM",
                                        "sku": "TShirtBlueM"
                                      }
                                    ]
                                  }
                                ],
                                "id": 0,
                                "measurements": {
                                  "depth_in": 0.1,
                                  "length_in": 0.1,
                                  "total_weight_oz": 0.1,
                                  "width_in": 0.1
                                },
                                "type": "Box or pallet"
                              }
                            ],
                            "measurements": {
                              "depth_in": 0.1,
                              "length_in": 0.1,
                              "total_weight_oz": 0.1,
                              "width_in": 0.1
                            },
                            "type": "Box or pallet"
                          }
                        ],
                        "products": [
                          {
                            "id": 0,
                            "inventory_items": [
                              {
                                "expiration_date": "2019-08-24T14:15:22Z",
                                "id": 0,
                                "is_dangerous_goods": true,
                                "lot": "22222",
                                "name": "Medium Blue T-Shirt",
                                "quantity": 0,
                                "quantity_committed": 0,
                                "serial_numbers": [
                                  "string"
                                ]
                              }
                            ],
                            "name": "Medium Blue T-Shirt",
                            "reference_id": "TShirtBlueM",
                            "sku": "TShirtBlueM"
                          }
                        ],
                        "recipient": {
                          "address": {
                            "address1": "100 Nowhere Blvd",
                            "address2": "Suite 100",
                            "city": "Gotham City",
                            "company_name": "Wayne Enterprises",
                            "country": "US",
                            "state": "NJ",
                            "zip_code": "07093"
                          },
                          "email": "john@example.com",
                          "full_name": "John Doe",
                          "name": "John Doe",
                          "phone_number": "555-555-5555"
                        },
                        "reference_id": "string",
                        "require_signature": true,
                        "ship_option": "Standard",
                        "status": "None",
                        "status_details": [
                          {
                            "description": "string",
                            "exception_fulfillment_center_id": 0,
                            "extra_information": {
                              "validation_messages": [
                                "string"
                              ]
                            },
                            "id": 0,
                            "inventory_id": 0,
                            "name": "string"
                          }
                        ],
                        "tracking": {
                          "bol": "string",
                          "carrier": "USPS",
                          "carrier_service": "Priority",
                          "pro_number": "string",
                          "scac": "string",
                          "shipping_date": "2019-08-24T14:15:22Z",
                          "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                          "tracking_url": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC"
                        }
                      }
                    ],
                    "shipping_method": "Free 2-day Shipping",
                    "shipping_terms": {
                      "carrier_type": "Parcel",
                      "payment_term": "Collect"
                    },
                    "status": "Processing",
                    "tags": [
                      {
                        "name": "Handling instructions",
                        "value": "Fragile"
                      }
                    ],
                    "type": "DTC"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shipment/{shipmentId}/timeline": {
      "get": {
        "summary": "Get one Shipment's status timeline by Shipment Id",
        "operationId": "92be75123ea13c356384d555d0863147",
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "log_type_id": 0,
                      "log_type_name": "string",
                      "log_type_text": "string",
                      "metadata": {
                        "property1": "string",
                        "property2": "string"
                      },
                      "timestamp": "2019-08-24T14:15:22Z"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Shipment.ShipmentId.Timeline.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/order/{orderId}/shipment/{shipmentId}/logs": {
      "get": {
        "summary": "Get logs for one Shipment by Order Id and Shipment Id",
        "operationId": "6930420ba86513c3cfa5f0af2ad98526",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "The order id to get the shipment for",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "description": "The shipment id to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.ShipmentLogViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "log_type_id": 0,
                      "log_type_name": "string",
                      "log_type_text": "string",
                      "metadata": {
                        "property1": "string",
                        "property2": "string"
                      },
                      "timestamp": "2019-08-24T14:15:22Z"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/location": {
      "get": {
        "summary": "Get locations\n",
        "operationId": "e2b9a3ad50680b3e2ab41cb8636790e4",
        "parameters": [
          {
            "name": "IncludeInactive",
            "in": "query",
            "description": "Whether the inactive locations should be included or not\n",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "ReceivingEnabled",
            "in": "query",
            "description": "Return all the receiving enabled locations\n",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "AccessGranted",
            "in": "query",
            "description": "Return all the access granted locations\n",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Locations.Get.1.0.Location.OK.OneOfArray"
                },
                "example": {
                  "application/json": [
                    {
                      "abbreviation": "string",
                      "access_granted": true,
                      "attributes": [
                        "string"
                      ],
                      "id": 0,
                      "is_active": true,
                      "is_receiving_enabled": true,
                      "is_shipping_enabled": true,
                      "name": "string",
                      "region": {
                        "id": 0,
                        "name": "string"
                      },
                      "services": [
                        {
                          "address": {
                            "address1": "string",
                            "address2": "string",
                            "city": "string",
                            "country": "string",
                            "email": "string",
                            "name": "string",
                            "phone_number": "string",
                            "state": "string",
                            "zip_code": "string"
                          },
                          "enabled": true,
                          "service_type": "Receiving"
                        }
                      ],
                      "timezone": "string"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/receiving": {
      "get": {
        "summary": "Get Multiple Warehouse Receiving Orders\n",
        "operationId": "10c13128d7c5683408869c462ab45747",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "description": "Page of WROs to get\n",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Number of WROs per page to request\n",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "IDs",
            "in": "query",
            "description": "Comma separated list of WRO IDs to filter by\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "Statuses",
            "in": "query",
            "description": "Comma separated list of WRO statuses to filter by\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Receiving.ReceivingStatus"
              }
            }
          },
          {
            "name": "InsertStartDate",
            "in": "query",
            "description": "Earliest date that a WRO was created\n",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "InsertEndDate",
            "in": "query",
            "description": "Latest date that a WRO was created\n",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "FulfillmentCenterIds",
            "in": "query",
            "description": "Comma separated list of WRO fulfillment center IDs to filter by\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "PurchaseOrderNumbers",
            "in": "query",
            "description": "Comma separated list of WRO PO numbers to filter by\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "ExternalSync",
            "in": "query",
            "description": "Flag to return external_sync_timestamp WROs\n",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Page-Number": {
                "description": "Number of the current page\n",
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "Total-Pages": {
                "description": "Total number of pages of results\n",
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "Total-Count": {
                "description": "Total number of results\n",
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "Page-Size": {
                "description": "Number of results per page\n",
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "Next-Page": {
                "description": "The href of the next page of results, if there is a next page\n",
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.V2.WarehouseReceivingOrderViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                      "box_packaging_type": "EverythingInOneBox",
                      "expected_arrival_date": "2019-08-24T14:15:22Z",
                      "external_sync_timestamp": "2019-08-24T14:15:22Z",
                      "fulfillment_center": {
                        "address1": "5900 W Ogden Ave",
                        "address2": "Suite 100",
                        "city": "Cicero",
                        "country": "USA",
                        "email": "example@example.com",
                        "id": 0,
                        "name": "Cicero (IL)",
                        "phone_number": "555-555-5555",
                        "state": "IL",
                        "timezone": "Central Standard Time",
                        "zip_code": "60804"
                      },
                      "id": 0,
                      "insert_date": "2019-08-24T14:15:22Z",
                      "inventory_quantities": [
                        {
                          "expected_quantity": 0,
                          "inventory_id": 0,
                          "received_quantity": 0,
                          "sku": "string",
                          "stowed_quantity": 0
                        }
                      ],
                      "last_updated_date": "2019-08-24T14:15:22Z",
                      "package_type": "Package",
                      "purchase_order_number": "string",
                      "status": "Awaiting"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      },
      "post": {
        "summary": "Create Warehouse Receiving Order\n",
        "operationId": "85ab9844ebc2ac76db634108b022ff32",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.V2.WarehouseReceivingOrderViewModel"
                },
                "example": {
                  "application/json": {
                    "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                    "box_packaging_type": "EverythingInOneBox",
                    "expected_arrival_date": "2019-08-24T14:15:22Z",
                    "fulfillment_center": {
                      "address1": "5900 W Ogden Ave",
                      "address2": "Suite 100",
                      "city": "Cicero",
                      "country": "USA",
                      "email": "example@example.com",
                      "id": 0,
                      "name": "Cicero (IL)",
                      "phone_number": "555-555-5555",
                      "state": "IL",
                      "timezone": "Central Standard Time",
                      "zip_code": "60804"
                    },
                    "id": 0,
                    "insert_date": "2019-08-24T14:15:22Z",
                    "inventory_quantities": [
                      {
                        "expected_quantity": 0,
                        "inventory_id": 0,
                        "received_quantity": 0,
                        "sku": "string",
                        "stowed_quantity": 0
                      }
                    ],
                    "last_updated_date": "2019-08-24T14:15:22Z",
                    "package_type": "Package",
                    "purchase_order_number": "string",
                    "status": "Awaiting"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.Post.2.0.Receiving.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "receiving.CreateReceivingOrderModel",
          "description": "The receiving order to create",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Receiving.CreateReceivingOrderModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/fulfillmentCenter": {
      "get": {
        "summary": "Get Fulfillment Centers\n",
        "operationId": "aadcbeecc2f3136dd343752fff4f31bb",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.FulfillmentCenterViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "address1": "5900 W Ogden Ave",
                      "address2": "Suite 100",
                      "city": "Cicero",
                      "country": "USA",
                      "email": "example@example.com",
                      "id": 0,
                      "name": "Cicero (IL)",
                      "phone_number": "555-555-5555",
                      "state": "IL",
                      "timezone": "Central Standard Time",
                      "zip_code": "60804"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/receiving/{id}/boxes": {
      "get": {
        "summary": "Get Warehouse Receiving Order Boxes\n",
        "operationId": "68137184cc716d056a7a3f336d0a9851",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the receiving order",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.BoxViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "arrived_date": "2019-08-24T14:15:22Z",
                      "box_id": 0,
                      "box_items": [
                        {
                          "inventory_id": 0,
                          "lot_date": "2019-08-24T14:15:22Z",
                          "lot_number": "string",
                          "quantity": 0,
                          "received_quantity": 0,
                          "stowed_quantity": 0
                        }
                      ],
                      "box_number": 0,
                      "box_status": "Awaiting",
                      "counting_started_date": "2019-08-24T14:15:22Z",
                      "received_date": "2019-08-24T14:15:22Z",
                      "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/receiving/{id}/cancel": {
      "post": {
        "summary": "Cancel Warehouse Receiving Order\n",
        "operationId": "05726f2da83f42b30ae3370382ab615a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the receiving order to cancel",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.V2.WarehouseReceivingOrderViewModel"
                },
                "example": {
                  "application/json": {
                    "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                    "box_packaging_type": "EverythingInOneBox",
                    "expected_arrival_date": "2019-08-24T14:15:22Z",
                    "fulfillment_center": {
                      "address1": "5900 W Ogden Ave",
                      "address2": "Suite 100",
                      "city": "Cicero",
                      "country": "USA",
                      "email": "example@example.com",
                      "id": 0,
                      "name": "Cicero (IL)",
                      "phone_number": "555-555-5555",
                      "state": "IL",
                      "timezone": "Central Standard Time",
                      "zip_code": "60804"
                    },
                    "id": 0,
                    "insert_date": "2019-08-24T14:15:22Z",
                    "inventory_quantities": [
                      {
                        "expected_quantity": 0,
                        "inventory_id": 0,
                        "received_quantity": 0,
                        "sku": "string",
                        "stowed_quantity": 0
                      }
                    ],
                    "last_updated_date": "2019-08-24T14:15:22Z",
                    "package_type": "Package",
                    "purchase_order_number": "string",
                    "status": "Awaiting"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.Post.2.0.Receiving.Id.Cancel.Unprocessable.Entity.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/receiving/{id}": {
      "get": {
        "summary": "Get Warehouse Receiving Order\n",
        "operationId": "072a989bfe11161281fbfbbfb2aedf97",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the receiving order\n",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.V2.WarehouseReceivingOrderViewModel"
                },
                "example": {
                  "application/json": {
                    "box_labels_uri": "https://api.shipbob.com/1.0/receiving/1/labels",
                    "box_packaging_type": "EverythingInOneBox",
                    "expected_arrival_date": "2019-08-24T14:15:22Z",
                    "external_sync_timestamp": "2019-08-24T14:15:22Z",
                    "fulfillment_center": {
                      "address1": "5900 W Ogden Ave",
                      "address2": "Suite 100",
                      "city": "Cicero",
                      "country": "USA",
                      "email": "example@example.com",
                      "id": 0,
                      "name": "Cicero (IL)",
                      "phone_number": "555-555-5555",
                      "state": "IL",
                      "timezone": "Central Standard Time",
                      "zip_code": "60804"
                    },
                    "id": 0,
                    "insert_date": "2019-08-24T14:15:22Z",
                    "inventory_quantities": [
                      {
                        "expected_quantity": 0,
                        "inventory_id": 0,
                        "received_quantity": 0,
                        "sku": "string",
                        "stowed_quantity": 0
                      }
                    ],
                    "last_updated_date": "2019-08-24T14:15:22Z",
                    "package_type": "Package",
                    "purchase_order_number": "string",
                    "status": "Awaiting"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/receiving/{id}/labels": {
      "get": {
        "summary": "Get Warehouse Receiving Order Box Labels\n",
        "operationId": "cbec9819f5c4be876e3dcaa0da85cdb2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the receiving order",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.Get.2.0.Receiving.Id.Labels.OK.String"
                },
                "example": {
                  "application/pdf": "string",
                  "application/json": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/pdf": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  },
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
                },
                "example": {
                  "application/pdf": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  },
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "instance": "string",
                    "property1": {

                    },
                    "property2": {

                    },
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Receiving"
        ]
      }
    },
    "/return/{id}/cancel": {
      "post": {
        "summary": "Cancel Return Order\n",
        "operationId": "99af59d858e43820eece4d8106b726c1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the return order",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ReturnOrderViewModel"
                },
                "example": {
                  "application/json": {
                    "channel": {
                      "id": 0,
                      "name": "ShipBobs-Shopify-Store"
                    },
                    "completed_date": "2019-08-24T14:15:22Z",
                    "customer_name": "string",
                    "fulfillment_center": {
                      "id": 0,
                      "name": "Cicero (IL)"
                    },
                    "id": 0,
                    "insert_date": "2019-08-24T14:15:22Z",
                    "inventory": [
                      {
                        "action_requested": {
                          "action": "Default",
                          "action_type": "InventoryDefault",
                          "instructions": "string"
                        },
                        "action_taken": [
                          {
                            "action": "Default",
                            "action_reason": "string",
                            "lot_information": [
                              {
                                "expiration_date": "2019-08-24T14:15:22Z",
                                "lot_number": "string",
                                "quantity_processed": 0
                              }
                            ],
                            "quantity_processed": 1
                          }
                        ],
                        "id": 0,
                        "name": "string",
                        "quantity": 0
                      }
                    ],
                    "invoice_amount": 0.1,
                    "original_shipment_id": 0,
                    "reference_id": "string",
                    "return_type": "Regular",
                    "status": "AwaitingArrival",
                    "store_order_id": "string",
                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                    "transactions": [
                      {
                        "amount": 2.5,
                        "transaction_type": "ReturnLabelInvoice"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "extensions": {
                      "property1": {

                      },
                      "property2": {

                      }
                    },
                    "instance": "string",
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "extensions": {
                      "property1": {

                      },
                      "property2": {

                      }
                    },
                    "instance": "string",
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Returns"
        ]
      }
    },
    "/return/{id}/statushistory": {
      "get": {
        "summary": "Get One Return's status history\n",
        "operationId": "0f8c7c349e3059ee2704f50148d11abe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the return order",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ReturnOrderStatusHistoryViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "status": "AwaitingArrival",
                      "time_stamp": "2019-08-24T14:15:22Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "extensions": {
                      "property1": {

                      },
                      "property2": {

                      }
                    },
                    "instance": "string",
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Returns"
        ]
      }
    },
    "/return": {
      "get": {
        "summary": "Get Return Orders\n",
        "operationId": "09ca3f93325d9c169f4d54f2d37ee0b0",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "description": "Page of return orders to get",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Amount of return orders per page to request",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "Order to sort results by",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date to filter orders inserted later than",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date to filter orders inserted earlier than",
            "schema": {
              "type": "string",
              "format": "date-time",
              "additionalProperties": false
            }
          },
          {
            "name": "IDs",
            "in": "query",
            "description": "Comma separated list of return orders ids to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "ReferenceIds",
            "in": "query",
            "description": "Comma separated list of reference ids to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Comma separated list of statuses to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Returns.ReturnStatus"
              }
            }
          },
          {
            "name": "FulfillmentCenterIds",
            "in": "query",
            "description": "Comma separated list of destination fulfillment center IDs to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "TrackingNumbers",
            "in": "query",
            "description": "Comma separated list of tracking numbers to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "OriginalShipmentIds",
            "in": "query",
            "description": "Comma separated list of original shipment IDs to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "Comma separated list of inventory IDs contained in return to filter by",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Page-Number": {
                "description": "Number of the current page",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Total-Pages": {
                "description": "Total number of pages of results",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Total-Count": {
                "description": "Total number of results",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              },
              "Page-Size": {
                "description": "Number of results per page",
                "schema": {
                  "type": "object",
                  "format": "",
                  "additionalProperties": false
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ReturnOrderViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "channel": {
                        "id": 0,
                        "name": "ShipBobs-Shopify-Store"
                      },
                      "completed_date": "2019-08-24T14:15:22Z",
                      "customer_name": "string",
                      "fulfillment_center": {
                        "id": 0,
                        "name": "Cicero (IL)"
                      },
                      "id": 0,
                      "insert_date": "2019-08-24T14:15:22Z",
                      "inventory": [
                        {
                          "action_requested": {
                            "action": "Default",
                            "action_type": "InventoryDefault",
                            "instructions": "string"
                          },
                          "action_taken": [
                            {
                              "action": "Default",
                              "action_reason": "string",
                              "lot_information": [
                                {
                                  "expiration_date": "2019-08-24T14:15:22Z",
                                  "lot_number": "string",
                                  "quantity_processed": 0
                                }
                              ],
                              "quantity_processed": 1
                            }
                          ],
                          "id": 0,
                          "name": "string",
                          "quantity": 0
                        }
                      ],
                      "invoice_amount": 0.1,
                      "original_shipment_id": 0,
                      "reference_id": "string",
                      "return_type": "Regular",
                      "status": "AwaitingArrival",
                      "store_order_id": "string",
                      "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                      "transactions": [
                        {
                          "amount": 2.5,
                          "transaction_type": "ReturnLabelInvoice"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Returns"
        ]
      },
      "post": {
        "summary": "Create Return Order\n",
        "operationId": "729d0c0abc4835ba638c9a2a66ebc2d4",
        "parameters": [
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "creationSourceId",
            "in": "header",
            "description": "",
            "schema": {
              "type": "number",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          }
        },
        "requestBody": {
          "x-name": "returns.CreateReturnRequest",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Returns.CreateReturnRequest"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Returns"
        ]
      }
    },
    "/return/{id}": {
      "put": {
        "summary": "Modify Return Order\n",
        "operationId": "8fd3220063faa081315dc98002f9fac8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the return order",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "required": true,
            "description": "Channel Id for Operation",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ReturnOrderViewModel"
                },
                "example": {
                  "application/json": {
                    "channel": {
                      "id": 0,
                      "name": "ShipBobs-Shopify-Store"
                    },
                    "completed_date": "2019-08-24T14:15:22Z",
                    "customer_name": "string",
                    "fulfillment_center": {
                      "id": 0,
                      "name": "Cicero (IL)"
                    },
                    "id": 0,
                    "insert_date": "2019-08-24T14:15:22Z",
                    "inventory": [
                      {
                        "action_requested": {
                          "action": "Default",
                          "action_type": "InventoryDefault",
                          "instructions": "string"
                        },
                        "action_taken": [
                          {
                            "action": "Default",
                            "action_reason": "string",
                            "lot_information": [
                              {
                                "expiration_date": "2019-08-24T14:15:22Z",
                                "lot_number": "string",
                                "quantity_processed": 0
                              }
                            ],
                            "quantity_processed": 1
                          }
                        ],
                        "id": 0,
                        "name": "string",
                        "quantity": 0
                      }
                    ],
                    "invoice_amount": 0.1,
                    "original_shipment_id": 0,
                    "reference_id": "string",
                    "return_type": "Regular",
                    "status": "AwaitingArrival",
                    "store_order_id": "string",
                    "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC",
                    "transactions": [
                      {
                        "amount": 2.5,
                        "transaction_type": "ReturnLabelInvoice"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "extensions": {
                      "property1": {

                      },
                      "property2": {

                      }
                    },
                    "instance": "string",
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "errors": {
                      "property1": [
                        "string"
                      ],
                      "property2": [
                        "string"
                      ]
                    },
                    "extensions": {
                      "property1": {

                      },
                      "property2": {

                      }
                    },
                    "instance": "string",
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "returns.CreateReturnViewModel",
          "description": "Model defining the return",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Returns.CreateReturnViewModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Returns"
        ]
      },
      "get": {
        "summary": "Get Return Order\n",
        "operationId": "7c1ecda086f397c4c23722abb27926ce",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "shipbob_channel_id",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization missing or invalid"
          },
          "403": {
            "description": "The provided credentials are not authorized to access this resource"
          },
          "404": {
            "description": "Resource Not Found"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Returns"
        ]
      }
    },
    "/product/{productId}": {
      "get": {
        "summary": "Get Product\n",
        "operationId": "9d82d40f4758612d28c98612ce997deb",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ProductViewModel"
                },
                "example": {
                  "application/json": {
                    "category": {
                      "id": 0,
                      "name": "string"
                    },
                    "created_on": "2019-08-24T14:15:22Z",
                    "id": 0,
                    "name": "string",
                    "sub_category": {
                      "id": 0,
                      "name": "string"
                    },
                    "type": "string",
                    "updated_on": "2019-08-24T14:15:22Z",
                    "user_id": 0,
                    "variants": [
                      {
                        "associated_bundles": [
                          {
                            "product_id": 0,
                            "product_name": "string",
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_sku": "string"
                          }
                        ],
                        "barcode": "string",
                        "bundle_definition": [
                          {
                            "product_id": 0,
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_name": "string",
                            "variant_sku": "string"
                          }
                        ],
                        "channel_metadata": [
                          {
                            "channel_id": 0,
                            "channel_name": "string",
                            "currency": "string",
                            "id": 0,
                            "is_inventory_sync_enabled": true,
                            "legacy_product_id": 0,
                            "platform": "string",
                            "platform_identifier": "string",
                            "platform_inventory_item_id": "string",
                            "price": 0.1,
                            "seller_sku": "string"
                          }
                        ],
                        "created_on": "2019-08-24T14:15:22Z",
                        "customs": {
                          "country_code_of_origin": "string",
                          "currency": "string",
                          "description": "string",
                          "hs_tariff_code": "string",
                          "is321_eligible": true,
                          "value": 0
                        },
                        "dimension": {
                          "height": 0.1,
                          "length": 0.1,
                          "unit": "string",
                          "width": 0.1
                        },
                        "fulfillment_settings": {
                          "dangerous_goods": true,
                          "is_bpm_parcel": true,
                          "is_case_pick": true,
                          "msds_url": "string",
                          "requires_prop65": true,
                          "serial_scan": {
                            "exact_character_length": 0,
                            "is_enabled": true,
                            "prefix": "string",
                            "suffix": "string"
                          }
                        },
                        "gtin": "string",
                        "id": 0,
                        "inventory": {
                          "inventory_id": 0,
                          "on_hand_qty": 0
                        },
                        "is_digital": true,
                        "lot_information": {
                          "is_lot": true,
                          "minimum_shelf_life_days": 0
                        },
                        "name": "string",
                        "packaging_material_type": {
                          "id": 0,
                          "name": "string"
                        },
                        "packaging_requirement": {
                          "id": 0,
                          "name": "string"
                        },
                        "return_preferences": {
                          "backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "instructions": "string",
                          "primary_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_primary_action": {
                            "id": 0,
                            "name": "string"
                          }
                        },
                        "sku": "string",
                        "status": "string",
                        "upc": "string",
                        "updated_on": "2019-08-24T14:15:22Z",
                        "weight": {
                          "unit": "string",
                          "weight": 0.1
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.Product.ProductId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "patch": {
        "summary": "Update a single product with Json Merge Patch functionality\n",
        "description": "Updates a single product. This endpoint supports Json Merge Patch functionality, which allows partial updates to be made to the product. The endpoint will only update the fields that are provided in the request. For updating variants, you mnust include the ID of the variant that you would like to update.\n",
        "operationId": "2dd7afd0ffe30df53fe295964e471abc",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The product identifier\n",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ProductViewModel"
                },
                "example": {
                  "application/json": {
                    "category": {
                      "id": 0,
                      "name": "string"
                    },
                    "created_on": "2019-08-24T14:15:22Z",
                    "id": 0,
                    "name": "string",
                    "sub_category": {
                      "id": 0,
                      "name": "string"
                    },
                    "taxonomy": {
                      "id": 0,
                      "name": "string",
                      "parent_id": 0,
                      "parent_name": "string",
                      "path": "string"
                    },
                    "type": "string",
                    "updated_on": "2019-08-24T14:15:22Z",
                    "user_id": 0,
                    "variants": [
                      {
                        "additional_hazmat_attributes": {
                          "charge_state_percentage": 0.1,
                          "container_metal": true,
                          "lithium_battery_packaging": "string",
                          "lithium_battery_type": "string",
                          "magnet": true,
                          "net_volume": 0.1,
                          "net_weight": 0.1
                        },
                        "associated_bundles": [
                          {
                            "product_id": 0,
                            "product_name": "string",
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_sku": "string"
                          }
                        ],
                        "barcode": "string",
                        "barcode_sticker_url": "string",
                        "bundle_definition": [
                          {
                            "product_id": 0,
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_name": "string",
                            "variant_sku": "string"
                          }
                        ],
                        "channel_metadata": [
                          {
                            "channel_id": 0,
                            "channel_name": "string",
                            "currency": "string",
                            "id": 0,
                            "is_inventory_sync_enabled": true,
                            "legacy_product_id": 0,
                            "platform": "string",
                            "platform_identifier": "string",
                            "platform_inventory_item_id": "string",
                            "price": 0.1,
                            "seller_sku": "string"
                          }
                        ],
                        "created_on": "2019-08-24T14:15:22Z",
                        "customs": {
                          "country_code_of_origin": "string",
                          "currency": "string",
                          "description": "string",
                          "hs_tariff_code": "string",
                          "is321_eligible": true,
                          "value": 0
                        },
                        "dimension": {
                          "height": 0.1,
                          "is_locked": true,
                          "length": 0.1,
                          "source": "string",
                          "unit": "string",
                          "width": 0.1
                        },
                        "fulfillment_settings": {
                          "dangerous_goods": true,
                          "is_bpm_parcel": true,
                          "is_case_pick": true,
                          "msds_url": "string",
                          "requires_prop65": true,
                          "serial_scan": {
                            "exact_character_length": 0,
                            "is_enabled": true,
                            "prefix": "string",
                            "suffix": "string"
                          }
                        },
                        "gtin": "string",
                        "id": 0,
                        "inventory": {
                          "inventory_id": 0,
                          "on_hand_qty": 0
                        },
                        "is_digital": true,
                        "is_image_uploaded": true,
                        "lot_information": {
                          "is_lot": true,
                          "minimum_shelf_life_days": 0
                        },
                        "merge_children": [
                          {
                            "channel_ids": [0],
                            "completed_at": "2019-08-24T14:15:22Z",
                            "inventory_id": 0,
                            "variant_id": 0,
                            "variant_name": "string"
                          }
                        ],
                        "name": "string",
                        "packaging_material_type": {
                          "id": 0,
                          "name": "string"
                        },
                        "packaging_requirement": {
                          "id": 0,
                          "name": "string"
                        },
                        "return_preferences": {
                          "backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "instructions": "string",
                          "primary_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_primary_action": {
                            "id": 0,
                            "name": "string"
                          }
                        },
                        "reviews_pending": [
                          "string"
                        ],
                        "sku": "string",
                        "status": "string",
                        "upc": "string",
                        "updated_on": "2019-08-24T14:15:22Z",
                        "weight": {
                          "unit": "string",
                          "weight": 0.1
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "products.UpdateProductRequestModelV3",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.UpdateProductRequestModelV3"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/product": {
      "get": {
        "summary": "Retrieves List of Products based on filters provided\n",
        "operationId": "5e4fe606de2077dfa918ff128f5bbfff",
        "parameters": [
          {
            "name": "Barcode",
            "in": "query",
            "description": "Barcode Associated with variant\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "CategoryIds",
            "in": "query",
            "description": "List of Category Ids associated with product\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "ChannelIds",
            "in": "query",
            "description": "Looks for Products variants by their channel IDs\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "HasDigitalVariants",
            "in": "query",
            "description": "Looks for Products with/without digital variants\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "HasVariants",
            "in": "query",
            "description": "Looks for Products with/without variants\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "InventoryId",
            "in": "query",
            "description": "Looks for variants by its associated inventory id\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "LegacyIds",
            "in": "query",
            "description": "Looks for Products with by Legacy Product Id(s)\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Looks for Products/Variants by name\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "OnHand",
            "in": "query",
            "description": "Looks for Products with inventory\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "PlatformIds",
            "in": "query",
            "description": "Looks for Products variants by their external Platform IDs\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "description": "Looks for Products with an assigned Id\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "ProductType",
            "in": "query",
            "description": "Looks for Products by type\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "SalesChannel",
            "in": "query",
            "description": "Looks for Products variants assigned to a platform/sales channel \n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "SellerSKUEvaludator",
            "in": "query",
            "description": "Looks for Products that match the provided Seller query\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "SKU",
            "in": "query",
            "description": "Looks for Products that match the provided Sku query\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "VariantId",
            "in": "query",
            "description": "Looks for products that contain a variant with the given ID\n",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "VariantStatus",
            "in": "query",
            "description": "Looks for Products with variants that contain provided status\n",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ProductViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "category": {
                        "id": 0,
                        "name": "string"
                      },
                      "created_on": "2019-08-24T14:15:22Z",
                      "id": 0,
                      "name": "string",
                      "sub_category": {
                        "id": 0,
                        "name": "string"
                      },
                      "type": "string",
                      "updated_on": "2019-08-24T14:15:22Z",
                      "user_id": 0,
                      "variants": [
                        {
                          "associated_bundles": [
                            {
                              "product_id": 0,
                              "product_name": "string",
                              "quantity": 0,
                              "variant_id": 0,
                              "variant_sku": "string"
                            }
                          ],
                          "barcode": "string",
                          "bundle_definition": [
                            {
                              "product_id": 0,
                              "quantity": 0,
                              "variant_id": 0,
                              "variant_name": "string",
                              "variant_sku": "string"
                            }
                          ],
                          "channel_metadata": [
                            {
                              "channel_id": 0,
                              "channel_name": "string",
                              "currency": "string",
                              "id": 0,
                              "is_inventory_sync_enabled": true,
                              "legacy_product_id": 0,
                              "platform": "string",
                              "platform_identifier": "string",
                              "platform_inventory_item_id": "string",
                              "price": 0.1,
                              "seller_sku": "string"
                            }
                          ],
                          "created_on": "2019-08-24T14:15:22Z",
                          "customs": {
                            "country_code_of_origin": "string",
                            "currency": "string",
                            "description": "string",
                            "hs_tariff_code": "string",
                            "is321_eligible": true,
                            "value": 0
                          },
                          "dimension": {
                            "height": 0.1,
                            "length": 0.1,
                            "unit": "string",
                            "width": 0.1
                          },
                          "fulfillment_settings": {
                            "dangerous_goods": true,
                            "is_bpm_parcel": true,
                            "is_case_pick": true,
                            "msds_url": "string",
                            "requires_prop65": true,
                            "serial_scan": {
                              "exact_character_length": 0,
                              "is_enabled": true,
                              "prefix": "string",
                              "suffix": "string"
                            }
                          },
                          "gtin": "string",
                          "id": 0,
                          "inventory": {
                            "inventory_id": 0,
                            "on_hand_qty": 0
                          },
                          "is_digital": true,
                          "lot_information": {
                            "is_lot": true,
                            "minimum_shelf_life_days": 0
                          },
                          "name": "string",
                          "packaging_material_type": {
                            "id": 0,
                            "name": "string"
                          },
                          "packaging_requirement": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_preferences": {
                            "backup_action": {
                              "id": 0,
                              "name": "string"
                            },
                            "instructions": "string",
                            "primary_action": {
                              "id": 0,
                              "name": "string"
                            },
                            "return_to_sender_backup_action": {
                              "id": 0,
                              "name": "string"
                            },
                            "return_to_sender_primary_action": {
                              "id": 0,
                              "name": "string"
                            }
                          },
                          "sku": "string",
                          "status": "string",
                          "upc": "string",
                          "updated_on": "2019-08-24T14:15:22Z",
                          "weight": {
                            "unit": "string",
                            "weight": 0.1
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.Product.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.Product.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "post": {
        "summary": "Create single product to the store\n",
        "operationId": "0c4a773215d74006c7062e138ae1b94e",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ProductViewModel"
                },
                "example": {
                  "application/json": {
                    "category": {
                      "id": 0,
                      "name": "string"
                    },
                    "created_on": "2019-08-24T14:15:22Z",
                    "id": 0,
                    "name": "string",
                    "sub_category": {
                      "id": 0,
                      "name": "string"
                    },
                    "type": "string",
                    "updated_on": "2019-08-24T14:15:22Z",
                    "user_id": 0,
                    "variants": [
                      {
                        "associated_bundles": [
                          {
                            "product_id": 0,
                            "product_name": "string",
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_sku": "string"
                          }
                        ],
                        "barcode": "string",
                        "bundle_definition": [
                          {
                            "product_id": 0,
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_name": "string",
                            "variant_sku": "string"
                          }
                        ],
                        "channel_metadata": [
                          {
                            "channel_id": 0,
                            "channel_name": "string",
                            "currency": "string",
                            "id": 0,
                            "is_inventory_sync_enabled": true,
                            "legacy_product_id": 0,
                            "platform": "string",
                            "platform_identifier": "string",
                            "platform_inventory_item_id": "string",
                            "price": 0.1,
                            "seller_sku": "string"
                          }
                        ],
                        "created_on": "2019-08-24T14:15:22Z",
                        "customs": {
                          "country_code_of_origin": "string",
                          "currency": "string",
                          "description": "string",
                          "hs_tariff_code": "string",
                          "is321_eligible": true,
                          "value": 0
                        },
                        "dimension": {
                          "height": 0.1,
                          "length": 0.1,
                          "unit": "string",
                          "width": 0.1
                        },
                        "fulfillment_settings": {
                          "dangerous_goods": true,
                          "is_bpm_parcel": true,
                          "is_case_pick": true,
                          "msds_url": "string",
                          "requires_prop65": true,
                          "serial_scan": {
                            "exact_character_length": 0,
                            "is_enabled": true,
                            "prefix": "string",
                            "suffix": "string"
                          }
                        },
                        "gtin": "string",
                        "id": 0,
                        "inventory": {
                          "inventory_id": 0,
                          "on_hand_qty": 0
                        },
                        "is_digital": true,
                        "lot_information": {
                          "is_lot": true,
                          "minimum_shelf_life_days": 0
                        },
                        "name": "string",
                        "packaging_material_type": {
                          "id": 0,
                          "name": "string"
                        },
                        "packaging_requirement": {
                          "id": 0,
                          "name": "string"
                        },
                        "return_preferences": {
                          "backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "instructions": "string",
                          "primary_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_primary_action": {
                            "id": 0,
                            "name": "string"
                          }
                        },
                        "sku": "string",
                        "status": "string",
                        "upc": "string",
                        "updated_on": "2019-08-24T14:15:22Z",
                        "weight": {
                          "unit": "string",
                          "weight": 0.1
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "products.CreateProductRequestModel",
          "description": "The product to add",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.CreateProductRequestModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/channel": {
      "get": {
        "summary": "Get channels",
        "operationId": "c94a92715c0351cba55c1eff9c4649f2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Channels.ChannelArrayViewModel"
                },
                "example": {
                  "application/json": [
                    {
                      "application_name": "Api",
                      "id": 0,
                      "name": "string",
                      "scopes": [
                        "channels_read",
                        "orders_read",
                        "orders_write"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Channels.ErrorResponse"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Channels"
        ]
      }
    },
    "/shipment/:bulkUpdateTrackingUpload": {
      "post": {
        "summary": "Update Tracking Uploaded Status for Multiple Shipments by Shipment Id",
        "operationId": "cffdaae4eaaaab7753a0cb8884719a18",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.BulkUpdateResponseModel"
                },
                "example": {
                  "application/json": {
                    "results": [
                      {
                        "error": {
                          "code": "string",
                          "message": "string"
                        },
                        "isSuccess": true,
                        "shipmentId": 100810005
                      }
                    ],
                    "summary": {
                      "failed": 0,
                      "successful": 1,
                      "total": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.Post.Api.Shipment.BulkUpdateTrackingUpload.Bad.Request.String"
                },
                "example": {
                  "application/json": "string"
                }
              }
            }
          },
          "401": {
            "description": "No access right at this time"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "x-name": "orders.BulkUpdateTrackingUploadModel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.BulkUpdateTrackingUploadModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/variant/{variantId}/channel-metadata/{channelMetadataId}": {
      "delete": {
        "summary": "Used to delete a specific channel metadata record from a variant by channel metadata ID\n",
        "operationId": "b48e74188d2b119e672f2ea93f9b96c6",
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "required": true,
            "description": "The ID of the variant to remove the metadata from\n",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          },
          {
            "name": "channelMetadataId",
            "in": "path",
            "required": true,
            "description": "The ID of the channel metadata record to delete\n",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.VariantViewModel"
                },
                "example": {
                  "application/json": {
                    "associated_bundles": [
                      {
                        "product_id": 0,
                        "product_name": "string",
                        "quantity": 0,
                        "variant_id": 0,
                        "variant_sku": "string"
                      }
                    ],
                    "barcode": "string",
                    "bundle_definition": [
                      {
                        "product_id": 0,
                        "quantity": 0,
                        "variant_id": 0,
                        "variant_name": "string",
                        "variant_sku": "string"
                      }
                    ],
                    "channel_metadata": [
                      {
                        "channel_id": 0,
                        "channel_name": "string",
                        "currency": "string",
                        "id": 0,
                        "is_inventory_sync_enabled": true,
                        "legacy_product_id": 0,
                        "platform": "string",
                        "platform_identifier": "string",
                        "platform_inventory_item_id": "string",
                        "price": 0.1,
                        "seller_sku": "string"
                      }
                    ],
                    "created_on": "2019-08-24T14:15:22Z",
                    "customs": {
                      "country_code_of_origin": "string",
                      "currency": "string",
                      "description": "string",
                      "hs_tariff_code": "string",
                      "is321_eligible": true,
                      "value": 0
                    },
                    "dimension": {
                      "height": 0.1,
                      "length": 0.1,
                      "unit": "string",
                      "width": 0.1
                    },
                    "fulfillment_settings": {
                      "dangerous_goods": true,
                      "is_bpm_parcel": true,
                      "is_case_pick": true,
                      "msds_url": "string",
                      "requires_prop65": true,
                      "serial_scan": {
                        "exact_character_length": 0,
                        "is_enabled": true,
                        "prefix": "string",
                        "suffix": "string"
                      }
                    },
                    "gtin": "string",
                    "id": 0,
                    "inventory": {
                      "inventory_id": 0,
                      "on_hand_qty": 0
                    },
                    "is_digital": true,
                    "lot_information": {
                      "is_lot": true,
                      "minimum_shelf_life_days": 0
                    },
                    "name": "string",
                    "packaging_material_type": {
                      "id": 0,
                      "name": "string"
                    },
                    "packaging_requirement": {
                      "id": 0,
                      "name": "string"
                    },
                    "return_preferences": {
                      "backup_action": {
                        "id": 0,
                        "name": "string"
                      },
                      "instructions": "string",
                      "primary_action": {
                        "id": 0,
                        "name": "string"
                      },
                      "return_to_sender_backup_action": {
                        "id": 0,
                        "name": "string"
                      },
                      "return_to_sender_primary_action": {
                        "id": 0,
                        "name": "string"
                      }
                    },
                    "sku": "string",
                    "status": "string",
                    "upc": "string",
                    "updated_on": "2019-08-24T14:15:22Z",
                    "weight": {
                      "unit": "string",
                      "weight": 0.1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "put": {
        "summary": "Update specific channel metadata record from a variant by channel metadata ID\n",
        "operationId": "90aa9021b19d7789681a49b76d79703d",
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "required": true,
            "description": "The ID of the variant to update the metadata from\n",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          },
          {
            "name": "channelMetadataId",
            "in": "path",
            "required": true,
            "description": "The ID of the channel metadata record to update\n",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.VariantViewModel"
                },
                "example": {
                  "application/json": {
                    "additional_hazmat_attributes": {
                      "charge_state_percentage": 0.1,
                      "container_metal": true,
                      "lithium_battery_packaging": "string",
                      "lithium_battery_type": "string",
                      "magnet": true,
                      "net_volume": 0.1,
                      "net_weight": 0.1
                    },
                    "associated_bundles": [
                      {
                        "product_id": 0,
                        "product_name": "string",
                        "quantity": 0,
                        "variant_id": 0,
                        "variant_sku": "string"
                      }
                    ],
                    "barcode": "string",
                    "barcode_sticker_url": "string",
                    "bundle_definition": [
                      {
                        "product_id": 0,
                        "quantity": 0,
                        "variant_id": 0,
                        "variant_name": "string",
                        "variant_sku": "string"
                      }
                    ],
                    "channel_metadata": [
                      {
                        "channel_id": 0,
                        "channel_name": "string",
                        "currency": "string",
                        "id": 0,
                        "is_inventory_sync_enabled": true,
                        "legacy_product_id": 0,
                        "platform": "string",
                        "platform_identifier": "string",
                        "platform_inventory_item_id": "string",
                        "price": 0.1,
                        "seller_sku": "string"
                      }
                    ],
                    "created_on": "2019-08-24T14:15:22Z",
                    "customs": {
                      "country_code_of_origin": "string",
                      "currency": "string",
                      "description": "string",
                      "hs_tariff_code": "string",
                      "is321_eligible": true,
                      "value": 0
                    },
                    "dimension": {
                      "height": 0.1,
                      "is_locked": true,
                      "length": 0.1,
                      "source": "string",
                      "unit": "string",
                      "width": 0.1
                    },
                    "fulfillment_settings": {
                      "dangerous_goods": true,
                      "is_bpm_parcel": true,
                      "is_case_pick": true,
                      "msds_url": "string",
                      "requires_prop65": true,
                      "serial_scan": {
                        "exact_character_length": 0,
                        "is_enabled": true,
                        "prefix": "string",
                        "suffix": "string"
                      }
                    },
                    "gtin": "string",
                    "id": 0,
                    "inventory": {
                      "inventory_id": 0,
                      "on_hand_qty": 0
                    },
                    "is_digital": true,
                    "is_image_uploaded": true,
                    "lot_information": {
                      "is_lot": true,
                      "minimum_shelf_life_days": 0
                    },
                    "merge_children": [
                      {
                        "channel_ids": [0],
                        "completed_at": "2019-08-24T14:15:22Z",
                        "inventory_id": 0,
                        "variant_id": 0,
                        "variant_name": "string"
                      }
                    ],
                    "name": "string",
                    "packaging_material_type": {
                      "id": 0,
                      "name": "string"
                    },
                    "packaging_requirement": {
                      "id": 0,
                      "name": "string"
                    },
                    "return_preferences": {
                      "backup_action": {
                        "id": 0,
                        "name": "string"
                      },
                      "instructions": "string",
                      "primary_action": {
                        "id": 0,
                        "name": "string"
                      },
                      "return_to_sender_backup_action": {
                        "id": 0,
                        "name": "string"
                      },
                      "return_to_sender_primary_action": {
                        "id": 0,
                        "name": "string"
                      }
                    },
                    "reviews_pending": [
                      "string"
                    ],
                    "sku": "string",
                    "status": "string",
                    "upc": "string",
                    "updated_on": "2019-08-24T14:15:22Z",
                    "weight": {
                      "unit": "string",
                      "weight": 0.1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object"
                },
                "example": {
                  "application/json": {
                    "property1": [
                      "string"
                    ],
                    "property2": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/taxonomy/{id}/parent": {
      "get": {
        "summary": "Get Taxonomy Parent by Id\n",
        "operationId": "09c013ed682b50f3d16234d4c69f519b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.TaxonomyViewModel"
                },
                "example": {
                  "application/json": {
                    "children": [
                      {
                        "has_children": true,
                        "id": 0,
                        "name": "string",
                        "path": "string"
                      }
                    ],
                    "id": 0,
                    "name": "string",
                    "parent": {
                      "id": 0,
                      "name": "string",
                      "path": "string"
                    },
                    "path": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Id.Parent.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Id.Parent.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Id.Parent.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/taxonomy": {
      "get": {
        "summary": "Get Taxonomies\n",
        "operationId": "261e342a8a9514a5c30d6321ef4ff2c2",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.TaxonomyViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "children": [
                        {
                          "has_children": true,
                          "id": 0,
                          "name": "string",
                          "path": "string"
                        }
                      ],
                      "id": 0,
                      "name": "string",
                      "parent": {
                        "id": 0,
                        "name": "string",
                        "path": "string"
                      },
                      "path": "string"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/taxonomy/{id}": {
      "get": {
        "summary": "Get Taxonomy by Id\n",
        "operationId": "45c19cd89efa4b89bc9c93f3d443f77c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.TaxonomyViewModel"
                },
                "example": {
                  "application/json": {
                    "children": [
                      {
                        "has_children": true,
                        "id": 0,
                        "name": "string",
                        "path": "string"
                      }
                    ],
                    "id": 0,
                    "name": "string",
                    "parent": {
                      "id": 0,
                      "name": "string",
                      "path": "string"
                    },
                    "path": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Id.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Id.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.Get.Api.V2.Taxonomy.Id.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "503": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/packaging-requirement": {
      "get": {
        "summary": "Get Packaging Requirement\n",
        "operationId": "672942b09322e1990e33ef572188ad73",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.PackagingRequirementViewModelArray"
                },
                "example": {
                  "application/json": [
                    {
                      "applicable_categories": [
                        {
                          "id": 0,
                          "sub_category_ids": [0]
                        }
                      ],
                      "applicable_packaging_material_types": [
                        {
                          "id": 0,
                          "name": "string"
                        }
                      ],
                      "description": "string",
                      "id": 0,
                      "name": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/variant/{variantId}/channel-metadata": {
      "post": {
        "summary": "Used to Create a new Channel Metadata Entry for a given Variant\n",
        "operationId": "16bdf05dd87417fa58047a46bb481f61",
        "parameters": [
          {
            "name": "variantId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int64",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ProductViewModel"
                },
                "example": {
                  "application/json": {
                    "category": {
                      "id": 0,
                      "name": "string"
                    },
                    "created_on": "2019-08-24T14:15:22Z",
                    "id": 0,
                    "name": "string",
                    "sub_category": {
                      "id": 0,
                      "name": "string"
                    },
                    "type": "string",
                    "updated_on": "2019-08-24T14:15:22Z",
                    "user_id": 0,
                    "variants": [
                      {
                        "associated_bundles": [
                          {
                            "product_id": 0,
                            "product_name": "string",
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_sku": "string"
                          }
                        ],
                        "barcode": "string",
                        "bundle_definition": [
                          {
                            "product_id": 0,
                            "quantity": 0,
                            "variant_id": 0,
                            "variant_name": "string",
                            "variant_sku": "string"
                          }
                        ],
                        "channel_metadata": [
                          {
                            "channel_id": 0,
                            "channel_name": "string",
                            "currency": "string",
                            "id": 0,
                            "is_inventory_sync_enabled": true,
                            "legacy_product_id": 0,
                            "platform": "string",
                            "platform_identifier": "string",
                            "platform_inventory_item_id": "string",
                            "price": 0.1,
                            "seller_sku": "string"
                          }
                        ],
                        "created_on": "2019-08-24T14:15:22Z",
                        "customs": {
                          "country_code_of_origin": "string",
                          "currency": "string",
                          "description": "string",
                          "hs_tariff_code": "string",
                          "is321_eligible": true,
                          "value": 0
                        },
                        "dimension": {
                          "height": 0.1,
                          "length": 0.1,
                          "unit": "string",
                          "width": 0.1
                        },
                        "fulfillment_settings": {
                          "dangerous_goods": true,
                          "is_bpm_parcel": true,
                          "is_case_pick": true,
                          "msds_url": "string",
                          "requires_prop65": true,
                          "serial_scan": {
                            "exact_character_length": 0,
                            "is_enabled": true,
                            "prefix": "string",
                            "suffix": "string"
                          }
                        },
                        "gtin": "string",
                        "id": 0,
                        "inventory": {
                          "inventory_id": 0,
                          "on_hand_qty": 0
                        },
                        "is_digital": true,
                        "lot_information": {
                          "is_lot": true,
                          "minimum_shelf_life_days": 0
                        },
                        "name": "string",
                        "packaging_material_type": {
                          "id": 0,
                          "name": "string"
                        },
                        "packaging_requirement": {
                          "id": 0,
                          "name": "string"
                        },
                        "return_preferences": {
                          "backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "instructions": "string",
                          "primary_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_backup_action": {
                            "id": 0,
                            "name": "string"
                          },
                          "return_to_sender_primary_action": {
                            "id": 0,
                            "name": "string"
                          }
                        },
                        "sku": "string",
                        "status": "string",
                        "upc": "string",
                        "updated_on": "2019-08-24T14:15:22Z",
                        "weight": {
                          "unit": "string",
                          "weight": 0.1
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "x-name": "products.Post.Api.Variant.VariantId.ChannelMetadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel",
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.Post.Api.Variant.VariantId.ChannelMetadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel"
              }
            }
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/inventory": {
      "get": {
        "summary": "  Get All Inventories\n",
        "operationId": "55ea81cc486b4660a8c518109ef38bec",
        "parameters": [
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "FilterOperations",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Inventories.FilterOperation"
              }
            }
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryResponsePagedResponse"
                },
                "example": {
                  "application/json": {
                    "first": "string",
                    "items": [
                      {
                        "barcode": "string",
                        "dimensions": {
                          "height": 0.1,
                          "is_locked": true,
                          "length": 0.1,
                          "unit": "string",
                          "validated": true,
                          "width": 0.1
                        },
                        "inventory_id": 0,
                        "is_case": true,
                        "is_lot": true,
                        "name": "string",
                        "sku": "string",
                        "user_id": 0,
                        "variant": {
                          "hazmat": {
                            "is_hazmat": true,
                            "validated": true
                          },
                          "is_active": true,
                          "is_bundle": true,
                          "is_digital": true
                        },
                        "weight": {
                          "unit": "string",
                          "value": 0.1
                        }
                      }
                    ],
                    "last": "string",
                    "next": "string",
                    "prev": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory-level/locations": {
      "get": {
        "summary": "  Get All Inventory Levels Grouped By Fulfillment Center\n",
        "operationId": "5f12efb2a1517dff2926d5841c57948d",
        "parameters": [
          {
            "name": "LocationType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryQuantityFcResponsePagedResponse"
                },
                "example": {
                  "application/json": {
                    "first": "string",
                    "items": [
                      {
                        "inventory_id": 0,
                        "locations": [
                          {
                            "awaiting_quantity": 0,
                            "committed_quantity": 0,
                            "fulfillable_quantity": 0,
                            "internal_transfer_quantity": 0,
                            "location_id": 0,
                            "name": "string",
                            "on_hand_quantity": 0
                          }
                        ],
                        "name": "string",
                        "sku": "string"
                      }
                    ],
                    "last": "string",
                    "next": "string",
                    "prev": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory/{inventoryId}": {
      "get": {
        "summary": "  Get Inventory\n",
        "operationId": "588a8bb9e4086c9f6a2bf1bf3d4beb55",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryResponse"
                },
                "example": {
                  "application/json": {
                    "barcode": "string",
                    "dimensions": {
                      "height": 0.1,
                      "is_locked": true,
                      "length": 0.1,
                      "unit": "string",
                      "validated": true,
                      "width": 0.1
                    },
                    "inventory_id": 0,
                    "is_case": true,
                    "is_lot": true,
                    "name": "string",
                    "sku": "string",
                    "user_id": 0,
                    "variant": {
                      "hazmat": {
                        "is_hazmat": true,
                        "validated": true
                      },
                      "is_active": true,
                      "is_bundle": true,
                      "is_digital": true
                    },
                    "weight": {
                      "unit": "string",
                      "value": 0.1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory-level": {
      "get": {
        "summary": "  Get All Inventory Levels\n",
        "operationId": "b4a2f3342be39dee2ab660584ebab083",
        "parameters": [
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryQuantityResponsePagedResponse"
                },
                "example": {
                  "application/json": {
                    "first": "string",
                    "items": [
                      {
                        "inventory_id": 0,
                        "name": "string",
                        "sku": "string",
                        "total_awaiting_quantity": 0,
                        "total_backordered_quantity": 0,
                        "total_committed_quantity": 0,
                        "total_exception_quantity": 0,
                        "total_fulfillable_quantity": 0,
                        "total_internal_transfer_quantity": 0,
                        "total_on_hand_quantity": 0,
                        "total_sellable_quantity": 0
                      }
                    ],
                    "last": "string",
                    "next": "string",
                    "prev": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory-level/{inventoryId}/lots": {
      "get": {
        "summary": "  Get Inventory Levels Grouped By Lot\n",
        "operationId": "4abdcbec15589f2ac52f6e26221a8cf3",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryQuantityLotResponse"
                },
                "example": {
                  "application/json": {
                    "inventory_id": 0,
                    "lots": [
                      {
                        "awaiting_quantity": 0,
                        "committed_quantity": 0,
                        "fulfillable_quantity": 0,
                        "internal_transfer_quantity": 0,
                        "locations": [
                          {
                            "awaiting_quantity": 0,
                            "committed_quantity": 0,
                            "fulfillable_quantity": 0,
                            "internal_transfer_quantity": 0,
                            "location_id": 0,
                            "name": "string",
                            "on_hand_quantity": 0
                          }
                        ],
                        "lot_date": "2019-08-24T14:15:22Z",
                        "lot_number": "string",
                        "on_hand_quantity": 0
                      }
                    ],
                    "name": "string",
                    "sku": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory-level/{inventoryId}": {
      "get": {
        "summary": "  Get Inventory Levels\n",
        "operationId": "5b9cfd1450a84019e5dac4ebf0ea9259",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryQuantityResponse"
                },
                "example": {
                  "application/json": {
                    "inventory_id": 0,
                    "name": "string",
                    "sku": "string",
                    "total_awaiting_quantity": 0,
                    "total_backordered_quantity": 0,
                    "total_committed_quantity": 0,
                    "total_exception_quantity": 0,
                    "total_fulfillable_quantity": 0,
                    "total_internal_transfer_quantity": 0,
                    "total_on_hand_quantity": 0,
                    "total_sellable_quantity": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory-level/lots": {
      "get": {
        "summary": "  Get All Inventory Levels Grouped By Lot\n",
        "operationId": "75137f9e260840bd8493ddb513efe4f4",
        "parameters": [
          {
            "name": "LocationId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SearchBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          },
          {
            "name": "InventoryIds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false,
              "items": {
                "type": "integer",
                "format": "int32",
                "additionalProperties": false
              }
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "IsDigital",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "additionalProperties": false
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryQuantityLotResponsePagedResponse"
                },
                "example": {
                  "application/json": {
                    "first": "string",
                    "items": [
                      {
                        "inventory_id": 0,
                        "lots": [
                          {
                            "awaiting_quantity": 0,
                            "committed_quantity": 0,
                            "fulfillable_quantity": 0,
                            "internal_transfer_quantity": 0,
                            "locations": [
                              {
                                "awaiting_quantity": 0,
                                "committed_quantity": 0,
                                "fulfillable_quantity": 0,
                                "internal_transfer_quantity": 0,
                                "location_id": 0,
                                "name": "string",
                                "on_hand_quantity": 0
                              }
                            ],
                            "lot_date": "2019-08-24T14:15:22Z",
                            "lot_number": "string",
                            "on_hand_quantity": 0
                          }
                        ],
                        "name": "string",
                        "sku": "string"
                      }
                    ],
                    "last": "string",
                    "next": "string",
                    "prev": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/inventory-level/{inventoryId}/locations": {
      "get": {
        "summary": "  Get Inventory Levels Grouped By Fulfillment Center\n",
        "operationId": "02c3d358d738d964e4660c65e9d1beb8",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "int32",
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.InventoryQuantityFcResponse"
                },
                "example": {
                  "application/json": {
                    "inventory_id": 0,
                    "locations": [
                      {
                        "awaiting_quantity": 0,
                        "committed_quantity": 0,
                        "fulfillable_quantity": 0,
                        "internal_transfer_quantity": 0,
                        "location_id": 0,
                        "name": "string",
                        "on_hand_quantity": 0
                      }
                    ],
                    "name": "string",
                    "sku": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Inventories.ProblemDetails"
                },
                "example": {
                  "application/json": {
                    "detail": "string",
                    "instance": "string",
                    "property1": null,
                    "property2": null,
                    "status": 0,
                    "title": "string",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "PAT": []
          },
          {
            "OAuth2": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Channels.ChannelArrayViewModel": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Channels.ChannelViewModel"
        }
      },
      "Channels.ChannelViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "application_name": {
            "type": "string",
            "description": "Name of the application that owns the channel",
            "example": "Api",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the channel",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the channel",
            "additionalProperties": false,
            "nullable": true
          },
          "scopes": {
            "type": "array",
            "description": "Array of permissions granted for the channel",
            "example": [
              "channels_read",
              "orders_read",
              "orders_write"
            ],
            "additionalProperties": false,
            "items": {
              "type": "string",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Channels.CreateChannelRequestModel": {
        "type": "object",
        "description": "Model for create channel request",
        "example": {
          "name": "string"
        },
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the channel",
            "minLength": 1,
            "additionalProperties": false
          }
        }
      },
      "Channels.ErrorResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Events.ApiFeaturesEventsGetEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "event_name": {
            "type": "string",
            "additionalProperties": false
          },
          "event_offset": {
            "type": "string",
            "additionalProperties": false
          },
          "event_timestamp": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "insert_timestamp": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "order_id": {
            "type": "string",
            "additionalProperties": false
          },
          "payload": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Events.ApiFeaturesEventsGetPayload"
          },
          "sub_event_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Events.ApiFeaturesEventsGetGetEventsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Events.ApiFeaturesEventsGetEvent"
            }
          },
          "next_page": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "record_count": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Events.ApiFeaturesEventsGetPayload": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address_1": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "carrier": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "city": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "company": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "country": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "email": {
            "type": "string",
            "additionalProperties": false
          },
          "first_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "state": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "store_order_id": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sub_status_description": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "tracking": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "zip": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Events.ApiFeaturesRegistrationRegisterRegisterActionResult": {
        "type": "integer",
        "description": "",
        "additionalProperties": false,
        "x-enumNames": [
          "RegistrationSuccessful",
          "RegistrationExists",
          "RegistrationFailed"
        ],
        "enum": [0, 1, 2]
      },
      "Events.ApiFeaturesRegistrationRegisterRegisterRequest": {
        "type": "object",
        "example": {
          "user_id": 12345
        },
        "additionalProperties": false,
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Events.ApiFeaturesRegistrationRegisterRegisterResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registration_result": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Events.ApiFeaturesRegistrationRegisterRegisterActionResult"
          },
          "registration_result_reason": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Events.Get.Api.V1.Event.EndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false,
        "nullable": true
      },
      "Events.Get.Api.V1.Event.Offset.String": {
        "type": "string",
        "additionalProperties": false,
        "nullable": true
      },
      "Events.Get.Api.V1.Event.RecordsPerPage.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false,
        "nullable": true
      },
      "Events.Get.Api.V1.Event.StartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false,
        "nullable": true
      },
      "Events.Post.Api.V1.Register.Unprocessable.Entity.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.DimensionsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "height": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "is_locked": {
            "type": "boolean",
            "additionalProperties": false
          },
          "length": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "unit": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "validated": {
            "type": "boolean",
            "additionalProperties": false
          },
          "width": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Inventories.FilterOperation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "rawValue": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.FilterOperationArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Inventories.FilterOperation"
        }
      },
      "Inventories.FulfillableQuantityByFulfillmentCenter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "awaiting_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "committed_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "fulfillable_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "internal_transfer_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "location_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "on_hand_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventories.FulfillmentCenterResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "awaiting_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "committed_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "fulfillable_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "internal_transfer_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "location_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "on_hand_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventories.Get.Api.V3.Inventories.InventoryId.InventoryId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventories.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Inventories.Get.Api.V3.Inventories.IsActive.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventories.IsDigital.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventories.PageSize.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventories.SearchBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventories.SortBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.InventoryId.InventoryId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.InventoryId.Locations.InventoryId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.InventoryId.Lots.InventoryId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Inventories.Get.Api.V3.Inventory.Levels.IsActive.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.IsDigital.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.IsActive.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.IsDigital.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.LocationId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.LocationType.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.PageSize.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.SearchBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Locations.SortBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.IsActive.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.IsDigital.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.LocationId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.PageSize.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.SearchBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.Lots.SortBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.PageSize.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.SearchBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.Get.Api.V3.Inventory.Levels.SortBy.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventories.HazmatResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "is_hazmat": {
            "type": "boolean",
            "additionalProperties": false
          },
          "validated": {
            "type": "boolean",
            "additionalProperties": false
          }
        }
      },
      "Inventories.InventoryQuantityFcResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "locations": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.FulfillmentCenterResponse"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.InventoryQuantityFcResponsePagedResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "items": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.InventoryQuantityFcResponse"
            },
            "nullable": true
          },
          "last": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "next": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "prev": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.InventoryQuantityLotResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "lots": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.Lots"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.InventoryQuantityLotResponsePagedResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "items": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.InventoryQuantityLotResponse"
            },
            "nullable": true
          },
          "last": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "next": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "prev": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.InventoryQuantityResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "total_awaiting_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_backordered_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_committed_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_exception_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_fulfillable_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_internal_transfer_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_on_hand_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total_sellable_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventories.InventoryQuantityResponsePagedResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "items": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.InventoryQuantityResponse"
            },
            "nullable": true
          },
          "last": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "next": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "prev": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.InventoryResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "barcode": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "dimensions": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Inventories.DimensionsResponse"
          },
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "is_case": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_lot": {
            "type": "boolean",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "variant": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Inventories.VariantResponse"
          },
          "weight": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Inventories.WeightResponse"
          }
        }
      },
      "Inventories.InventoryResponsePagedResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "items": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.InventoryResponse"
            },
            "nullable": true
          },
          "last": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "next": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "prev": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.Lots": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "awaiting_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "committed_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "fulfillable_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "internal_transfer_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "locations": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventories.FulfillableQuantityByFulfillmentCenter"
            },
            "nullable": true
          },
          "lot_date": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "lot_number": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "on_hand_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventories.ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventories.VariantResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hazmat": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Inventories.HazmatResponse"
          },
          "is_active": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_bundle": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_digital": {
            "type": "boolean",
            "additionalProperties": false
          }
        }
      },
      "Inventories.WeightResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unit": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Inventory.DimensionViewModel": {
        "type": "object",
        "description": "Information about an inventory item's dimensions",
        "additionalProperties": false,
        "properties": {
          "depth": {
            "type": "number",
            "description": "Depth in inches of this inventory item",
            "format": "double",
            "additionalProperties": false
          },
          "length": {
            "type": "number",
            "description": "Length in inches of this inventory item",
            "format": "double",
            "additionalProperties": false
          },
          "weight": {
            "type": "number",
            "description": "Weight in ounces of this inventory item",
            "format": "double",
            "additionalProperties": false
          },
          "width": {
            "type": "number",
            "description": "Width in inches of this inventory item",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Inventory.EventCategory": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "OrderPicking",
          "SpotChecking",
          "SkuChange",
          "Receiving",
          "RestockAfterPicking",
          "RestockAfterReturn"
        ]
      },
      "Inventory.FulfillmentCenterQuantityViewModel": {
        "type": "object",
        "description": "Break down of fulfillable quantity by fulfillment center",
        "additionalProperties": false,
        "properties": {
          "awaiting_quantity": {
            "type": "integer",
            "description": "Amount of quantity awaiting arrival of a receiving order at this fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "committed_quantity": {
            "type": "integer",
            "description": "Amount of committed quantity at this fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "fulfillable_quantity": {
            "type": "integer",
            "description": "Amount of fulfillable quantity at this fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "internal_transfer_quantity": {
            "type": "integer",
            "description": "The quantity of items that are in the process of internal transit \r\nbetween ShipBob fulfillment centers, with a destination of this fulfillment center.\r\nThese items are not pickable or fulfillable until they have been received and moved \r\nto the \"On Hand\" quantity of the destination FC.",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the fulfillment center",
            "example": "Cicero",
            "additionalProperties": false,
            "nullable": true
          },
          "onhand_quantity": {
            "type": "integer",
            "description": "Amount of onhand quantity at this fulfillment center",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventory.Get.Api.Inventory.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Inventory.Get.Api.Inventory.History.Query.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Inventory.Get.Api.Inventory.History.Query.EndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.History.Query.FulfillmentCenterId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.History.Query.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Inventory.Get.Api.Inventory.History.Query.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2000,
        "minimum": 1,
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.History.Query.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.History.Query.StartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.IDs.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Inventory.Get.Api.Inventory.InventoryId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.EndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.FulfillmentCenterId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.InventoryId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2000,
        "minimum": 1,
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.InventoryId.History.StartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.InventoryId.InventoryId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.IsActive.Boolea": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.IsActive.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.IsDigital.Boolea": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.IsDigital.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.LocationType.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.Search.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Inventory.Sort.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Product.ProductId.Inventory.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Inventory.Get.Api.Product.ProductId.Inventory.ProductId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventory.Get.Api.Product.ProductId.Inventory.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Inventory.InventoryHistoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "event_category": {
            "type": "string",
            "description": "Event Category to filter by",
            "additionalProperties": false,
            "nullable": true
          },
          "event_date": {
            "type": "string",
            "description": "Unique id of the order",
            "format": "date-time",
            "additionalProperties": false
          },
          "fulfillment_center_id": {
            "type": "integer",
            "description": "Unique id of the order",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "description": "Inventory Id",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_quantity_changed": {
            "type": "integer",
            "description": "Unique id of the order",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventory.InventoryHistoryViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Inventory.InventoryHistoryViewModel"
        }
      },
      "Inventory.InventoryViewModel": {
        "type": "object",
        "description": "Information about an inventory item",
        "additionalProperties": false,
        "properties": {
          "dimensions": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Inventory.DimensionViewModel"
          },
          "fulfillable_quantity_by_fulfillment_center": {
            "type": "array",
            "description": "Fulfillable quantity of this inventory item broken down by fulfillment center location",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventory.FulfillmentCenterQuantityViewModel"
            },
            "nullable": true
          },
          "fulfillable_quantity_by_lot": {
            "type": "array",
            "description": "Fulfillable quantity of this inventory item broken down by lot",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventory.LotQuantityViewModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the inventory is active or not",
            "additionalProperties": false
          },
          "is_case_pick": {
            "type": "boolean",
            "description": "True if the inventory item is marked as case pick",
            "additionalProperties": false
          },
          "is_digital": {
            "type": "boolean",
            "description": "True if the inventory item is marked as a digital item",
            "additionalProperties": false
          },
          "is_lot": {
            "type": "boolean",
            "description": "True if this inventory item is organized into lots",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the inventory item",
            "example": "Medium Blue T-Shirt",
            "additionalProperties": false,
            "nullable": true
          },
          "packaging_attribute": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Inventory.PackagingAttribute"
          },
          "total_awaiting_quantity": {
            "type": "integer",
            "description": "Total quantity in unreceived receiving orders for this inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "total_backordered_quantity": {
            "type": "integer",
            "description": "The amount of the item you need to send to ShipBob to fulfill all exception orders containing \r\nthe item. This is the exception_quantity less the fulfillable_quantity of the item.",
            "format": "int32",
            "additionalProperties": false
          },
          "total_committed_quantity": {
            "type": "integer",
            "description": "Total committed quantity of this inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "total_exception_quantity": {
            "type": "integer",
            "description": "The total quantity of all items that are contained within orders that\r\nare in exception/out of stock status. Out of stock orders have not been\r\nprocessed and therefore do not have lot or fulfillment centers assigned.",
            "format": "int32",
            "additionalProperties": false
          },
          "total_fulfillable_quantity": {
            "type": "integer",
            "description": "Total fulfillable quantity of this inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "total_internal_transfer_quantity": {
            "type": "integer",
            "description": "The total quantity of all items that are in the process of internal transit \r\nbetween ShipBob fulfillment centers. These items are not pickable or fulfillable\r\nuntil they have been received and moved to the \"On Hand\" quantity of the destination FC.\r\nInternal transit quantities for each FC represent the incoming transfer stock\r\nfor that specific location.",
            "format": "int32",
            "additionalProperties": false
          },
          "total_onhand_quantity": {
            "type": "integer",
            "description": "Total onhand quantity of this inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "total_sellable_quantity": {
            "type": "integer",
            "description": "Total quantity that can be sold without overselling the inventory item.\r\nThis is calculated by subtracting the total exception quantity from the\r\nfulfillable quantity.",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventory.InventoryViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Inventory.InventoryViewModel"
        }
      },
      "Inventory.LotQuantityViewModel": {
        "type": "object",
        "description": "Break down of fulfillable quantity by lot",
        "additionalProperties": false,
        "properties": {
          "awaiting_quantity": {
            "type": "integer",
            "description": "Quantity of inventory items belonging to this lot awaiting arrival of a receiving order",
            "format": "int32",
            "additionalProperties": false
          },
          "committed_quantity": {
            "type": "integer",
            "description": "Committed quantity of inventory items belonging to this lot",
            "format": "int32",
            "additionalProperties": false
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date for this lot",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "fulfillable_quantity": {
            "type": "integer",
            "description": "Fulfillable quantity of inventory items belonging to this lot",
            "format": "int32",
            "additionalProperties": false
          },
          "fulfillable_quantity_by_fulfillment_center": {
            "type": "array",
            "description": "Fulfillable quantity of inventory items belonging to this lot broken down by fulfillment center location",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Inventory.FulfillmentCenterQuantityViewModel"
            },
            "nullable": true
          },
          "internal_transfer_quantity": {
            "type": "integer",
            "description": "The quantity of all items belonging to this lot that are in the process of internal transit \r\nbetween ShipBob fulfillment centers. These items are not pickable or fulfillable\r\nuntil they have been received and moved to the \"On Hand\" quantity of the destination FC.\r\nInternal transit quantities for each FC represent the incoming transfer stock\r\nfor that specific location.",
            "format": "int32",
            "additionalProperties": false
          },
          "lot_number": {
            "type": "string",
            "description": "Identification number of this lot",
            "example": "1234",
            "additionalProperties": false,
            "nullable": true
          },
          "onhand_quantity": {
            "type": "integer",
            "description": "OnHand quantity of inventory items belonging to this lot",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Inventory.PackagingAttribute": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false,
        "enum": [
          "None",
          "Fragile",
          "Foldable",
          "Stackable",
          "Book",
          "CustomPackaging",
          "CustomDunnage",
          "MarketingInsert",
          "Poster"
        ]
      },
      "Inventory.ProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventory.ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Inventory.SortOrder": {
        "type": "string",
        "description": "Specify if you want to sort by newest first or oldest first",
        "additionalProperties": false,
        "enum": [
          "Newest",
          "Oldest"
        ]
      },
      "Locations.AddressViewModel": {
        "type": "object",
        "description": "The service-specific address of the location. Each object contains address type, address1, address2, city, state, country, zip code, phone number, and email",
        "additionalProperties": false,
        "properties": {
          "address1": {
            "type": "string",
            "description": "First part of the address of the location for this service",
            "additionalProperties": false,
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Second part of the address of the location for this service",
            "additionalProperties": false,
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City of the location",
            "additionalProperties": false,
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country of the location",
            "additionalProperties": false,
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the location for this service",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name to use in the address of the location for this service",
            "additionalProperties": false,
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "description": "Phone Number of the location for this service",
            "additionalProperties": false,
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State of the location",
            "additionalProperties": false,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "description": "Zip code of the location",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Locations.FcAttributeViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique Id for the fulfillment center attribute",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the attribute.",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Locations.FcTypeViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique Id for the fulfillment center type",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the fc type",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Locations.FcTypeViewModelV2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "organization_roles": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.OrganizationRoleViewModel"
            },
            "nullable": true
          },
          "organization_type_id": {
            "type": "string",
            "format": "uuid",
            "additionalProperties": false
          },
          "organization_type_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.FcTypeViewModel"
          }
        ]
      },
      "Locations.FulfillmentCenterRegionViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique Id for the location region",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the region the location is in.",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Locations.Get.1.0.Location.AccessGranted.Boolea": {
        "type": "boolean",
        "description": "Return all the access granted locations",
        "additionalProperties": false,
        "nullable": true
      },
      "Locations.Get.1.0.Location.AccessGranted.Boolean": {
        "type": "boolean",
        "description": "Return all the access granted locations",
        "additionalProperties": false,
        "nullable": true
      },
      "Locations.Get.1.0.Location.IncludeInactive.Boolea": {
        "type": "boolean",
        "description": "Whether the inactive locations should be included or not",
        "additionalProperties": false,
        "nullable": true
      },
      "Locations.Get.1.0.Location.IncludeInactive.Boolean": {
        "type": "boolean",
        "description": "Whether the inactive locations should be included or not",
        "additionalProperties": false,
        "nullable": true
      },
      "Locations.Get.1.0.Location.OK.OneOfArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "oneOf": [
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.LocationViewModel"
            },
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.InternalLocationViewModel"
            },
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.InternalLocationViewModelV2"
            },
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.LocationViewModelV2"
            }
          ]
        }
      },
      "Locations.Get.1.0.Location.ReceivingEnabled.Boolea": {
        "type": "boolean",
        "description": "Return all the receiving enabled locations",
        "additionalProperties": false,
        "nullable": true
      },
      "Locations.Get.1.0.Location.ReceivingEnabled.Boolean": {
        "type": "boolean",
        "description": "Return all the receiving enabled locations",
        "additionalProperties": false,
        "nullable": true
      },
      "Locations.InternalLocationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fulfillment_center_attributes": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.FcAttributeViewModel"
            },
            "nullable": true
          },
          "fulfillment_center_type": {
            "additionalProperties": false,
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Locations.FcTypeViewModel"
              },
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Locations.FcTypeViewModelV2"
              }
            ],
            "nullable": true
          },
          "is_enabled_for_new_user": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_external": {
            "type": "boolean",
            "additionalProperties": false
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.LocationViewModel"
          }
        ]
      },
      "Locations.InternalLocationViewModelV2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fulfillment_center_attributes": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.FcAttributeViewModel"
            },
            "nullable": true
          },
          "fulfillment_center_type": {
            "additionalProperties": false,
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Locations.FcTypeViewModel"
              },
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Locations.FcTypeViewModelV2"
              }
            ],
            "nullable": true
          },
          "is_enabled_for_new_user": {
            "type": "boolean",
            "additionalProperties": false
          },
          "sort_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.SortCenterViewModel"
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.LocationViewModelV2"
          }
        ]
      },
      "Locations.LocationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "abbreviation": {
            "type": "string",
            "description": "Abbreviation of the location. Combination of nearest Airport Code and the sequence number.",
            "additionalProperties": false,
            "nullable": true
          },
          "access_granted": {
            "type": "boolean",
            "description": "Indicates whether or not the user is authorized to interact at all with the location",
            "additionalProperties": false
          },
          "attributes": {
            "type": "array",
            "description": "Available attributes for the location",
            "additionalProperties": false,
            "items": {
              "type": "string",
              "additionalProperties": false
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Id of the location in ShipBob’s database",
            "format": "int32",
            "additionalProperties": false
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the location is operationally active or inactive",
            "additionalProperties": false
          },
          "is_receiving_enabled": {
            "type": "boolean",
            "description": "Indicates if the receiving is enabled for FC",
            "additionalProperties": false
          },
          "is_shipping_enabled": {
            "type": "boolean",
            "description": "Indicates if the shipping is enabled for FC",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the location. Follows the naming convention City (State Code)\r\nfor domestic FCs and City (Country Code) for international FCs",
            "additionalProperties": false,
            "nullable": true
          },
          "region": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.FulfillmentCenterRegionViewModel"
          },
          "services": {
            "type": "array",
            "description": "Services provided by the location",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Locations.ServiceViewModel"
            },
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "Time zone of the location",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Locations.LocationViewModelV2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "additionalProperties": false
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "additionalProperties": false,
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.LocationViewModel"
          }
        ]
      },
      "Locations.OrganizationRoleViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Locations.ServiceTypeEnum": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Receiving",
          "Returns"
        ]
      },
      "Locations.ServiceViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "address": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.AddressViewModel"
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates if the user is authorized to access this service at the location",
            "additionalProperties": false
          },
          "service_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Locations.ServiceTypeEnum"
          }
        }
      },
      "Locations.SortCenterViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique Id for the fulfillment center",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Metrics.OrderIngestionErrorLogRequest": {
        "type": "object",
        "example": {
          "error_time_stamp": "2019-08-24T14:15:22Z",
          "error_type_id": 0,
          "is_order_ingested": true,
          "order_pull_type_id": 0,
          "platform_source": 0,
          "retry_count": 0,
          "store_integration_id": 0,
          "store_name": "string",
          "store_order_id": "string",
          "store_reference_id": "string",
          "user_id": 0
        },
        "additionalProperties": false,
        "required": [
          "store_integration_id"
        ],
        "properties": {
          "error_time_stamp": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "error_type_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "is_order_ingested": {
            "type": "boolean",
            "additionalProperties": false
          },
          "order_pull_type_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_source": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Metrics.PlatformSourceEnum"
          },
          "retry_count": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "store_integration_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "store_name": {
            "type": "string",
            "maxLength": 200,
            "additionalProperties": false,
            "nullable": true
          },
          "store_order_id": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "store_reference_id": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Metrics.PlatformSourceEnum": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false,
        "enum": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, -1]
      },
      "Metrics.ProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Metrics.ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Metrics.SyncMetricsLogRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "is_success_metric",
          "store_integration_id",
          "sync_start_date_time",
          "sync_type"
        ],
        "properties": {
          "error_time_stamp": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "error_type_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "is_success_metric": {
            "type": "boolean",
            "additionalProperties": false
          },
          "order_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "order_status": {
            "type": "string",
            "maxLength": 20,
            "additionalProperties": false,
            "nullable": true
          },
          "order_sub_status": {
            "type": "string",
            "maxLength": 50,
            "additionalProperties": false,
            "nullable": true
          },
          "platform_source": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Metrics.PlatformSourceEnum"
          },
          "store_integration_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "store_name": {
            "type": "string",
            "maxLength": 200,
            "additionalProperties": false,
            "nullable": true
          },
          "store_reference_id": {
            "type": "string",
            "maxLength": 300,
            "additionalProperties": false,
            "nullable": true
          },
          "sync_count": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "sync_start_date_time": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "sync_type": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Metrics.SyncMetricsLogRequestArray": {
        "type": "array",
        "example": [
          {
            "error_time_stamp": "2019-08-24T14:15:22Z",
            "error_type_id": 0,
            "is_success_metric": true,
            "order_id": 0,
            "order_status": "string",
            "order_sub_status": "string",
            "platform_source": 0,
            "store_integration_id": 0,
            "store_name": "string",
            "store_reference_id": "string",
            "sync_count": 0,
            "sync_start_date_time": "2019-08-24T14:15:22Z",
            "sync_type": 0,
            "user_id": 0
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Metrics.SyncMetricsLogRequest"
        }
      },
      "Metrics.TrackingUploadErrorLogRequest": {
        "type": "object",
        "example": {
          "error_time_stamp": "2019-08-24T14:15:22Z",
          "error_type_id": 0,
          "is_tracking_uploaded": true,
          "lineItemErrors": [
            {
              "errorTypeId": 0,
              "isTrackingUploaded": true,
              "lineItemId": "string",
              "sku": "string",
              "timeStamp": "2019-08-24T14:15:22Z"
            }
          ],
          "order_id": 0,
          "platform_source": 0,
          "store_integration_id": 0,
          "store_name": "string",
          "user_id": 0
        },
        "additionalProperties": false,
        "required": [
          "store_integration_id"
        ],
        "properties": {
          "error_time_stamp": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "error_type_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "is_tracking_uploaded": {
            "type": "boolean",
            "additionalProperties": false
          },
          "lineItemErrors": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Metrics.TrackingUploadLineItemErrorLog"
            },
            "nullable": true
          },
          "order_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "platform_source": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Metrics.PlatformSourceEnum"
          },
          "store_integration_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "store_name": {
            "type": "string",
            "maxLength": 200,
            "additionalProperties": false,
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Metrics.TrackingUploadLineItemErrorLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorTypeId": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "isTrackingUploaded": {
            "type": "boolean",
            "additionalProperties": false
          },
          "lineItemId": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          }
        }
      },
      "Orders.AddProductToOrderByProductIdModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "productId",
          "quantity"
        ],
        "properties": {
          "external_line_id": {
            "type": "integer",
            "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the product",
            "format": "int32",
            "additionalProperties": false
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of this product ordered",
            "format": "int32",
            "additionalProperties": false
          },
          "quantity_unit_of_measure_code": {
            "type": "string",
            "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.AddProductToOrderModel"
          }
        ]
      },
      "Orders.AddProductToOrderByReferenceIdModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quantity",
          "referenceId"
        ],
        "properties": {
          "external_line_id": {
            "type": "integer",
            "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1",
            "maxLength": 50,
            "minLength": 0,
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the product. Required if there is not an existing ShipBob product with a matching reference_id value.",
            "example": "TShirtBlueM",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of this product ordered",
            "format": "int32",
            "additionalProperties": false
          },
          "quantity_unit_of_measure_code": {
            "type": "string",
            "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL",
            "additionalProperties": false,
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "description": "Unique reference id of the product",
            "minLength": 1,
            "example": "TShirtBlueM",
            "additionalProperties": false
          },
          "sku": {
            "type": "string",
            "description": "Product SKU",
            "additionalProperties": false,
            "nullable": true
          },
          "unit_price": {
            "type": "number",
            "description": "Price for one item",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "upc": {
            "type": "string",
            "description": "Universal Product Code - Unique external identifier",
            "maxLength": 50,
            "minLength": 0,
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.AddProductToOrderModel"
          }
        ]
      },
      "Orders.AddProductToOrderModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "external_line_id": {
            "type": "integer",
            "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "additionalProperties": false
          },
          "quantity_unit_of_measure_code": {
            "type": "string",
            "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.AddStoreOrderJsonModel": {
        "type": "object",
        "description": "Model for adding a Store Order Json to a ShipBob Order.",
        "example": {
          "order_json": "string"
        },
        "additionalProperties": false,
        "required": [
          "orderJson"
        ],
        "properties": {
          "order_json": {
            "type": "string",
            "description": "Json String that represent the order on a store front system",
            "minLength": 1,
            "additionalProperties": false
          }
        }
      },
      "Orders.AddressType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "MarkFor",
          "ShipFrom"
        ]
      },
      "Orders.AddressViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "address1",
          "city",
          "country"
        ],
        "properties": {
          "address1": {
            "type": "string",
            "description": "First line of the address",
            "minLength": 1,
            "example": "100 Nowhere Blvd",
            "additionalProperties": false
          },
          "address2": {
            "type": "string",
            "description": "Second line of the address",
            "example": "Suite 100",
            "additionalProperties": false,
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city",
            "minLength": 1,
            "example": "Gotham City",
            "additionalProperties": false
          },
          "company_name": {
            "type": "string",
            "description": "Name of the company receiving the shipment",
            "example": "Wayne Enterprises",
            "additionalProperties": false,
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "The country (Must be ISO Alpha-2 for estimates)",
            "minLength": 1,
            "example": "US",
            "additionalProperties": false
          },
          "state": {
            "type": "string",
            "description": "The state or province",
            "example": "NJ",
            "additionalProperties": false,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "description": "The zip code or postal code",
            "format": "postal-code",
            "example": "07093",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.BulkUpdateResponseError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "message": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.BulkUpdateResponseModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.BulkUpdateResponseResult"
            },
            "nullable": true
          },
          "summary": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.BulkUpdateResponseSummary"
          }
        }
      },
      "Orders.BulkUpdateResponseResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.BulkUpdateResponseError"
          },
          "isSuccess": {
            "type": "boolean",
            "additionalProperties": false
          },
          "shipmentId": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        }
      },
      "Orders.BulkUpdateResponseSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "failed": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "successful": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Orders.BulkUpdateTrackingUploadModel": {
        "type": "object",
        "description": "Model for updating tracking upload status for multiple shipments",
        "example": {
          "is_tracking_uploaded": true,
          "shipment_ids": [100810005]
        },
        "additionalProperties": false,
        "properties": {
          "is_tracking_uploaded": {
            "type": "boolean",
            "description": "Indicates whether the Shipment was marked with tracking information\r\nuploaded to a third-party system where the order originated.\r\nApplies to all shipments in shipment_ids",
            "additionalProperties": false
          },
          "shipment_ids": {
            "type": "array",
            "description": "Shipment IDs to apply the tracking upload status to",
            "additionalProperties": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Orders.CancelShipmentsModel": {
        "type": "object",
        "description": "Model for cancel multiple shipments at once",
        "example": {
          "shipment_ids": [0]
        },
        "additionalProperties": false,
        "properties": {
          "shipment_ids": {
            "type": "array",
            "description": "Shipment IDs to cancel",
            "additionalProperties": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Orders.CanceledOrderViewModel": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "canceled_shipment_results": {
            "type": "array",
            "description": "Results of canceling the shipments associated with the order",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.CanceledShipmentViewModel"
            },
            "nullable": true
          },
          "order": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.OrderViewModel"
          },
          "order_id": {
            "type": "integer",
            "description": "The ID of the canceled order",
            "format": "int32",
            "additionalProperties": false
          },
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.CancellationResult"
          }
        }
      },
      "Orders.CanceledShipmentViewModel": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShipmentAction"
          },
          "is_success": {
            "type": "boolean",
            "description": "If the cancel action was successful",
            "additionalProperties": false
          },
          "reason": {
            "type": "string",
            "description": "The reason the cancellation result",
            "additionalProperties": false,
            "nullable": true
          },
          "shipment_id": {
            "type": "integer",
            "description": "The ID of the shipment",
            "format": "int64",
            "additionalProperties": false
          }
        }
      },
      "Orders.CanceledShipmentsViewModel": {
        "type": "object",
        "description": "",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "description": "The results of all cancellation actions",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.CanceledShipmentViewModel"
            },
            "nullable": true
          }
        }
      },
      "Orders.CancellationResult": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Success",
          "Failure",
          "PartialSuccess"
        ]
      },
      "Orders.CarrierShipType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Parcel",
          "Freight"
        ]
      },
      "Orders.CartonDetailsViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "products": {
            "type": "array",
            "description": "List of what is packed in this carton",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.ShipmentProductViewModel"
            },
            "nullable": true
          }
        }
      },
      "Orders.CartonMeasurementsViewModel": {
        "type": "object",
        "description": "Measurements of a carton",
        "additionalProperties": false,
        "properties": {
          "depth_in": {
            "type": "number",
            "description": "Total depth in inches",
            "format": "double",
            "additionalProperties": false
          },
          "length_in": {
            "type": "number",
            "description": "Total length in inches",
            "format": "double",
            "additionalProperties": false
          },
          "total_weight_oz": {
            "type": "number",
            "description": "Total weight in ounces",
            "format": "double",
            "additionalProperties": false
          },
          "width_in": {
            "type": "number",
            "description": "Total width in inches",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Orders.CartonViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "barcode": {
            "type": "string",
            "description": "Barcode assigned to this carton",
            "additionalProperties": false,
            "nullable": true
          },
          "carton_details": {
            "type": "array",
            "description": "Details about the contents of this carton",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.CartonDetailsViewModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ID assigned to this carton",
            "format": "int32",
            "additionalProperties": false
          },
          "measurements": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.CartonMeasurementsViewModel"
          },
          "type": {
            "type": "string",
            "description": "Type of this carton container",
            "example": "Box or pallet",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.ChannelInfoViewModel": {
        "type": "object",
        "description": "Created by channel metadata",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of the channel",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the channel",
            "example": "ShipBobs-Shopify-Store",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.CreateOrderModel": {
        "type": "object",
        "example": {
          "financials": {
            "total_price": 0.1
          },
          "gift_message": "string",
          "location_id": 0,
          "order_number": "string",
          "products": [
            {
              "external_line_id": 0,
              "id": 0,
              "quantity": 1,
              "quantity_unit_of_measure_code": "string"
            }
          ],
          "purchase_date": "2019-08-24T14:15:22Z",
          "recipient": {
            "address": {
              "address1": "100 Nowhere Blvd",
              "address2": "Suite 100",
              "city": "Gotham City",
              "company_name": "Wayne Enterprises",
              "country": "US",
              "state": "NJ",
              "zip_code": "07093"
            },
            "email": "john@example.com",
            "name": "John Doe",
            "phone_number": "555-555-5555"
          },
          "reference_id": "string",
          "retailer_program_data": {
            "addresses": [
              {
                "address1": "100 Nowhere Blvd",
                "address2": "Suite 100",
                "city": "Gotham City",
                "company_name": "Wayne Enterprises",
                "country": "US",
                "state": "NJ",
                "type": "MarkFor",
                "zip_code": "07093"
              }
            ],
            "customer_ticket_number": "string",
            "delivery_date": "2019-08-24T14:15:22Z",
            "department": "string",
            "doNotShipBeforeDate": "2019-08-24T14:15:22Z",
            "mark_for_store": "string",
            "purchase_order_number": "string",
            "retailer_program_type": "string",
            "shipByDate": "2019-08-24T14:15:22Z"
          },
          "shipping_method": "Free 2-day Shipping",
          "shipping_terms": {
            "carrier_type": "Parcel",
            "payment_term": "Collect"
          },
          "tags": [
            {
              "name": "Handling instructions",
              "value": "Fragile"
            }
          ],
          "type": "DTC"
        },
        "additionalProperties": false,
        "required": [
          "products",
          "recipient",
          "referenceId",
          "shippingMethod"
        ],
        "properties": {
          "financials": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.Financials"
          },
          "gift_message": {
            "type": "string",
            "description": "Gift message associated with the order",
            "maxLength": 500,
            "additionalProperties": false,
            "nullable": true
          },
          "location_id": {
            "type": "integer",
            "description": "Desired Fulfillment Center Location ID. If not specified, ShipBob will determine the location that fulfills this order.",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "order_number": {
            "type": "string",
            "description": "User friendly orderId or store order number that will be shown on the Orders Page. If not provided, referenceId will be used",
            "maxLength": 400,
            "additionalProperties": false,
            "nullable": true
          },
          "products": {
            "type": "array",
            "description": "Products included in the order. Products identified by reference_id must also include the product name if there is no matching ShipBob product.",
            "minItems": 1,
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.AddProductToOrderByProductIdModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.AddProductToOrderByReferenceIdModel"
                }
              ]
            }
          },
          "purchase_date": {
            "type": "string",
            "description": "Date this order was purchase by the end user",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "recipient": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.RecipientInfoViewModel"
          },
          "reference_id": {
            "type": "string",
            "description": "Unique and immutable order identifier from your upstream system",
            "maxLength": 300,
            "minLength": 1,
            "additionalProperties": false
          },
          "retailer_program_data": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.RetailerProgramDataViewModel"
          },
          "shipping_method": {
            "type": "string",
            "description": "Client-defined shipping method matching what the user has listed as the shipping method on the Ship Option Mapping setup page in the ShipBob Merchant Portal. If they don’t match, we will create a new one and default it to Standard",
            "minLength": 1,
            "example": "Free 2-day Shipping",
            "additionalProperties": false
          },
          "shipping_terms": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShippingTermsViewModel"
          },
          "tags": {
            "type": "array",
            "description": "Key value pair array to store extra information at the order level for API purposes. ShipBob won't display the info in the ShipBob Merchant Portal or react based on this data.",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.TagViewModel"
            },
            "nullable": true
          },
          "type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.OrderType"
          }
        }
      },
      "Orders.EstimateDetailViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "estimated_currency_code": {
            "type": "string",
            "description": "Estimated local currency code",
            "additionalProperties": false,
            "nullable": true
          },
          "estimated_price": {
            "type": "number",
            "description": "Estimated price in dollars for the provided shipping method",
            "format": "double",
            "additionalProperties": false
          },
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.FulfillmentCenterViewModel"
          },
          "shipping_method": {
            "type": "string",
            "description": "Provided shipping method. Maps to ship option in ShipBob.",
            "additionalProperties": false,
            "nullable": true
          },
          "total_weight_oz": {
            "type": "number",
            "description": "Total weight of items in cart including packaging.",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Orders.EstimateFulfillmentRequestModel": {
        "type": "object",
        "example": {
          "address": {
            "address1": "100 Nowhere Blvd",
            "address2": "Suite 100",
            "city": "Gotham City",
            "company_name": "Wayne Enterprises",
            "country": "US",
            "state": "NJ",
            "zip_code": "07093"
          },
          "products": [
            {
              "id": 0,
              "quantity": 1,
              "reference_id": "TShirtBlueM"
            }
          ],
          "shipping_methods": [
            "string"
          ]
        },
        "additionalProperties": false,
        "required": [
          "address",
          "products"
        ],
        "properties": {
          "address": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.EstimationAddressViewModel"
          },
          "products": {
            "type": "array",
            "description": "Products to be included in the order. Each product must include one of reference_id or id",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.EstimateProductInfoModel"
            }
          },
          "shipping_methods": {
            "type": "array",
            "description": "Array of strings specifying shipping methods for which to fetch estimates.\r\n\r\nIf this field is omitted we will return estimates for all shipping methods defined in ShipBob",
            "additionalProperties": false,
            "items": {
              "type": "string",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Orders.EstimateProductInfoModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of the product (Must be provided if reference_id is unknown)",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of this product ordered",
            "format": "int32",
            "maximum": 199,
            "minimum": 1,
            "additionalProperties": false
          },
          "reference_id": {
            "type": "string",
            "description": "Unique reference id of the product (Must be provided if ID is unknown)",
            "example": "TShirtBlueM",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.EstimateViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "estimates": {
            "type": "array",
            "description": "Array of estimates for each shipping method",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.EstimateDetailViewModel"
            },
            "nullable": true
          }
        }
      },
      "Orders.EstimationAddressViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "country"
        ],
        "properties": {
          "address1": {
            "type": "string",
            "description": "First line of the address",
            "example": "100 Nowhere Blvd",
            "additionalProperties": false,
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Second line of the address",
            "example": "Suite 100",
            "additionalProperties": false,
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city",
            "example": "Gotham City",
            "additionalProperties": false,
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "Name of the company receiving the shipment",
            "example": "Wayne Enterprises",
            "additionalProperties": false,
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "The country (Must be ISO Alpha-2 for estimates)",
            "minLength": 1,
            "example": "US",
            "additionalProperties": false
          },
          "state": {
            "type": "string",
            "description": "The state or province",
            "example": "NJ",
            "additionalProperties": false,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "description": "The zip code or postal code",
            "format": "postal-code",
            "example": "07093",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.Financial": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_price": {
            "type": "number",
            "description": "Sum of all line item prices, discounts, and taxes in USD",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.Financials": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_price": {
            "type": "number",
            "description": "Sum of all line item prices, discounts, and taxes in USD",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.FulfillmentCenterViewModel": {
        "type": "object",
        "description": "Information about a fulfillment center that a shipment can belong to",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the fulfillment center",
            "example": "Cicero (IL)",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.FulfillmentStatu": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "AwaitingInventoryAllocation",
          "AwaitingReset",
          "Unavailable",
          "PendingOnTime",
          "FulfilledOnTime",
          "PendingLate",
          "FulfilledLate"
        ]
      },
      "Orders.FulfillmentStatus": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "AwaitingInventoryAllocation",
          "AwaitingReset",
          "Unavailable",
          "PendingOnTime",
          "FulfilledOnTime",
          "PendingLate",
          "FulfilledLate"
        ]
      },
      "Orders.Get.Api.Order.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.EndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.HasTracking.Boolea": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.HasTracking.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.IDs.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Orders.Get.Api.Order.IsTrackingUploaded.Boolea": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.IsTrackingUploaded.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.LastTrackingUpdateEndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.LastTrackingUpdateStartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.LastUpdateEndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.LastUpdateStartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.OrderId.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.OrderId.Shipment.OK.OneOfArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "description": "Information about a shipment",
          "additionalProperties": false,
          "oneOf": [
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.ShipmentViewModel"
            },
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
            }
          ]
        }
      },
      "Orders.Get.Api.Order.OrderId.Shipment.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Logs.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
        "description": "Information about a shipment",
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShipmentViewModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
          }
        ]
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.Shipment.ShipmentId.Timeline.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.OrderId.StoreOrderJson.OK.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.StoreOrderJson.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Order.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 1,
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.ReferenceIds.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Orders.Get.Api.Order.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Order.StartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ListByStatus.AsOfStatusDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ListByStatus.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 1,
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ListByStatus.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 1,
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ListByStatus.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.PickedNotShippedInventory.FulfillmentCenterId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.PickedNotShippedInventory.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ShipmentId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Shipment.ShipmentId.Logs.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Shipment.ShipmentId.Logs.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ShipmentId.Logs.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ShipmentId.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
        "description": "Information about a shipment",
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShipmentViewModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
          }
        ]
      },
      "Orders.Get.Api.Shipment.ShipmentId.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ShipmentId.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ShipmentId.Timeline.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Shipment.ShipmentId.Timeline.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shipment.ShipmentId.Timeline.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Get.Api.Shippingmethod.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Get.Api.Shippingmethod.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Orders.Get.Api.Shippingmethod.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Orders.Get.Api.Shippingmethod.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.InternalShipmentViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "store_order_id": {
            "type": "string",
            "description": "Unique store order id of the shipment",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShipmentViewModel"
          }
        ]
      },
      "Orders.InventoryPickedNotShippedViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expiration_date": {
            "type": "string",
            "description": "Expiration date of the inventory",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "fulfillment_center_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "lot_number": {
            "type": "string",
            "description": "Lot number of the inventory",
            "example": "22222",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.InventoryPickedNotShippedViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Orders.InventoryPickedNotShippedViewModel"
        }
      },
      "Orders.InventoryViewModel": {
        "type": "object",
        "description": "Information about inventory belonging to a store product",
        "additionalProperties": false,
        "properties": {
          "expiration_date": {
            "type": "string",
            "description": "Expiration date of the inventory",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the inventory",
            "format": "int32",
            "additionalProperties": false
          },
          "is_dangerous_goods": {
            "type": "boolean",
            "description": "Is inventory Dangerous Good",
            "example": true,
            "additionalProperties": false
          },
          "lot": {
            "type": "string",
            "description": "Lot number of the inventory",
            "example": "22222",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the inventory item",
            "example": "Medium Blue T-Shirt",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the inventory item to be included in the fulfillment",
            "format": "int32",
            "additionalProperties": false
          },
          "quantity_committed": {
            "type": "integer",
            "description": "The quantity of the inventory item allocated from the assigned fulfillment center and committed to the order. If quantity committed is less than order quantity, then the inventory item is out of stock at the assigned fulfillment center.",
            "format": "int32",
            "additionalProperties": false
          },
          "serial_numbers": {
            "type": "array",
            "description": "Serial number of the inventory",
            "additionalProperties": false,
            "items": {
              "type": "string",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Orders.MeasurementsViewModel": {
        "type": "object",
        "description": "Measurements of a shipment",
        "additionalProperties": false,
        "properties": {
          "depth_in": {
            "type": "integer",
            "description": "Total depth in inches",
            "format": "int32",
            "additionalProperties": false
          },
          "length_in": {
            "type": "integer",
            "description": "Total length in inches",
            "format": "int32",
            "additionalProperties": false
          },
          "total_weight_oz": {
            "type": "integer",
            "description": "Total weight in ounces",
            "format": "int32",
            "additionalProperties": false
          },
          "width_in": {
            "type": "integer",
            "description": "Total width in inches",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Orders.OrderStatu": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Processing",
          "Exception",
          "PartiallyFulfilled",
          "Fulfilled",
          "Cancelled",
          "ImportReview"
        ]
      },
      "Orders.OrderStatus": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Processing",
          "Exception",
          "PartiallyFulfilled",
          "Fulfilled",
          "Cancelled",
          "ImportReview"
        ]
      },
      "Orders.OrderStatusEnum": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "None",
          "Processing",
          "Completed",
          "Exception",
          "OnHold",
          "Cancelled",
          "CleanSweeped",
          "LabeledCreated",
          "ImportReview"
        ]
      },
      "Orders.OrderType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "DTC",
          "DropShip",
          "B2B"
        ]
      },
      "Orders.OrderVerifyAndSaveAddressRequest": {
        "type": "object",
        "description": "Request model for verify and save address for order",
        "example": {
          "CountryCode": "string",
          "IsDomestic": true,
          "IsPoBox": true,
          "IsValid": true,
          "OrderId": 0,
          "OverrideVerification": true,
          "PhoneNumber": "string",
          "StreetAddress1": "string",
          "StreetAddress2": "string",
          "ZipCode": "string",
          "city": "string",
          "email": "string",
          "name": "string",
          "state": "string"
        },
        "additionalProperties": false,
        "required": [
          "city",
          "streetAddress1"
        ],
        "properties": {
          "CountryCode": {
            "type": "string",
            "description": "Country code of customer address",
            "additionalProperties": false,
            "nullable": true
          },
          "IsDomestic": {
            "type": "boolean",
            "description": "IsDomestic flag",
            "additionalProperties": false
          },
          "IsPoBox": {
            "type": "boolean",
            "description": "IsPoBox flag",
            "additionalProperties": false
          },
          "IsValid": {
            "type": "boolean",
            "description": "IsValid flag",
            "additionalProperties": false
          },
          "OrderId": {
            "type": "integer",
            "description": "OrderId",
            "format": "int32",
            "additionalProperties": false
          },
          "OverrideVerification": {
            "type": "boolean",
            "description": "Override Verification Flag",
            "additionalProperties": false
          },
          "PhoneNumber": {
            "type": "string",
            "description": "Phonenumber of customer address",
            "additionalProperties": false,
            "nullable": true
          },
          "StreetAddress1": {
            "type": "string",
            "description": "Street Address 1",
            "minLength": 1,
            "additionalProperties": false
          },
          "StreetAddress2": {
            "type": "string",
            "description": "Streed Address 2",
            "additionalProperties": false,
            "nullable": true
          },
          "ZipCode": {
            "type": "string",
            "description": "Zipcode of customer address",
            "additionalProperties": false,
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City of customer address",
            "minLength": 1,
            "additionalProperties": false
          },
          "email": {
            "type": "string",
            "description": "Customer's email address",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of customer",
            "additionalProperties": false,
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State of customer address",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.OrderViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channel": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ChannelInfoViewModel"
          },
          "created_date": {
            "type": "string",
            "description": "Date this order was created",
            "format": "date-time",
            "additionalProperties": false
          },
          "financials": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.Financials"
          },
          "gift_message": {
            "type": "string",
            "description": "Gift message associated with the order",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the order",
            "format": "int32",
            "additionalProperties": false
          },
          "order_number": {
            "type": "string",
            "description": "User friendly orderId or store order number that will be shown on the Orders Page. If not provided, referenceId will be used",
            "additionalProperties": false,
            "nullable": true
          },
          "products": {
            "type": "array",
            "description": "List of products included in the order",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.ProductInfoViewModel"
            },
            "nullable": true
          },
          "purchase_date": {
            "type": "string",
            "description": "Date this order was purchase by the end user",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "recipient": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.RecipientInfoViewModel"
          },
          "reference_id": {
            "type": "string",
            "description": "Client-defined external unique id of the order",
            "additionalProperties": false,
            "nullable": true
          },
          "retailer_program_data": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.RetailerProgramDataViewModel"
          },
          "shipments": {
            "type": "array",
            "description": "Shipments affiliated with the order",
            "additionalProperties": false,
            "items": {
              "description": "Information about a shipment",
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.ShipmentViewModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
                }
              ]
            },
            "nullable": true
          },
          "shipping_method": {
            "type": "string",
            "description": "Client-defined shipping method",
            "example": "Free 2-day Shipping",
            "additionalProperties": false,
            "nullable": true
          },
          "shipping_terms": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShippingTermsViewModel"
          },
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.OrderStatus"
          },
          "tags": {
            "type": "array",
            "description": "Client-defined order tags",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.TagViewModel"
            },
            "nullable": true
          },
          "type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.OrderType"
          }
        }
      },
      "Orders.OrderViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Orders.OrderViewModel"
        }
      },
      "Orders.PackageMaterialType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Unknown",
          "Box",
          "BubbleMailer",
          "PolyMailer",
          "FragileBox",
          "PosterTube",
          "Custom",
          "Bookfold",
          "OwnContainer",
          "Undefined"
        ]
      },
      "Orders.ParentCartonViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "barcode": {
            "type": "string",
            "description": "Barcode assigned to this carton",
            "additionalProperties": false,
            "nullable": true
          },
          "cartons": {
            "type": "array",
            "description": "Cartons packed inside this parent container",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.CartonViewModel"
            },
            "nullable": true
          },
          "measurements": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.CartonMeasurementsViewModel"
          },
          "type": {
            "type": "string",
            "description": "Type of this carton container",
            "example": "Box or pallet",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.PaymentShipTerm": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Collect",
          "ThirdParty",
          "Prepaid",
          "MerchantResponsible"
        ]
      },
      "Orders.Post.Api.Order.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.Estimate.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.Estimate.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.Estimate.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.Cancel.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.Cancel.Internal.Server.Error.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.Cancel.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.Cancel.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.Cancel.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
        "description": "Information about a shipment",
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShipmentViewModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
          }
        ]
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.OrderId.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.StoreOrderJson.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.OrderId.StoreOrderJson.Created.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.StoreOrderJson.OrderId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.OrderId.StoreOrderJson.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Order.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Order.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Shipment.BulkUpdateTrackingUpload.Bad.Request.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Orders.Post.Api.Shipment.Cancelbulk.Internal.Server.Error.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Shipment.Cancelbulk.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Shipment.Cancelbulk.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Shipment.ShipmentId.Cancel.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Shipment.ShipmentId.Cancel.Internal.Server.Error.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Post.Api.Shipment.ShipmentId.Cancel.OK.OneOf.ShipmentViewModel.InternalShipmentViewModel": {
        "description": "Information about a shipment",
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ShipmentViewModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
          }
        ]
      },
      "Orders.Post.Api.Shipment.ShipmentId.Cancel.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Shipment.ShipmentId.Cancel.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Post.Api.Shipment.ShipmentId.Cancel.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.ProductInfoViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "external_line_id": {
            "type": "integer",
            "description": "Numeric assignment per item. Used as a reference number for multiple purposes such as split orders, split containers, etc.",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the product",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of this product ordered",
            "format": "int32",
            "additionalProperties": false
          },
          "quantity_unit_of_measure_code": {
            "type": "string",
            "description": "Defined standard for measure for an item (each, inner pack, case, pallet).  Values: EA, INP, CS and PL",
            "additionalProperties": false,
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "description": "Unique reference id of the product",
            "example": "TShirtBlueM",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "description": "Stock keeping unit for the product",
            "example": "TShirtBlueM",
            "additionalProperties": false,
            "nullable": true
          },
          "unit_price": {
            "type": "number",
            "description": "Price for one item",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "upc": {
            "type": "string",
            "description": "Universal Product Code - Unique external identifier",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.Put.Api.Shipment.ShipmentId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Orders.Put.Api.Shipment.ShipmentId.OK.OneOfArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "description": "Information about a shipment",
          "additionalProperties": false,
          "oneOf": [
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.ShipmentViewModel"
            },
            {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.InternalShipmentViewModel"
            }
          ]
        }
      },
      "Orders.Put.Api.Shipment.ShipmentId.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.Put.Api.Shipment.ShipmentId.ShipmentId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Orders.RecipientInfoViewModel": {
        "type": "object",
        "description": "Information about the recipient of an order",
        "additionalProperties": false,
        "required": [
          "address",
          "name"
        ],
        "properties": {
          "address": {
            "description": "Address of the recipient",
            "additionalProperties": false,
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.AddressViewModel"
              },
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.RetailerProgramDataAddressViewModel"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Email address of the recipient",
            "format": "email",
            "example": "john@example.com",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the recipient",
            "maxLength": 300,
            "minLength": 1,
            "example": "John Doe",
            "additionalProperties": false
          },
          "phone_number": {
            "type": "string",
            "description": "Phone number of the recipient",
            "maxLength": 50,
            "example": "555-555-5555",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.RecipientViewModel": {
        "type": "object",
        "description": "Information about the recipient of a shipment",
        "additionalProperties": false,
        "properties": {
          "address": {
            "description": "Address of the recipient",
            "additionalProperties": false,
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.AddressViewModel"
              },
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Orders.RetailerProgramDataAddressViewModel"
              }
            ],
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address of the recipient",
            "format": "email",
            "example": "john@example.com",
            "additionalProperties": false,
            "nullable": true
          },
          "full_name": {
            "type": "string",
            "description": "FullName of the recipient",
            "example": "John Doe",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the recipient",
            "example": "John Doe",
            "additionalProperties": false,
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "description": "Phone number of the recipient",
            "format": "tel",
            "example": "555-555-5555",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.RetailerProgramDataAddressViewModel": {
        "type": "object",
        "description": "Address to used when creating a B2B/DropShip order.",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.AddressType"
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.AddressViewModel"
          }
        ]
      },
      "Orders.RetailerProgramDataViewModel": {
        "type": "object",
        "description": "Contains properties that needs to be used for fulfilling B2B/Dropship orders.",
        "additionalProperties": false,
        "required": [
          "purchaseOrderNumber",
          "retailerProgramType"
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "description": "Ship From - Certain retailers want to display the ship from address as their return facility, not Shipbob’s warehouse address        /// \r\nMark For Address - Final destination address",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.RetailerProgramDataAddressViewModel"
            },
            "nullable": true
          },
          "customer_ticket_number": {
            "type": "string",
            "description": "Customer Ticket Number",
            "additionalProperties": false,
            "nullable": true
          },
          "delivery_date": {
            "type": "string",
            "description": "Expected delivery date",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "department": {
            "type": "string",
            "description": "Identifies a merchant's store department",
            "additionalProperties": false,
            "nullable": true
          },
          "doNotShipBeforeDate": {
            "type": "string",
            "description": "The date the retailer does not want the order shipped by.",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "mark_for_store": {
            "type": "string",
            "description": "Store Number",
            "additionalProperties": false,
            "nullable": true
          },
          "purchase_order_number": {
            "type": "string",
            "description": "First initial documentation sent from buyer to seller with item(s) and quantities.",
            "minLength": 1,
            "additionalProperties": false
          },
          "retailer_program_type": {
            "type": "string",
            "description": "Identifies retailer-merchant combination",
            "minLength": 1,
            "additionalProperties": false
          },
          "shipByDate": {
            "type": "string",
            "description": "The date the retailer has requested the order to ship by.",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.ServiceLevelDetailViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id for the service level",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "The name or title of the service level",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.ShipMethodDetailViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Indicates if the shipping method is active",
            "additionalProperties": false
          },
          "default": {
            "type": "boolean",
            "description": "Indicates the shipping method is a ShipBob default shipping method.",
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "description": "Unique id for shipping method.",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the ship method as selected by the merchant and saved in ShipBob’s database (i.e. “ground”). Corresponds to the shipping_method field in the Orders API.",
            "additionalProperties": false,
            "nullable": true
          },
          "service_level": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.ServiceLevelDetailViewModel"
          }
        }
      },
      "Orders.ShipMethodDetailViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Orders.ShipMethodDetailViewModel"
        }
      },
      "Orders.ShipmentActi": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Cancel"
        ]
      },
      "Orders.ShipmentAction": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Cancel"
        ]
      },
      "Orders.ShipmentLogViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "log_type_id": {
            "type": "integer",
            "description": "Log type id of the shipment",
            "format": "int32",
            "additionalProperties": false
          },
          "log_type_name": {
            "type": "string",
            "description": "Name of the log type",
            "additionalProperties": false,
            "nullable": true
          },
          "log_type_text": {
            "type": "string",
            "description": "Summary of log type meaning",
            "additionalProperties": false,
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Specifics data for the event",
            "additionalProperties": {
              "type": "string",
              "additionalProperties": false,
              "nullable": true
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of event",
            "format": "date-time",
            "additionalProperties": false
          }
        }
      },
      "Orders.ShipmentLogViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Orders.ShipmentLogViewModel"
        }
      },
      "Orders.ShipmentProductViewModel": {
        "type": "object",
        "description": "Information about a store product belonging to a shipment",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of the product",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_items": {
            "type": "array",
            "description": "Information about fulfillable inventory items belonging to this product",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.InventoryViewModel"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "example": "Medium Blue T-Shirt",
            "additionalProperties": false,
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "description": "Unique reference id of the product",
            "example": "TShirtBlueM",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "description": "Stock keeping unit for the product",
            "example": "TShirtBlueM",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.ShipmentStatusFilter": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Processing",
          "OnHold",
          "Exception",
          "Picked",
          "Packed",
          "Shipped",
          "InTransit",
          "Delivered",
          "DeliveryException"
        ]
      },
      "Orders.ShipmentStatusViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "location_id": {
            "type": "integer",
            "description": "Unique ShipBob Id of the Fulfillment Center to which the shipment was assigned",
            "format": "int32",
            "additionalProperties": false
          },
          "order_id": {
            "type": "integer",
            "description": "Unique ShipBob Id of the parent order",
            "format": "int64",
            "additionalProperties": false
          },
          "reference_id": {
            "type": "string",
            "description": "The Reference Id ingested with the original order",
            "additionalProperties": false,
            "nullable": true
          },
          "shipment_id": {
            "type": "integer",
            "description": "Unique ShipBob Id of the shipment",
            "format": "int32",
            "additionalProperties": false
          },
          "status_datetime": {
            "type": "string",
            "description": "Datetime when the shipment entered into the requested status (according to request filters)",
            "format": "date-time",
            "additionalProperties": false
          },
          "store_order_id": {
            "type": "string",
            "description": "The Store Order Id ingested with the original order",
            "additionalProperties": false,
            "nullable": true
          },
          "store_order_tags": {
            "type": "string",
            "description": "The raw tag data ingested with the original store order",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.ShipmentStatusViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Orders.ShipmentStatusViewModel"
        }
      },
      "Orders.ShipmentViewModel": {
        "type": "object",
        "description": "Information about a shipment",
        "additionalProperties": false,
        "properties": {
          "actual_fulfillment_date": {
            "type": "string",
            "description": "The datetime of ShipBob’s completion of the fulfillment operation as promised.\r\nCurrently, this means the shipment has been picked, packed, and label has been printed.",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "created_date": {
            "type": "string",
            "description": "Date this shipment was created",
            "format": "date-time",
            "additionalProperties": false
          },
          "delivery_date": {
            "type": "string",
            "description": "The datetime of Shipment delivered to customer.",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "estimated_fulfillment_date": {
            "type": "string",
            "description": "The datetime of ShipBob’s commitment for completing\r\nthe shipment and handing to the carrier for delivery.",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "estimated_fulfillment_date_status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.FulfillmentStatus"
          },
          "gift_message": {
            "type": "string",
            "description": "Gift message associated with the shipment",
            "maxLength": 500,
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the shipment",
            "format": "int32",
            "additionalProperties": false
          },
          "insurance_value": {
            "type": "number",
            "description": "Monetary amount that this shipment was insured for",
            "format": "currency",
            "additionalProperties": false,
            "nullable": true
          },
          "invoice_amount": {
            "type": "number",
            "description": "Monetary amount that was invoiced for this shipment",
            "format": "currency",
            "additionalProperties": false,
            "nullable": true
          },
          "invoice_currency_code": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "is_tracking_uploaded": {
            "type": "boolean",
            "description": "Indicates whether the Shipment was marked with tracking information\r\nuploaded to a third-party system where the order originated.",
            "additionalProperties": false
          },
          "last_tracking_update_at": {
            "type": "string",
            "description": "Timestamp for the last time this shipment had a tracking update",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "last_update_at": {
            "type": "string",
            "description": "Date this shipment was last updated",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "location": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.FulfillmentCenterViewModel"
          },
          "measurements": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.MeasurementsViewModel"
          },
          "order_id": {
            "type": "integer",
            "description": "Id of the order this shipment belongs to",
            "format": "int32",
            "additionalProperties": false
          },
          "package_material_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.PackageMaterialType"
          },
          "parent_cartons": {
            "type": "array",
            "description": "Carton information for this shipment",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.ParentCartonViewModel"
            },
            "nullable": true
          },
          "products": {
            "type": "array",
            "description": "Information about the products contained in this shipment",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.ShipmentProductViewModel"
            },
            "nullable": true
          },
          "recipient": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.RecipientViewModel"
          },
          "reference_id": {
            "type": "string",
            "description": "Client-defined external unique id of the order this shipment belongs to",
            "additionalProperties": false,
            "nullable": true
          },
          "require_signature": {
            "type": "boolean",
            "description": "If a shipment requires signature",
            "additionalProperties": false
          },
          "ship_option": {
            "type": "string",
            "description": "Name of the shipping option used for this shipment",
            "example": "Standard",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.OrderStatusEnum"
          },
          "status_details": {
            "type": "array",
            "description": "Additional details about the shipment status",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Orders.StatusDetailViewModel"
            },
            "nullable": true
          },
          "tracking": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.TrackingViewModel"
          }
        }
      },
      "Orders.ShippingTermsViewModel": {
        "type": "object",
        "description": "Contains shipping properties that need to be used for fulfilling an order.",
        "additionalProperties": false,
        "properties": {
          "carrier_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.CarrierShipType"
          },
          "payment_term": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.PaymentShipTerm"
          }
        }
      },
      "Orders.SortOrder": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Newest",
          "Oldest"
        ]
      },
      "Orders.StatusDetailViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "description": "Describes what the status detail means",
            "additionalProperties": false,
            "nullable": true
          },
          "exception_fulfillment_center_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "extra_information": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Orders.StatusInformationViewModel"
          },
          "id": {
            "type": "integer",
            "description": "The id of the status detail",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "description": "Inventory Id the detail applies to (if applicable)",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Short name of the status detail",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.StatusInformationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "validation_messages": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "string",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Orders.TagViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The key of the tag",
            "maxLength": 50,
            "minLength": 1,
            "example": "Handling instructions",
            "additionalProperties": false
          },
          "value": {
            "type": "string",
            "description": "The value of the tag",
            "maxLength": 500,
            "minLength": 1,
            "example": "Fragile",
            "additionalProperties": false
          }
        }
      },
      "Orders.TrackingViewModel": {
        "type": "object",
        "description": "Tracking information for a shipment",
        "additionalProperties": false,
        "properties": {
          "bol": {
            "type": "string",
            "description": "Bill of lading (BOL) number. Document acknowledging receipt of cargo for shipment.",
            "additionalProperties": false,
            "nullable": true
          },
          "carrier": {
            "type": "string",
            "description": "Carrier of the shipment",
            "example": "USPS",
            "additionalProperties": false,
            "nullable": true
          },
          "carrier_service": {
            "type": "string",
            "description": "The carrier's service which was used for this shipment",
            "example": "Priority",
            "additionalProperties": false,
            "nullable": true
          },
          "pro_number": {
            "type": "string",
            "description": "Tracking number used for freight carriers",
            "additionalProperties": false,
            "nullable": true
          },
          "scac": {
            "type": "string",
            "description": "Standard Carrier Alpha Code (SCAC). Unique 2-4 letter code used to identify transportation companies.",
            "additionalProperties": false,
            "nullable": true
          },
          "shipping_date": {
            "type": "string",
            "description": "Date freight was shipped on",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number of the shipment",
            "example": "860C8CDC8F0B4FC7AB69AC86C20539EC",
            "additionalProperties": false,
            "nullable": true
          },
          "tracking_url": {
            "type": "string",
            "description": "URL to the website where a shipment can be tracked",
            "example": "https://www.example.com/tracking?id=860C8CDC8F0B4FC7AB69AC86C20539EC",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Orders.UpdateShipmentModel": {
        "type": "object",
        "description": "Model for Updating multiple shipments of the same Order",
        "example": {
          "is_tracking_uploaded": true
        },
        "additionalProperties": false,
        "properties": {
          "is_tracking_uploaded": {
            "type": "boolean",
            "description": "Indicates whether the Shipment was marked with tracking information\r\nuploaded to a third-party system where the order originated.",
            "additionalProperties": false
          }
        }
      },
      "Products.AdditionalHazmatAttributesRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "charge_state_percentage": {
            "type": "number",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "container_metal": {
            "type": "boolean",
            "additionalProperties": false,
            "nullable": true
          },
          "lithium_battery_packaging": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "lithium_battery_type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "magnet": {
            "type": "boolean",
            "additionalProperties": false,
            "nullable": true
          },
          "net_volume": {
            "type": "number",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "net_weight": {
            "type": "number",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.AdditionalHazmatAttributesViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "charge_state_percentage": {
            "type": "number",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "container_metal": {
            "type": "boolean",
            "additionalProperties": false,
            "nullable": true
          },
          "lithium_battery_packaging": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "lithium_battery_type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "magnet": {
            "type": "boolean",
            "additionalProperties": false,
            "nullable": true
          },
          "net_volume": {
            "type": "number",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "net_weight": {
            "type": "number",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.AmazonChannelMetadataRequestModel": {
        "type": "object",
        "description": "Amazon Sales Channel Information with custom Amazon Fields",
        "additionalProperties": false,
        "properties": {
          "asin": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "fnsku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "fulfillment_channel": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "platform": {
            "type": "string",
            "readOnly": true,
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
          }
        ]
      },
      "Products.AmazonChannelMetadataViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "asin": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "fnsku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "fulfillment_channel": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ChannelMetadataViewModel"
          }
        ]
      },
      "Products.ApplicableCategoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "sub_category_ids": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "integer",
              "format": "int32",
              "additionalProperties": false
            },
            "nullable": true
          }
        }
      },
      "Products.AssociatedBundlesViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "product_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "variant_sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.BaseChannelMetadataRequestModel": {
        "type": "object",
        "description": "Standard Channel Metadata Record to store SellerSKU for a Sales Channel",
        "additionalProperties": false,
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ChannelMetadataRequestModel"
          }
        ]
      },
      "Products.BaseProductRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "category_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sub_category_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "type_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Products.BaseProductVariantRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "barcode": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "bundle_definition": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.BundleDefinitionRequestModel"
            },
            "nullable": true
          },
          "channel_metadata": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.AmazonChannelMetadataRequestModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.BigCommerceChannelMetadataRequestModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ShopifyChannelMetadataRequestModel"
                }
              ]
            },
            "nullable": true
          },
          "customs": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.CustomsRequestModel"
          },
          "dimension": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.DimensionRequestModel"
          },
          "fulfillment_settings": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.FulfillmentSettingsRequestModel"
          },
          "gtin": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "is_digital": {
            "type": "boolean",
            "additionalProperties": false
          },
          "lot_information": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.LotInformationRequestModel"
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "packaging_material_type_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "packaging_requirement_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "return_preferences": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ReturnPreferencesRequestModel"
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "upc": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Products.BaseTaxonomyViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "path": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.BaseViewRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "column_definitions": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.ColumnDefinitionModel"
            },
            "nullable": true
          },
          "filters": {
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "sort": {
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.BigCommerceChannelMetadataRequestModel": {
        "type": "object",
        "description": "BigCommerce Sales Channel Information with custom Amazon Fields",
        "additionalProperties": false,
        "properties": {
          "platform": {
            "type": "string",
            "readOnly": true,
            "additionalProperties": false,
            "nullable": true
          },
          "platform_product_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
          }
        ]
      },
      "Products.BigCommerceChannelMetadataViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "platform_product_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ChannelMetadataViewModel"
          }
        ]
      },
      "Products.BundleDefinitionRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        }
      },
      "Products.BundleDefinitionViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "variant_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "variant_sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.CategoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "created_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sub_categories": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.SubCategoryViewModel"
            },
            "nullable": true
          },
          "updated_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          }
        }
      },
      "Products.CategoryViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.CategoryViewModel"
        }
      },
      "Products.ChannelMetadataRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channel_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "currency": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "is_inventory_sync_enabled": {
            "type": "boolean",
            "additionalProperties": false
          },
          "legacy_product_id": {
            "type": "integer",
            "readOnly": true,
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "platform": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_identifier": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_inventory_item_id": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "seller_sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ChannelMetadataViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channel_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "channel_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "currency": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "is_inventory_sync_enabled": {
            "type": "boolean",
            "additionalProperties": false
          },
          "legacy_product_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "platform": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_identifier": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "platform_inventory_item_id": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "seller_sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ChildTaxonomyViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "has_children": {
            "type": "boolean",
            "additionalProperties": false
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseTaxonomyViewModel"
          }
        ]
      },
      "Products.ColumnDefinitionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ConvertVariantToBundleRequest": {
        "type": "object",
        "example": {
          "bundle_definition": [
            {
              "quantity": 0,
              "variant_id": 0
            }
          ],
          "channel_metadata": [
            {
              "asin": "string",
              "channel_id": 0,
              "currency": "string",
              "fnsku": "string",
              "fulfillment_channel": "string",
              "id": 0,
              "is_inventory_sync_enabled": true,
              "legacy_product_id": 0,
              "platform": "string",
              "platform_identifier": "string",
              "platform_inventory_item_id": "string",
              "price": 0.1,
              "seller_sku": "string"
            }
          ],
          "name": "string",
          "sku": "string"
        },
        "additionalProperties": false,
        "properties": {
          "bundle_definition": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.BundleDefinitionRequestModel"
            },
            "nullable": true
          },
          "channel_metadata": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.AmazonChannelMetadataRequestModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.BigCommerceChannelMetadataRequestModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ShopifyChannelMetadataRequestModel"
                }
              ]
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.CreateProductRequestModel": {
        "type": "object",
        "example": {
          "category_id": 0,
          "name": "string",
          "sub_category_id": 0,
          "type_id": 0,
          "variants": [
            {
              "barcode": "string",
              "bundle_definition": [
                {
                  "quantity": 0,
                  "variant_id": 0
                }
              ],
              "channel_metadata": [
                {
                  "asin": "string",
                  "channel_id": 0,
                  "currency": "string",
                  "fnsku": "string",
                  "fulfillment_channel": "string",
                  "id": 0,
                  "is_inventory_sync_enabled": true,
                  "legacy_product_id": 0,
                  "platform": "string",
                  "platform_identifier": "string",
                  "platform_inventory_item_id": "string",
                  "price": 0.1,
                  "seller_sku": "string"
                }
              ],
              "customs": {
                "country_code_of_origin": "string",
                "description": "string",
                "hs_tariff_code": "string",
                "is321_eligible": true,
                "value": 0
              },
              "dimension": {
                "height": 0.1,
                "length": 0.1,
                "width": 0.1
              },
              "fulfillment_settings": {
                "dangerous_goods": true,
                "is_bpm_parcel": true,
                "is_case_pick": true,
                "msds_url": "string",
                "requires_prop65": true,
                "serial_scan": {
                  "exact_character_length": 0,
                  "is_enabled": true,
                  "prefix": "string",
                  "suffix": "string"
                }
              },
              "gtin": "string",
              "is_digital": true,
              "lot_information": {
                "is_lot": true,
                "minimum_shelf_life_days": 0
              },
              "name": "string",
              "packaging_material_type_id": 0,
              "packaging_requirement_id": 0,
              "return_preferences": {
                "backup_action_id": 0,
                "instructions": "string",
                "primary_action_id": 0,
                "return_to_sender_backup_action_id": 0,
                "return_to_sender_primary_action_id": 0
              },
              "sku": "string",
              "status_id": 0,
              "upc": "string",
              "weight": 0.1
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "variants": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.CreateProductVariantRequestModel"
            },
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseProductRequestModel"
          }
        ]
      },
      "Products.CreateProductVariantRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseProductVariantRequestModel"
          }
        ]
      },
      "Products.CreateProductVariantRequestModelArray": {
        "type": "array",
        "example": [
          {
            "barcode": "string",
            "bundle_definition": [
              {
                "quantity": 0,
                "variant_id": 0
              }
            ],
            "channel_metadata": [
              {
                "asin": "string",
                "channel_id": 0,
                "currency": "string",
                "fnsku": "string",
                "fulfillment_channel": "string",
                "id": 0,
                "is_inventory_sync_enabled": true,
                "legacy_product_id": 0,
                "platform": "string",
                "platform_identifier": "string",
                "platform_inventory_item_id": "string",
                "price": 0.1,
                "seller_sku": "string"
              }
            ],
            "customs": {
              "country_code_of_origin": "string",
              "description": "string",
              "hs_tariff_code": "string",
              "is321_eligible": true,
              "value": 0
            },
            "dimension": {
              "height": 0.1,
              "length": 0.1,
              "width": 0.1
            },
            "fulfillment_settings": {
              "dangerous_goods": true,
              "is_bpm_parcel": true,
              "is_case_pick": true,
              "msds_url": "string",
              "requires_prop65": true,
              "serial_scan": {
                "exact_character_length": 0,
                "is_enabled": true,
                "prefix": "string",
                "suffix": "string"
              }
            },
            "gtin": "string",
            "is_digital": true,
            "lot_information": {
              "is_lot": true,
              "minimum_shelf_life_days": 0
            },
            "name": "string",
            "packaging_material_type_id": 0,
            "packaging_requirement_id": 0,
            "return_preferences": {
              "backup_action_id": 0,
              "instructions": "string",
              "primary_action_id": 0,
              "return_to_sender_backup_action_id": 0,
              "return_to_sender_primary_action_id": 0
            },
            "sku": "string",
            "status_id": 0,
            "upc": "string",
            "weight": 0.1
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.CreateProductVariantRequestModel"
        }
      },
      "Products.CreateViewRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseViewRequestModel"
          }
        ]
      },
      "Products.CreateViewRequestModelArray": {
        "type": "array",
        "example": [
          {
            "column_definitions": [
              {
                "key": "string"
              }
            ],
            "filters": null,
            "name": "string",
            "order": 0,
            "sort": null
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.CreateViewRequestModel"
        }
      },
      "Products.CustomsRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "country_code_of_origin": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "description": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "hs_tariff_code": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "is321_eligible": {
            "type": "boolean",
            "additionalProperties": false
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.CustomsViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "country_code_of_origin": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "currency": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "description": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "hs_tariff_code": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "is321_eligible": {
            "type": "boolean",
            "additionalProperties": false
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.Delete.Api.Internal.View.ViewId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Delete.Api.Internal.View.ViewId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Delete.Api.Internal.View.ViewId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Delete.Api.Internal.View.ViewId.ViewId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Delete.Api.Product.ProductId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Delete.Api.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Delete.Api.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Delete.Api.Product.ProductId.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.ChannelMetadataId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Delete.Api.Variant.VariantId.ChannelMetadata.ChannelMetadataId.VariantId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.DimensionRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "height": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "length": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "width": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Products.DimensionViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "height": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "length": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          },
          "unit": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "width": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Products.EnumViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.FulfillmentSettingsRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dangerous_goods": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_bpm_parcel": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_case_pick": {
            "type": "boolean",
            "additionalProperties": false
          },
          "msds_url": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "requires_prop65": {
            "type": "boolean",
            "additionalProperties": false
          },
          "serial_scan": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.SerialScanRequestModel"
          }
        }
      },
      "Products.FulfillmentSettingsViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dangerous_goods": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_bpm_parcel": {
            "type": "boolean",
            "additionalProperties": false
          },
          "is_case_pick": {
            "type": "boolean",
            "additionalProperties": false
          },
          "msds_url": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "requires_prop65": {
            "type": "boolean",
            "additionalProperties": false
          },
          "serial_scan": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.SerialScanViewModel"
          }
        }
      },
      "Products.Get.Api.Category.Status.String": {
        "type": "string",
        "default": "",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Get.Api.Product.Barcode.Int": {
        "type": "integer",
        "description": "Barcode Associated with variant",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.CategoryIds.List.Int": {
        "type": "array",
        "description": "List of Category Ids associated with product",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.ChannelIds.List.Int": {
        "type": "array",
        "description": "Looks for Products variants by their channel IDs",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.HasDigitalVariants.Boolea": {
        "description": "Looks for Products with/without digital variants",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.HasDigitalVariants.Boolean": {
        "type": "boolean",
        "description": "Looks for Products with/without digital variants",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.HasVariants.Boolea": {
        "description": "Looks for Products with/without variants",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.HasVariants.Boolean": {
        "type": "boolean",
        "description": "Looks for Products with/without variants",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.InventoryId.List.Int": {
        "type": "array",
        "description": "Looks for variants by its associated inventory id",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.LegacyIds.List.Int": {
        "type": "array",
        "description": "Looks for Products with by Legacy Product Id(s)",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.Name.String": {
        "type": "string",
        "description": "Looks for Products/Variants by name",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.OnHand.Integer": {
        "type": "integer",
        "description": "Looks for Products with inventory",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.PlatformIds.List.String": {
        "type": "array",
        "description": "Looks for Products variants by their external Platform IDs",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.ProductId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Get.Api.Product.ProductId.List.Int": {
        "type": "array",
        "description": "Looks for Products with an assigned Id",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.ProductId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.ProductId.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.ProductId.Variants.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Get.Api.Product.ProductId.Variants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.ProductId.Variants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.ProductId.Variants.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.ProductType.Integer": {
        "type": "integer",
        "description": "Looks for Products by type",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.SKU.String": {
        "type": "string",
        "description": "Looks for Products that match the provided Sku query",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.SalesChannel.List.String": {
        "type": "array",
        "description": "Looks for Products variants assigned to a platform/sales channel ",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.Search.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Get.Api.Product.Search.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "default": 25,
        "additionalProperties": false
      },
      "Products.Get.Api.Product.Search.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.Search.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.Product.Search.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "default": 1,
        "additionalProperties": false
      },
      "Products.Get.Api.Product.Search.ProductTypeId.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.Search.SearchText.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.SellerSKUEvaludator.String": {
        "type": "string",
        "description": "Looks for Products that match the provided Seller query",
        "additionalProperties": false
      },
      "Products.Get.Api.Product.VariantId.List.Int": {
        "type": "array",
        "description": "Looks for products that contain a variant with the given ID",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "additionalProperties": false
        }
      },
      "Products.Get.Api.Product.VariantStatus.String": {
        "type": "string",
        "description": "Looks for Products with variants that contain provided status",
        "additionalProperties": false
      },
      "Products.Get.Api.V2.Taxonomy.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Id.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Id.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Products.Get.Api.V2.Taxonomy.Id.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Id.Parent.Forbidden.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Id.Parent.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Products.Get.Api.V2.Taxonomy.Id.Parent.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Id.Parent.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Id.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V2.Taxonomy.Search.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Products.Get.Api.V2.Taxonomy.Unauthorized.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Get.Api.V3.Product.Inventory.InventoryId.InventoryId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Get.Api.V3.Product.Inventory.InventoryId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.HttpValidationProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            },
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          }
        ]
      },
      "Products.HttpValidationProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            },
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          }
        ]
      },
      "Products.InventoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "on_hand_qty": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Products.LotInformationRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "is_lot": {
            "type": "boolean",
            "additionalProperties": false
          },
          "minimum_shelf_life_days": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.LotInformationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "is_lot": {
            "type": "boolean",
            "additionalProperties": false
          },
          "minimum_shelf_life_days": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.MergeVariantRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        }
      },
      "Products.MergeVariantRequestModelArray": {
        "type": "array",
        "example": [
          {
            "id": 0
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.MergeVariantRequestModel"
        }
      },
      "Products.MergedChildrenViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channel_ids": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "integer",
              "format": "int64",
              "additionalProperties": false
            },
            "nullable": true
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "variant_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.MigrateChannelMetadataRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the Channel Metadata record to be moved",
            "format": "int64",
            "additionalProperties": false
          },
          "seller_sku": {
            "type": "string",
            "description": "New SKU for the Channel Metadata record (optional)",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.MigrateChannelMetadataRequestModelArray": {
        "type": "array",
        "example": [
          {
            "id": 0,
            "seller_sku": "string"
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.MigrateChannelMetadataRequestModel"
        }
      },
      "Products.MigrateChannelMetadataToNewProductRequest": {
        "type": "object",
        "example": {
          "category_id": 0,
          "channel_metadata": [
            {
              "id": 0,
              "seller_sku": "string"
            }
          ],
          "product_name": "string",
          "sku": "string",
          "sub_category_id": 0
        },
        "additionalProperties": false,
        "properties": {
          "category_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "channel_metadata": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.MigrateChannelMetadataRequestModel"
            },
            "nullable": true
          },
          "product_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sub_category_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.MigrateVariantRequestModel": {
        "type": "object",
        "example": {
          "category_id": 0,
          "name": "string",
          "product_id": 0,
          "sub_category_id": 0,
          "variants": [
            {
              "id": 0,
              "name": "string"
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "category_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "product_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "sub_category_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "variants": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.VariantToMigrate"
            },
            "nullable": true
          }
        }
      },
      "Products.PackagingMaterialTypeViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.PackagingRequirementViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "applicable_categories": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.ApplicableCategoryViewModel"
            },
            "nullable": true
          },
          "applicable_packaging_material_types": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.PackagingMaterialTypeViewModel"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.PackagingRequirementViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.PackagingRequirementViewModel"
        }
      },
      "Products.Patch.Api.V3.Product.ProductId.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Patch.Api.V3.Product.ProductId.Variants.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Post.Api.Product.MigrateVariants.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Post.Api.Product.MigrateVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Post.Api.Product.MigrateVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Post.Api.Product.ProductId.MigrateVariants.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Post.Api.Product.ProductId.MigrateVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Post.Api.Product.ProductId.MigrateVariants.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Post.Api.Product.ProductId.MigrateVariants.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Post.Api.Product.ProductId.Variants.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Post.Api.Variant.VariantId.ChannelMetadata.Migrate.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Post.Api.Variant.VariantId.ChannelMetadata.Migrate.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Post.Api.Variant.VariantId.ChannelMetadata.Migrate.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Post.Api.Variant.VariantId.ChannelMetadata.Migrate.VariantId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Post.Api.Variant.VariantId.ChannelMetadata.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel": {
        "example": {
          "asin": "string",
          "channel_id": 0,
          "currency": "string",
          "fnsku": "string",
          "fulfillment_channel": "string",
          "id": 0,
          "is_inventory_sync_enabled": true,
          "legacy_product_id": 0,
          "platform": "string",
          "platform_identifier": "string",
          "platform_inventory_item_id": "string",
          "price": 0.1,
          "seller_sku": "string"
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.AmazonChannelMetadataRequestModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BigCommerceChannelMetadataRequestModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ShopifyChannelMetadataRequestModel"
          }
        ]
      },
      "Products.Post.Api.Variant.VariantId.ChannelMetadata.VariantId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Post.Api.Variant.VariantId.ConvertToBundle.VariantId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Post.Api.Variant.VariantId.Merge.VariantId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.ProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ProductByInventoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "has_variants": {
            "type": "boolean",
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "variant_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        }
      },
      "Products.ProductViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "category": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "sub_category": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "updated_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "variants": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.VariantViewModel"
            },
            "nullable": true
          }
        }
      },
      "Products.ProductViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.ProductViewModel"
        }
      },
      "Products.Put.Api.Product.ProductId.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Put.Api.Product.ProductId.Variants.ProductId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.ChannelMetadataId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Not.Found.OneOf.ProblemDetails.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ProblemDetails"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.HttpValidationProblemDetails"
          }
        ]
      },
      "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.Request.OneOf.AmazonChannelMetadataRequestModel.BaseChannelMetadataRequestModel.BigCommerceChannelMetadataRequestModel.ShopifyChannelMetadataRequestModel": {
        "example": {
          "asin": "string",
          "channel_id": 0,
          "currency": "string",
          "fnsku": "string",
          "fulfillment_channel": "string",
          "id": 0,
          "is_inventory_sync_enabled": true,
          "legacy_product_id": 0,
          "platform": "string",
          "platform_identifier": "string",
          "platform_inventory_item_id": "string",
          "price": 0.1,
          "seller_sku": "string"
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.AmazonChannelMetadataRequestModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BigCommerceChannelMetadataRequestModel"
          },
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ShopifyChannelMetadataRequestModel"
          }
        ]
      },
      "Products.Put.Api.V2.Variant.VariantId.Channel.Metadata.ChannelMetadataId.VariantId.Integer": {
        "type": "integer",
        "format": "int64",
        "additionalProperties": false
      },
      "Products.ReturnPreferencesRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "backup_action_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "primary_action_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "return_to_sender_backup_action_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "return_to_sender_primary_action_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ReturnPreferencesViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "backup_action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "instructions": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "primary_action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "return_to_sender_backup_action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "return_to_sender_primary_action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          }
        }
      },
      "Products.SerialScanRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "exact_character_length": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "is_enabled": {
            "type": "boolean",
            "additionalProperties": false
          },
          "prefix": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.SerialScanViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "exact_character_length": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "is_enabled": {
            "type": "boolean",
            "additionalProperties": false
          },
          "prefix": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.ShopifyChannelMetadataRequestModel": {
        "type": "object",
        "description": "Shopify Sales Channel Information",
        "additionalProperties": false,
        "properties": {
          "platform": {
            "type": "string",
            "readOnly": true,
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseChannelMetadataRequestModel"
          }
        ]
      },
      "Products.ShopifyChannelMetadataViewModel": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ChannelMetadataViewModel"
          }
        ]
      },
      "Products.SubCategoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.TaxonomyInformationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "parent_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "parent_name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "path": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.TaxonomyViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "children": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.ChildTaxonomyViewModel"
            },
            "nullable": true
          },
          "parent": {
            "additionalProperties": false,
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.BaseTaxonomyViewModel"
              },
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.ChildTaxonomyViewModel"
              },
              {
                "additionalProperties": false,
                "$ref": "#/components/schemas/Products.TaxonomyViewModel"
              }
            ],
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseTaxonomyViewModel"
          }
        ]
      },
      "Products.TaxonomyViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.TaxonomyViewModel"
        }
      },
      "Products.UpdateProductRequestModel": {
        "type": "object",
        "description": "The product to update",
        "example": {
          "category_id": 0,
          "id": 0,
          "name": "string",
          "sub_category_id": 0,
          "type_id": 0,
          "variants": [
            {
              "barcode": "string",
              "bundle_definition": [
                {
                  "quantity": 0,
                  "variant_id": 0
                }
              ],
              "channel_metadata": [
                {
                  "asin": "string",
                  "channel_id": 0,
                  "currency": "string",
                  "fnsku": "string",
                  "fulfillment_channel": "string",
                  "id": 0,
                  "is_inventory_sync_enabled": true,
                  "legacy_product_id": 0,
                  "platform": "string",
                  "platform_identifier": "string",
                  "platform_inventory_item_id": "string",
                  "price": 0.1,
                  "seller_sku": "string"
                }
              ],
              "customs": {
                "country_code_of_origin": "string",
                "description": "string",
                "hs_tariff_code": "string",
                "is321_eligible": true,
                "value": 0
              },
              "dimension": {
                "height": 0.1,
                "length": 0.1,
                "width": 0.1
              },
              "fulfillment_settings": {
                "dangerous_goods": true,
                "is_bpm_parcel": true,
                "is_case_pick": true,
                "msds_url": "string",
                "requires_prop65": true,
                "serial_scan": {
                  "exact_character_length": 0,
                  "is_enabled": true,
                  "prefix": "string",
                  "suffix": "string"
                }
              },
              "gtin": "string",
              "id": 0,
              "is_digital": true,
              "lot_information": {
                "is_lot": true,
                "minimum_shelf_life_days": 0
              },
              "name": "string",
              "packaging_material_type_id": 0,
              "packaging_requirement_id": 0,
              "return_preferences": {
                "backup_action_id": 0,
                "instructions": "string",
                "primary_action_id": 0,
                "return_to_sender_backup_action_id": 0,
                "return_to_sender_primary_action_id": 0
              },
              "sku": "string",
              "status_id": 0,
              "upc": "string",
              "weight": 0.1
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique reference ID for the product",
            "format": "int64",
            "additionalProperties": false
          },
          "variants": {
            "type": "array",
            "description": "The variants of the product to updated. Products that are not multi-variant will only have one variant",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.UpdateProductVariantRequestModel"
            },
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseProductRequestModel"
          }
        ]
      },
      "Products.UpdateProductRequestModelV3": {
        "type": "object",
        "description": "The product to update",
        "example": {
          "category_id": 0,
          "name": "string",
          "sub_category_id": 0,
          "taxonomy_id": 0,
          "type_id": 0,
          "variants": [
            {
              "additional_hazmat_attributes": {
                "charge_state_percentage": 0.1,
                "container_metal": true,
                "lithium_battery_packaging": "string",
                "lithium_battery_type": "string",
                "magnet": true,
                "net_volume": 0.1,
                "net_weight": 0.1
              },
              "barcode": "string",
              "barcode_sticker_url": "string",
              "bundle_definition": [
                {
                  "quantity": 0,
                  "variant_id": 0
                }
              ],
              "channel_metadata": [
                {
                  "asin": "string",
                  "channel_id": 0,
                  "currency": "string",
                  "fnsku": "string",
                  "fulfillment_channel": "string",
                  "id": 0,
                  "is_inventory_sync_enabled": true,
                  "legacy_product_id": 0,
                  "platform": "string",
                  "platform_identifier": "string",
                  "platform_inventory_item_id": "string",
                  "price": 0.1,
                  "seller_sku": "string"
                }
              ],
              "customs": {
                "country_code_of_origin": "string",
                "description": "string",
                "hs_tariff_code": "string",
                "is321_eligible": true,
                "value": 0
              },
              "dimension": {
                "height": 0.1,
                "length": 0.1,
                "width": 0.1
              },
              "fulfillment_settings": {
                "dangerous_goods": true,
                "is_bpm_parcel": true,
                "is_case_pick": true,
                "msds_url": "string",
                "requires_prop65": true,
                "serial_scan": {
                  "exact_character_length": 0,
                  "is_enabled": true,
                  "prefix": "string",
                  "suffix": "string"
                }
              },
              "gtin": "string",
              "id": 0,
              "is_digital": true,
              "lot_information": {
                "is_lot": true,
                "minimum_shelf_life_days": 0
              },
              "name": "string",
              "packaging_material_type_id": 0,
              "packaging_requirement_id": 0,
              "return_preferences": {
                "backup_action_id": 0,
                "instructions": "string",
                "primary_action_id": 0,
                "return_to_sender_backup_action_id": 0,
                "return_to_sender_primary_action_id": 0
              },
              "sku": "string",
              "status_id": 0,
              "upc": "string",
              "weight": 0.1
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "variants": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.UpdateProductVariantRequestModelV3"
            },
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseProductRequestModel"
          }
        ]
      },
      "Products.UpdateProductVariantRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseProductVariantRequestModel"
          }
        ]
      },
      "Products.UpdateProductVariantRequestModelArray": {
        "type": "array",
        "example": [
          {
            "barcode": "string",
            "bundle_definition": [
              {
                "quantity": 0,
                "variant_id": 0
              }
            ],
            "channel_metadata": [
              {
                "asin": "string",
                "channel_id": 0,
                "currency": "string",
                "fnsku": "string",
                "fulfillment_channel": "string",
                "id": 0,
                "is_inventory_sync_enabled": true,
                "legacy_product_id": 0,
                "platform": "string",
                "platform_identifier": "string",
                "platform_inventory_item_id": "string",
                "price": 0.1,
                "seller_sku": "string"
              }
            ],
            "customs": {
              "country_code_of_origin": "string",
              "description": "string",
              "hs_tariff_code": "string",
              "is321_eligible": true,
              "value": 0
            },
            "dimension": {
              "height": 0.1,
              "length": 0.1,
              "width": 0.1
            },
            "fulfillment_settings": {
              "dangerous_goods": true,
              "is_bpm_parcel": true,
              "is_case_pick": true,
              "msds_url": "string",
              "requires_prop65": true,
              "serial_scan": {
                "exact_character_length": 0,
                "is_enabled": true,
                "prefix": "string",
                "suffix": "string"
              }
            },
            "gtin": "string",
            "id": 0,
            "is_digital": true,
            "lot_information": {
              "is_lot": true,
              "minimum_shelf_life_days": 0
            },
            "name": "string",
            "packaging_material_type_id": 0,
            "packaging_requirement_id": 0,
            "return_preferences": {
              "backup_action_id": 0,
              "instructions": "string",
              "primary_action_id": 0,
              "return_to_sender_backup_action_id": 0,
              "return_to_sender_primary_action_id": 0
            },
            "sku": "string",
            "status_id": 0,
            "upc": "string",
            "weight": 0.1
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.UpdateProductVariantRequestModel"
        }
      },
      "Products.UpdateProductVariantRequestModelV3": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "barcode_sticker_url": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.UpdateProductVariantRequestModel"
          }
        ]
      },
      "Products.UpdateViewRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.BaseViewRequestModel"
          }
        ]
      },
      "Products.UpdateViewRequestModelArray": {
        "type": "array",
        "example": [
          {
            "column_definitions": [
              {
                "key": "string"
              }
            ],
            "filters": null,
            "id": 0,
            "name": "string",
            "order": 0,
            "sort": null
          }
        ],
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.UpdateViewRequestModel"
        }
      },
      "Products.VariantToMigrate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Products.VariantViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channel_metadata": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ChannelMetadataViewModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.AmazonChannelMetadataViewModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.BigCommerceChannelMetadataViewModel"
                },
                {
                  "additionalProperties": false,
                  "$ref": "#/components/schemas/Products.ShopifyChannelMetadataViewModel"
                }
              ]
            },
            "nullable": true
          }
        },
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.VariantViewModelBase"
          }
        ]
      },
      "Products.VariantViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.VariantViewModel"
        }
      },
      "Products.VariantViewModelBase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "associated_bundles": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.AssociatedBundlesViewModel"
            },
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "bundle_definition": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.BundleDefinitionViewModel"
            },
            "nullable": true
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "customs": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.CustomsViewModel"
          },
          "dimension": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.DimensionViewModel"
          },
          "fulfillment_settings": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.FulfillmentSettingsViewModel"
          },
          "gtin": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "inventory": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.InventoryViewModel"
          },
          "is_digital": {
            "type": "boolean",
            "additionalProperties": false
          },
          "lot_information": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.LotInformationViewModel"
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "packaging_material_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "packaging_requirement": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.EnumViewModel"
          },
          "return_preferences": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.ReturnPreferencesViewModel"
          },
          "sku": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "upc": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "updated_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "weight": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Products.WeightViewModel"
          }
        }
      },
      "Products.ViewResponseModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "column_definitions": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Products.ColumnDefinitionModel"
            },
            "nullable": true
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "filters": {
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "sort": {
            "additionalProperties": false,
            "nullable": true
          },
          "updated_on": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false
          }
        }
      },
      "Products.ViewResponseModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Products.ViewResponseModel"
        }
      },
      "Products.WeightViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unit": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "additionalProperties": false
          }
        }
      },
      "Receiving.AddBoxItemToBoxModel": {
        "type": "object",
        "description": "Information about an inventory item contained inside a receiving order box",
        "additionalProperties": false,
        "required": [
          "inventory_id",
          "quantity"
        ],
        "properties": {
          "inventory_id": {
            "type": "integer",
            "description": "Unique inventory id of the items in the box",
            "format": "int32",
            "additionalProperties": false
          },
          "lot_date": {
            "type": "string",
            "description": "Lot expiration date for the items in the box",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "lot_number": {
            "type": "string",
            "description": "Lot number of the items in the box",
            "example": "2222",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the items in the box",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "additionalProperties": false
          }
        }
      },
      "Receiving.AddBoxToOrderModel": {
        "type": "object",
        "description": "Information about a box shipment to be added to a receiving order",
        "additionalProperties": false,
        "required": [
          "box_items",
          "tracking_number"
        ],
        "properties": {
          "box_items": {
            "type": "array",
            "description": "Items contained in this box",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.AddBoxItemToBoxModel"
            },
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number for the box shipment",
            "example": "860C8CDC8F0B4FC7AB69AC86C20539EC",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.AssignOrderToFulfillmentCenterModel": {
        "type": "object",
        "description": "Model containing information that assigns a receiving order to a fulfillment center.\r\nIf the fulfillment center provided is in a receiving hub region, then the response will be the receiving hub location.",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the fulfillment center to assign this receiving order to",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Receiving.BoxItemViewModel": {
        "type": "object",
        "description": "Information about an item contained inside a box as part of a receiving order",
        "additionalProperties": false,
        "properties": {
          "inventory_id": {
            "type": "integer",
            "description": "Unique identifier of the inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "lot_date": {
            "type": "string",
            "description": "Expiration date of the item's lot",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "lot_number": {
            "type": "string",
            "description": "Lot number the item belongs to",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the item included",
            "format": "int32",
            "additionalProperties": false
          },
          "received_quantity": {
            "type": "integer",
            "description": "Quantity of the item that was received after processing the receiving order",
            "format": "int32",
            "additionalProperties": false
          },
          "stowed_quantity": {
            "type": "integer",
            "description": "Quantity of the item that has been stowed",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Receiving.BoxStatu": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Awaiting",
          "Arrived",
          "Completed",
          "Counting",
          "Stowing",
          "Cancelled"
        ]
      },
      "Receiving.BoxStatus": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Awaiting",
          "Arrived",
          "Completed",
          "Counting",
          "Stowing",
          "Cancelled"
        ]
      },
      "Receiving.BoxViewModel": {
        "type": "object",
        "description": "Information about a box shipment included in a receiving order",
        "additionalProperties": false,
        "properties": {
          "arrived_date": {
            "type": "string",
            "description": "Date the box arrived",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "box_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "box_items": {
            "type": "array",
            "description": "Information about the items included in the box",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.BoxItemViewModel"
            },
            "nullable": true
          },
          "box_number": {
            "type": "integer",
            "description": "The number of the box in the receiving order",
            "format": "int32",
            "additionalProperties": false
          },
          "box_status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.BoxStatus"
          },
          "counting_started_date": {
            "type": "string",
            "description": "Date counting of the box's inventory items started",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "received_date": {
            "type": "string",
            "description": "Date the box was received",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number of the box shipment",
            "example": "860C8CDC8F0B4FC7AB69AC86C20539EC",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.BoxViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Receiving.BoxViewModel"
        }
      },
      "Receiving.CreateReceivingOrderModel": {
        "type": "object",
        "description": "Information to create a new receiving order",
        "example": {
          "box_packaging_type": "EverythingInOneBox",
          "boxes": [
            {
              "box_items": [
                {
                  "inventory_id": 0,
                  "lot_date": "2019-08-24T14:15:22Z",
                  "lot_number": "2222",
                  "quantity": 1
                }
              ],
              "tracking_number": "860C8CDC8F0B4FC7AB69AC86C20539EC"
            }
          ],
          "expected_arrival_date": "2019-08-24T14:15:22Z",
          "fulfillment_center": {
            "id": 0
          },
          "package_type": "Package",
          "purchase_order_number": "string"
        },
        "additionalProperties": false,
        "required": [
          "box_packaging_type",
          "boxes",
          "expected_arrival_date",
          "fulfillment_center",
          "package_type"
        ],
        "properties": {
          "box_packaging_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackingType"
          },
          "boxes": {
            "type": "array",
            "description": "Box shipments to be added to this receiving order",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.AddBoxToOrderModel"
            },
            "nullable": true
          },
          "expected_arrival_date": {
            "type": "string",
            "description": "Expected arrival date of all the box shipments in this receiving order",
            "format": "date-time",
            "additionalProperties": false
          },
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.AssignOrderToFulfillmentCenterModel"
          },
          "package_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackageType"
          },
          "purchase_order_number": {
            "type": "string",
            "description": "Purchase order number for this receiving order",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.CreateReceivingOrderRequest": {
        "type": "object",
        "example": {
          "box_packaging_type": "EverythingInOneBox",
          "boxes": [
            {
              "box_items": [
                {
                  "inventory_id": 0,
                  "lot_date": "2019-08-24T14:15:22Z",
                  "lot_number": "string",
                  "quantity": 1
                }
              ],
              "tracking_number": "string"
            }
          ],
          "expected_arrival_date": "2019-08-24T14:15:22Z",
          "fulfillment_center": {
            "id": 0
          },
          "package_type": "Package",
          "purchase_order_number": "string",
          "tags": [
            {
              "name": "string",
              "value": "string"
            }
          ]
        },
        "additionalProperties": false,
        "required": [
          "box_packaging_type",
          "boxes",
          "expected_arrival_date",
          "fulfillment_center",
          "package_type"
        ],
        "properties": {
          "box_packaging_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackingType"
          },
          "boxes": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.AddBoxToOrderModel"
            }
          },
          "expected_arrival_date": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.AssignOrderToFulfillmentCenterModel"
          },
          "package_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackageType"
          },
          "purchase_order_number": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "tags": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.TagModel"
            },
            "nullable": true
          }
        }
      },
      "Receiving.FulfillmentCenterViewModel": {
        "type": "object",
        "description": "Information about a fulfillment center",
        "additionalProperties": false,
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address line one of the fulfillment center",
            "example": "5900 W Ogden Ave",
            "additionalProperties": false,
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address line two of the fulfillment center",
            "example": "Suite 100",
            "additionalProperties": false,
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City the fulfillment center is located in",
            "example": "Cicero",
            "additionalProperties": false,
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country the fulfillment center is located in",
            "example": "USA",
            "additionalProperties": false,
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email contact for the fulfillment center",
            "example": "example@example.com",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier of the fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the fulfillment center",
            "example": "Cicero (IL)",
            "additionalProperties": false,
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "description": "Phone number contact for the fulfillment center",
            "example": "555-555-5555",
            "additionalProperties": false,
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State the fulfillment center is located in",
            "example": "IL",
            "additionalProperties": false,
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "Timezone the fulfillment center is located in",
            "example": "Central Standard Time",
            "additionalProperties": false,
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "description": "Postal code of the fulfillment center",
            "example": "60804",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.FulfillmentCenterViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Receiving.FulfillmentCenterViewModel"
        }
      },
      "Receiving.Get.2.0.Receiving.ExternalSync.Boolean": {
        "type": "boolean",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.FulfillmentCenterIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Receiving.Get.2.0.Receiving.IDs.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Receiving.Get.2.0.Receiving.Id.Boxes.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Id.Boxes.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Boxes.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Id.Labels.Bad.Request.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Labels.Bad.Request.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Labels.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Id.Labels.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Labels.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Labels.OK.String": {
        "type": "string",
        "format": "byte",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Id.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Id.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.InsertEndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.InsertStartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Get.2.0.Receiving.OK.Next.Page.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.OK.Page.Number.Int": {
        "type": "integer",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.OK.Page.Size.Int": {
        "type": "integer",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.OK.Total.Count.Int": {
        "type": "integer",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.OK.Total.Pages.Int": {
        "type": "integer",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Receiving.Get.2.0.Receiving.PurchaseOrderNumbers.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Receiving.Get.Api.Receiving.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Receiving.Get.Api.Receiving.FulfillmentCenterIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Receiving.Get.Api.Receiving.IDs.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Receiving.Get.Api.Receiving.InsertEndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Receiving.Get.Api.Receiving.InsertStartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Receiving.Get.Api.Receiving.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Receiving.Get.Api.Receiving.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 1,
        "additionalProperties": false
      },
      "Receiving.Get.Api.Receiving.PurchaseOrderNumbers.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Receiving.InventoryQuantityViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "expected_quantity",
          "inventory_id",
          "received_quantity",
          "sku",
          "stowed_quantity"
        ],
        "properties": {
          "expected_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "received_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "sku": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          },
          "stowed_quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Receiving.PackageType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Package",
          "Pallet",
          "FloorLoadedContainer"
        ]
      },
      "Receiving.PackingType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "EverythingInOneBox",
          "OneSkuPerBox",
          "MultipleSkuPerBox"
        ]
      },
      "Receiving.Post.2.0.Receiving.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Receiving.Post.2.0.Receiving.Id.Cancel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Receiving.Post.2.0.Receiving.Id.Cancel.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Post.2.0.Receiving.Id.Cancel.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Post.2.0.Receiving.Id.Cancel.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Receiving.Post.2.0.Receiving.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Post.2.0.Receiving.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ValidationProblemDetails"
          }
        ]
      },
      "Receiving.Post.Api.Receiving.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Receiving.Post.Api.Receiving.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Receiving.Post.Api.Receiving.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Receiving.ProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.ReceivingStatu": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Awaiting",
          "Processing",
          "Completed",
          "Cancelled",
          "Incomplete",
          "Arrived",
          "PartiallyArrived",
          "PartiallyArrivedAtHub",
          "ArrivedAtHub",
          "ProcessingAtHub",
          "InternalTransfer"
        ]
      },
      "Receiving.ReceivingStatus": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Awaiting",
          "Processing",
          "Completed",
          "Cancelled",
          "Incomplete",
          "Arrived",
          "PartiallyArrived",
          "PartiallyArrivedAtHub",
          "ArrivedAtHub",
          "ProcessingAtHub",
          "InternalTransfer"
        ]
      },
      "Receiving.ReceivingStatusArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Receiving.ReceivingStatus"
        }
      },
      "Receiving.TagModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "additionalProperties": false
          },
          "value": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "additionalProperties": false
          }
        }
      },
      "Receiving.V2.InventoryQuantityViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expected_quantity": {
            "type": "integer",
            "description": "Quantity of the inventory item submitted in the WRO",
            "format": "int32",
            "additionalProperties": false
          },
          "inventory_id": {
            "type": "integer",
            "description": "ID of the inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "received_quantity": {
            "type": "integer",
            "description": "Quantity of the inventory item received by the warehouse",
            "format": "int32",
            "additionalProperties": false
          },
          "sku": {
            "type": "string",
            "description": "Sku of the inventory item",
            "additionalProperties": false,
            "nullable": true
          },
          "stowed_quantity": {
            "type": "integer",
            "description": "Quantity of the inventory item stowed by the warehouse",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Receiving.V2.WarehouseReceivingOrderViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "box_labels_uri": {
            "type": "string",
            "description": "URL to the packing slip to be included in each box shipment for this receiving order",
            "example": "https://api.shipbob.com/1.0/receiving/1/labels",
            "additionalProperties": false,
            "nullable": true
          },
          "box_packaging_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackingType"
          },
          "expected_arrival_date": {
            "type": "string",
            "description": "Expected date that all packages will have arrived",
            "format": "date-time",
            "additionalProperties": false
          },
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.FulfillmentCenterViewModel"
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the warehouse receiving order",
            "format": "int32",
            "additionalProperties": false
          },
          "insert_date": {
            "type": "string",
            "description": "Insert date of the receiving order",
            "format": "date-time",
            "additionalProperties": false
          },
          "inventory_quantities": {
            "type": "array",
            "description": "Inventory items and quantities within the WRO",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.V2.InventoryQuantityViewModel"
            },
            "nullable": true
          },
          "last_updated_date": {
            "type": "string",
            "description": "Last date the receiving order was updated",
            "format": "date-time",
            "additionalProperties": false
          },
          "package_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackageType"
          },
          "purchase_order_number": {
            "type": "string",
            "description": "Purchase order number for a receiving order",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ReceivingStatus"
          }
        }
      },
      "Receiving.V2.WarehouseReceivingOrderViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Receiving.V2.WarehouseReceivingOrderViewModel"
        }
      },
      "Receiving.ValidationProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "errors": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "type": "array",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            },
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.ValidationProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "errors": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "type": "array",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            },
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Receiving.WarehouseReceivingOrderViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "box_labels_uri",
          "id",
          "insert_date",
          "inventory_quantities"
        ],
        "properties": {
          "box_labels_uri": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          },
          "box_packaging_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackingType"
          },
          "expected_arrival_date": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.FulfillmentCenterViewModel"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "insert_date": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "inventory_quantities": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.InventoryQuantityViewModel"
            }
          },
          "last_updated_date": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "package_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.PackageType"
          },
          "purchase_order_number": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Receiving.ReceivingStatus"
          },
          "tags": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Receiving.TagModel"
            },
            "nullable": true
          }
        }
      },
      "Receiving.WarehouseReceivingOrderViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Receiving.WarehouseReceivingOrderViewModel"
        }
      },
      "Returns.ChannelInfoModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.ChannelInfoViewModel": {
        "type": "object",
        "description": "Created by channel metadata",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique id of the channel",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the channel",
            "example": "ShipBobs-Shopify-Store",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.CreateReturnRequest": {
        "type": "object",
        "example": {
          "fulfillmentCenter": {
            "id": 0,
            "name": "string"
          },
          "inventory": [
            {
              "id": 0,
              "lotDate": "2019-08-24T14:15:22Z",
              "lotNumber": "string",
              "quantity": 0,
              "requestedAction": 0
            }
          ],
          "originalShipmentId": 0,
          "referenceId": "string",
          "trackingNumber": "string"
        },
        "additionalProperties": false,
        "required": [
          "fulfillment_center",
          "inventory",
          "reference_id"
        ],
        "properties": {
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.FulfillmentCenterModel"
          },
          "inventory": {
            "type": "array",
            "minItems": 1,
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.ReturnInventoryRequest"
            }
          },
          "original_shipment_id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "additionalProperties": false
          },
          "tags": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.TagModel"
            },
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "maxLength": 500,
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.CreateReturnViewModel": {
        "type": "object",
        "example": {
          "fulfillment_center": {
            "id": 0,
            "name": "Cicero (IL)"
          },
          "inventory": [
            {
              "id": 111222,
              "quantity": 1,
              "requested_action": "Default"
            }
          ],
          "original_shipment_id": 123456,
          "reference_id": "ShipBob_Return_123",
          "tracking_number": "1Z9999999999999999"
        },
        "additionalProperties": false,
        "required": [
          "fulfillment_center",
          "inventory",
          "reference_id"
        ],
        "properties": {
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.FulfillmentCenterViewModel"
          },
          "inventory": {
            "type": "array",
            "description": "Array of inventory items being returned",
            "minLength": 1,
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.ReturnInventoryViewModel"
            },
            "nullable": true
          },
          "original_shipment_id": {
            "type": "integer",
            "description": "Shipment from which the items in the return originated",
            "format": "int32",
            "example": 123456,
            "additionalProperties": false,
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "description": "Client-defined external unique identifier for the return order",
            "maxLength": 50,
            "example": "ShipBob_Return_123",
            "additionalProperties": false,
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number for the return shipment",
            "maxLength": 500,
            "example": "1Z9999999999999999",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.Facility": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.FulfillmentCenterModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.FulfillmentCenterViewModel": {
        "type": "object",
        "description": "Information about a fulfillment center",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the fulfillment center",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the fulfillment center",
            "example": "Cicero (IL)",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.Get.1.0.Return.EndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.FulfillmentCenterIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.1.0.Return.IDs.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.1.0.Return.Id.Statushistory.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.Id.Statushistory.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Get.1.0.Return.Id.Statushistory.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Get.1.0.Return.Id.Statushistory.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.1.0.Return.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.OK.Page.Number.Int": {
        "type": "integer",
        "description": "Number of the current page",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.OK.Page.Size.Int": {
        "type": "integer",
        "description": "Number of results per page",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.OK.Total.Count.Int": {
        "type": "integer",
        "description": "Total number of results",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.OK.Total.Pages.Int": {
        "type": "integer",
        "description": "Total number of pages of results",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.OriginalShipmentIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.1.0.Return.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.ReferenceIds.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Returns.Get.1.0.Return.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.StartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Returns.Get.1.0.Return.TrackingNumbers.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.Public.Id.Api.Version.String": {
        "type": "string",
        "default": "1.0",
        "additionalProperties": false
      },
      "Returns.Get.Api.Public.Id.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.Public.Id.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.EndDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.FulfillmentCenterIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.Return.IDs.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.Return.Id.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.Id.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Returns.Get.Api.Return.Id.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.Id.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.InventoryIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.Return.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.OK.Next.Page.String": {
        "type": "string",
        "description": "The href of the next page of results, if there is a next page",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.OK.Page.Number.Int": {
        "type": "integer",
        "description": "Number of the current page",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.OK.Page.Size.Int": {
        "type": "integer",
        "description": "Number of results per page",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.OK.Total.Count.Int": {
        "type": "integer",
        "description": "Total number of results",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.OK.Total.Pages.Int": {
        "type": "integer",
        "description": "Total number of pages of results",
        "format": "",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.OriginalShipmentIds.IntegerArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "integer",
          "format": "int32",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.Return.Page.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.ReferenceIds.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.Return.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.StartDate.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Returns.Get.Api.Return.TrackingNumbers.StringArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "type": "string",
          "additionalProperties": false
        }
      },
      "Returns.Get.Api.V2.Public.Search.Cursor.Integer": {
        "type": "integer",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 1,
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.End.Date.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Fulfillment.Center.Ids.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Ids.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Inventory.Ids.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Limit.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Original.Shipment.Ids.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Reference.Ids.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Return.Actions.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Return.Types.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Sort.By.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Start.Date.String": {
        "type": "string",
        "format": "date-time",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Status.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Store.Order.Ids.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Get.Api.V2.Public.Search.Tracking.Numbers.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.InventoryItemViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action_requested": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnActionRequestedViewModel"
          },
          "action_taken": {
            "type": "array",
            "description": "Action(s) taken when processing the return",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.ReturnActionTakenViewModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the inventory item",
            "format": "int32",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "description": "Name of the inventory item",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity expected to be processed with the return",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Returns.LotInformationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false
          },
          "lot_number": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity_processed": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Returns.Post.1.0.Return.Id.Cancel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Post.1.0.Return.Id.Cancel.Not.Found.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Post.1.0.Return.Id.Cancel.Not.Found.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Post.1.0.Return.Id.Cancel.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Post.1.0.Return.Id.Cancel.Unprocessable.Entity.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Post.1.0.Return.Id.Cancel.Unprocessable.Entity.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Post.Api.Return.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Post.Api.Return.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Returns.Post.Api.Return.Id.Cancel.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Post.Api.Return.Id.Cancel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Post.Api.Return.Id.Cancel.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Post.Api.Return.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Post.Api.Return.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Returns.Post.Api.V1.Public.Create.CreationSourceId.Integer": {
        "type": "integer",
        "format": "int32",
        "default": 3,
        "additionalProperties": false
      },
      "Returns.Post.Api.V1.Public.Create.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.ProblemDetail": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "additionalProperties": false
        },
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.Put.1.0.Return.Id.Bad.Request.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Put.1.0.Return.Id.Bad.Request.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Put.1.0.Return.Id.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Put.1.0.Return.Id.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Put.1.0.Return.Id.Unprocessable.Entity.OneOf.ValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Put.1.0.Return.Id.Unprocessable.Entity.OneOf.ValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ValidationProblemDetails"
          }
        ]
      },
      "Returns.Put.Api.Return.Id.Authorization.String": {
        "type": "string",
        "additionalProperties": false
      },
      "Returns.Put.Api.Return.Id.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Returns.Put.Api.Return.Id.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Put.Api.Return.Id.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false
      },
      "Returns.Put.Api.Return.Id.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Returns.ReturnActi": {
        "type": "integer",
        "format": "int32",
        "additionalProperties": false,
        "enum": [0, 1, 2, 3]
      },
      "Returns.ReturnAction": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Default",
          "Restock",
          "Quarantine",
          "Dispose"
        ]
      },
      "Returns.ReturnActionRequestedViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnAction"
          },
          "action_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnActionSource"
          },
          "instructions": {
            "type": "string",
            "description": "Specific instructions to be taken for the inventory when processing the return",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.ReturnActionSource": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "InventoryDefault",
          "Override"
        ]
      },
      "Returns.ReturnActionTakenViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnAction"
          },
          "action_reason": {
            "type": "string",
            "description": "Reason the given action was taken",
            "additionalProperties": false,
            "nullable": true
          },
          "lot_information": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.LotInformationViewModel"
            },
            "nullable": false
          },
          "quantity_processed": {
            "type": "integer",
            "description": "Quantity of inventory processed with the taken action",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "additionalProperties": false
          }
        }
      },
      "Returns.ReturnInventory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "lotDate": {
            "type": "string",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "lotNumber": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "requestedAction": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnAction"
          }
        }
      },
      "Returns.ReturnInventoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "additionalProperties": false
          },
          "requested_action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnAction"
          }
        }
      },
      "Returns.ReturnInventoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the inventory item to return",
            "format": "int32",
            "example": 111222,
            "additionalProperties": false
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the returned inventory item in the return",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "example": 1,
            "additionalProperties": false
          },
          "requested_action": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnAction"
          }
        }
      },
      "Returns.ReturnOrderStatusHistoryViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnStatus"
          },
          "time_stamp": {
            "type": "string",
            "description": "Date this corresponding return order status was created",
            "format": "date-time",
            "additionalProperties": false
          }
        }
      },
      "Returns.ReturnOrderStatusHistoryViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Returns.ReturnOrderStatusHistoryViewModel"
        }
      },
      "Returns.ReturnOrderViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channel": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ChannelInfoViewModel"
          },
          "completed_date": {
            "type": "string",
            "description": "Completed date for a return order.",
            "format": "date-time",
            "additionalProperties": false,
            "nullable": true
          },
          "customer_name": {
            "type": "string",
            "description": "Customer name from the related shipment.",
            "additionalProperties": false,
            "nullable": true
          },
          "fulfillment_center": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.FulfillmentCenterViewModel"
          },
          "id": {
            "type": "integer",
            "description": "Unique id of the Return Order",
            "format": "int32",
            "additionalProperties": false
          },
          "insert_date": {
            "type": "string",
            "description": "Date this return order was created",
            "format": "date-time",
            "additionalProperties": false
          },
          "inventory": {
            "type": "array",
            "description": "List of inventory included in the return order",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.InventoryItemViewModel"
            },
            "nullable": true
          },
          "invoice_amount": {
            "type": "number",
            "description": "Invoiced amount of return order (sum of transaction amounts)",
            "format": "double",
            "additionalProperties": false,
            "nullable": true
          },
          "original_shipment_id": {
            "type": "integer",
            "description": "Id of the corresponding shipment that is the souce of the return",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "description": "Client-defined external unique id of the return order",
            "additionalProperties": false,
            "nullable": true
          },
          "return_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnType"
          },
          "status": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.ReturnStatus"
          },
          "store_order_id": {
            "type": "string",
            "description": "Store order for the related shipment.",
            "additionalProperties": false,
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number of the return shipment",
            "example": "860C8CDC8F0B4FC7AB69AC86C20539EC",
            "additionalProperties": false,
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "description": "Array of transactions affiliated with the return order",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/Returns.TransactionViewModel"
            },
            "nullable": true
          }
        }
      },
      "Returns.ReturnOrderViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Returns.ReturnOrderViewModel"
        }
      },
      "Returns.ReturnStatu": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "AwaitingArrival",
          "Arrived",
          "Processing",
          "Completed",
          "Cancelled"
        ]
      },
      "Returns.ReturnStatus": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "AwaitingArrival",
          "Arrived",
          "Processing",
          "Completed",
          "Cancelled"
        ]
      },
      "Returns.ReturnStatusArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Returns.ReturnStatus"
        }
      },
      "Returns.ReturnType": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Regular",
          "ReturnToSender"
        ]
      },
      "Returns.SortOrder": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "Newest",
          "Oldest"
        ]
      },
      "Returns.TagModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "additionalProperties": false
          },
          "value": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "additionalProperties": false
          }
        }
      },
      "Returns.TransactionLogSource": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "ReturnLabelInvoice",
          "ReturnProcessingFee",
          "ReturnToSenderFee"
        ]
      },
      "Returns.TransactionViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "description": "Transaction amount in dollars",
            "format": "double",
            "example": 2.5,
            "additionalProperties": false
          },
          "transaction_type": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Returns.TransactionLogSource"
          }
        }
      },
      "Returns.ValidationProblemDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "errors": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "type": "array",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            },
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Returns.ValidationProblemDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "errors": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "type": "array",
              "additionalProperties": false,
              "items": {
                "type": "string",
                "additionalProperties": false
              }
            },
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "readOnly": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "TriggerSync.Post.Api.Linnworks.TriggerSync.Bad.Request.String": {
        "type": "string",
        "additionalProperties": false
      },
      "TriggerSync.Post.Api.Linnworks.TriggerSync.Forbidden.String": {
        "type": "string",
        "additionalProperties": false
      },
      "TriggerSync.Post.Api.Linnworks.TriggerSync.Unauthorized.String": {
        "type": "string",
        "additionalProperties": false
      },
      "TriggerSync.fcToWHMapping": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "linnworks_locations": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "shipbob_fullfilment_center": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "TriggerSync.integrationRequest_linnworksConfig": {
        "type": "object",
        "example": {
          "config": {
            "allowedHeadersForLogging": "string",
            "confirmFulfillmentForProcessedOrders": true,
            "enableLinnworksTagCreation": true,
            "fcToWHMap": [
              {
                "linnworks_locations": "string",
                "shipbob_fullfilment_center": "string"
              }
            ],
            "inventorySync": true,
            "linnworksApiUrl": "string",
            "linnworksAvailableLocationsSelected": [
              "string"
            ],
            "logErrorRequestAndResponseData": true,
            "logRequestResponseHeader": true,
            "lookBackDays": 0,
            "markOrdersAsProcessed": true,
            "maxConcurrentRequests": 0,
            "orderSync": true,
            "productSync": true,
            "reconciliationSync": true,
            "shipBobApiUrl": "string",
            "startShippingDate": "string",
            "syncByDelegation": true,
            "syncPostalService": true,
            "trackingSync": true,
            "trackingSyncBatchSize": 0
          },
          "secrets": {
            "integrationToken": "string",
            "shipBobToken": "string"
          },
          "tenantName": "string"
        },
        "additionalProperties": false,
        "required": [
          "secrets",
          "config",
          "tenantName"
        ],
        "properties": {
          "config": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/TriggerSync.linnworksConfig"
          },
          "secrets": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/TriggerSync.integrationSecret"
          },
          "tenantName": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          }
        }
      },
      "TriggerSync.integrationSecret": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "shipBobToken",
          "integrationToken"
        ],
        "properties": {
          "integrationToken": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          },
          "shipBobToken": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          }
        }
      },
      "TriggerSync.integrationSuccessResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actionTaken": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "additionalProperties": false,
            "enum": [0, 1, 2]
          },
          "masterSyncId": {
            "type": "integer",
            "format": "int64",
            "additionalProperties": false,
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "format": "uuid",
            "additionalProperties": false
          }
        }
      },
      "TriggerSync.linnworksConfig": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "linnworksApiUrl",
          "shipBobApiUrl",
          "trackingSync",
          "orderSync",
          "inventorySync",
          "productSync",
          "lookBackDays",
          "startShippingDate"
        ],
        "properties": {
          "allowedHeadersForLogging": {
            "type": "string",
            "additionalProperties": false
          },
          "confirmFulfillmentForProcessedOrders": {
            "type": "boolean",
            "additionalProperties": false
          },
          "enableLinnworksTagCreation": {
            "type": "boolean",
            "additionalProperties": false
          },
          "fcToWHMap": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "$ref": "#/components/schemas/TriggerSync.fcToWHMapping"
            }
          },
          "inventorySync": {
            "type": "boolean",
            "additionalProperties": false
          },
          "linnworksApiUrl": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          },
          "linnworksAvailableLocationsSelected": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "string",
              "additionalProperties": false
            }
          },
          "logErrorRequestAndResponseData": {
            "type": "boolean",
            "additionalProperties": false
          },
          "logRequestResponseHeader": {
            "type": "boolean",
            "additionalProperties": false
          },
          "lookBackDays": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "markOrdersAsProcessed": {
            "type": "boolean",
            "additionalProperties": false
          },
          "maxConcurrentRequests": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          },
          "orderSync": {
            "type": "boolean",
            "additionalProperties": false
          },
          "productSync": {
            "type": "boolean",
            "additionalProperties": false
          },
          "reconciliationSync": {
            "type": "boolean",
            "additionalProperties": false
          },
          "shipBobApiUrl": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          },
          "startShippingDate": {
            "type": "string",
            "minLength": 1,
            "additionalProperties": false
          },
          "syncByDelegation": {
            "type": "boolean",
            "additionalProperties": false
          },
          "syncPostalService": {
            "type": "boolean",
            "additionalProperties": false
          },
          "trackingSync": {
            "type": "boolean",
            "additionalProperties": false
          },
          "trackingSyncBatchSize": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false
          }
        }
      },
      "Webhooks.CreateWebhookSubscriptionModel": {
        "type": "object",
        "example": {
          "subscription_url": "https://mywebsite.com/shipbob/handler",
          "topic": "order_shipped"
        },
        "additionalProperties": false,
        "required": [
          "subscription_url",
          "topic"
        ],
        "properties": {
          "subscription_url": {
            "type": "string",
            "description": "URL we will call when an event matching the subscription topic is raised. Must have ssl enabled (https) and accept POST requests with content type of application/json",
            "format": "uri",
            "example": "https://mywebsite.com/shipbob/handler",
            "additionalProperties": false
          },
          "topic": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Webhooks.Topics"
          }
        }
      },
      "Webhooks.Delete.1.0.Webhook.Id.Id.Integer": {
        "type": "integer",
        "description": "",
        "format": "int32",
        "additionalProperties": false
      },
      "Webhooks.Delete.1.0.Webhook.Id.Not.Found.OneOf.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Webhooks.HttpValidationProblemDetails"
          }
        ]
      },
      "Webhooks.Delete.1.0.Webhook.Id.Not.Found.OneOf.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "oneOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Webhooks.HttpValidationProblemDetails"
          }
        ]
      },
      "Webhooks.Get.1.0.Internal.Webhook.ChannelId.Integer": {
        "type": "integer",
        "description": "Optional channel id of the webhooks requested",
        "format": "int32",
        "additionalProperties": false,
        "nullable": true
      },
      "Webhooks.Get.1.0.Internal.Webhook.Limit.Integer": {
        "type": "integer",
        "description": "Amount of Webhooks per page to request",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Internal.Webhook.Page.Integer": {
        "type": "integer",
        "description": "Page of Webhooks to get",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Internal.Webhook.UserId.Integer": {
        "type": "integer",
        "description": "User Id of the webhooks requested",
        "format": "int32",
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Webhooks.Get.1.0.Webhook.Limit.Integer": {
        "type": "integer",
        "description": "Amount of Webhooks per page to request",
        "format": "int32",
        "maximum": 250,
        "minimum": 1,
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.OK.Next.Page.String": {
        "type": "string",
        "description": "The href of the next page of results, if there is a next page",
        "format": "",
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.OK.Page.Number.Int": {
        "type": "integer",
        "description": "Number of the current page",
        "format": "",
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.OK.Page.Size.Int": {
        "type": "integer",
        "description": "Number of results per page",
        "format": "",
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.OK.Total.Count.Int": {
        "type": "integer",
        "description": "Total number of results",
        "format": "",
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.OK.Total.Pages.Int": {
        "type": "integer",
        "description": "Total number of pages of results",
        "format": "",
        "additionalProperties": false
      },
      "Webhooks.Get.1.0.Webhook.Page.Integer": {
        "type": "integer",
        "description": "Page of Webhooks to get",
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "additionalProperties": false
      },
      "Webhooks.HttpValidationProblemDetail": {
        "additionalProperties": false,
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Webhooks.ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "additionalProperties": false,
                  "items": {
                    "type": "string",
                    "additionalProperties": false
                  }
                },
                "nullable": true
              }
            }
          }
        ]
      },
      "Webhooks.HttpValidationProblemDetails": {
        "additionalProperties": false,
        "allOf": [
          {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Webhooks.ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "additionalProperties": false,
                  "items": {
                    "type": "string",
                    "additionalProperties": false
                  }
                },
                "nullable": true
              }
            }
          }
        ]
      },
      "Webhooks.Post.1.0.Webhook.Bad.Request.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Webhooks.Post.1.0.Webhook.Shipbob.Channel.Id.Integer": {
        "type": "integer",
        "description": "",
        "format": "int32",
        "additionalProperties": false,
        "nullable": true
      },
      "Webhooks.Post.1.0.Webhook.Unprocessable.Entity.Object": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "additionalProperties": false,
          "items": {
            "type": "string",
            "additionalProperties": false
          }
        }
      },
      "Webhooks.ProblemDetail": {
        "type": "object",
        "discriminator": {
          "propertyName": "$type"
        },
        "additionalProperties": false,
        "required": [
          "$type"
        ],
        "properties": {
          "$type": {
            "type": "string",
            "additionalProperties": false
          },
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Webhooks.ProblemDetails": {
        "type": "object",
        "discriminator": {
          "propertyName": "$type"
        },
        "additionalProperties": false,
        "required": [
          "$type"
        ],
        "properties": {
          "$type": {
            "type": "string",
            "additionalProperties": false
          },
          "detail": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "instance": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "additionalProperties": false,
            "nullable": true
          },
          "title": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          },
          "type": {
            "type": "string",
            "additionalProperties": false,
            "nullable": true
          }
        }
      },
      "Webhooks.Topic": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "order_shipped",
          "shipment_delivered",
          "shipment_exception",
          "shipment_onhold",
          "shipment_cancelled"
        ]
      },
      "Webhooks.Topics": {
        "type": "string",
        "additionalProperties": false,
        "enum": [
          "order_shipped",
          "shipment_delivered",
          "shipment_exception",
          "shipment_onhold",
          "shipment_cancelled"
        ]
      },
      "Webhooks.WebhookViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "created_at": {
            "type": "string",
            "description": "Timestamp the webhook subscription was created",
            "format": "date-time",
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "description": "ID of the webhook subscription",
            "format": "int32",
            "example": 12345,
            "additionalProperties": false
          },
          "subscription_url": {
            "type": "string",
            "description": "URL subscription events will be posted to",
            "format": "uri",
            "additionalProperties": false,
            "nullable": true
          },
          "topic": {
            "additionalProperties": false,
            "$ref": "#/components/schemas/Webhooks.Topics"
          }
        }
      },
      "Webhooks.WebhookViewModelArray": {
        "type": "array",
        "additionalProperties": false,
        "items": {
          "additionalProperties": false,
          "$ref": "#/components/schemas/Webhooks.WebhookViewModel"
        }
      }
    },
    "securitySchemes": {
      "PAT": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Provide your personal access token in the format 'Bearer {your_personal_access_token}'"
      },
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.shipbob.com/connect/authorize",
            "tokenUrl": "https://auth.shipbob.com/connect/token",
            "scopes": {
              "channels_read": "Read channel metadata",
              "channels_write": "Write channel metadata",
              "inventory_read": "Access inventory read operations",
              "inventory_write": "Access inventory write operations",
              "orders_read": "Access orders read operations",
              "orders_write": "Access orders write operations",
              "products_read": "Access products read operations",
              "products_write": "Access products write operations",
              "receiving_read": "Access receiving read operations",
              "receiving_write": "Access receiving write operations",
              "returns_read": "Access returns read operations",
              "returns_write": "Access returns write operations",
              "webhooks_read": "Access webhooks read operations",
              "webhooks_write": "Access webhooks write operations",
              "locations_read": "Access locations read operations"
            }
          }
        },
        "description": "OAuth2 authentication using JWT tokens"
      }
    }
  }
}